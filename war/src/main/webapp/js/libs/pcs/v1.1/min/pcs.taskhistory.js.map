{
  "version": 3,
  "sources": [
    "../../node_modules/oraclejet/dist/js/libs/oj/ojL10n.js",
    "libs/pcs/v1.1/debug/resources/nls/pcsSnippetsResource.js",
    "libs/pcs/v1.1/debug/resources/nls/pcsSnippetsResource!ojL10n",
    "../../node_modules/requirejs-text/text.js",
    "text!pcs/taskhistory/templates/pcs-task-history-container.html",
    "libs/pcs/v1.1/debug/util/loggerUtil.js",
    "libs/pcs/v1.1/debug/util/pcsUtil.js",
    "libs/pcs/v1.1/debug/data-services/DataServices.js",
    "libs/pcs/v1.1/debug/util/dateUtil.js",
    "libs/pcs/v1.1/debug/tasklist/viewModel/Task.js",
    "libs/pcs/v1.1/debug/taskhistory/viewModel/TaskHistory.js",
    "libs/pcs/v1.1/debug/taskhistory/viewModel/taskHistoryVM.js",
    "text!pcs/taskhistory/templates/pcs-taskhistory-error.html",
    "libs/pcs/v1.1/debug/pcs.taskhistory.js"
  ],
  "names": [],
  "mappingszZA;AACA;AACA;AACA,ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjjhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpt
  "file": "pcs.taskhistory.js",
  "sourcesContent": [
    "/*\n RequireJS i18n 2.0.2 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n Available via the MIT or new BSD license.\n see: http://github.com/requirejs/i18n for details\n*/\n(function(){function s(a,b,d,h,g,e){b[a]||(a=a.replace(/^zh-(Hans|Hant)-([^-]+)$/,\"zh-$2\"));return b[a]?(d.push(a),!0!==b[a]&&1!==b[a]||h.push(g+a+\"/\"+e),!0):!1}function B(a){var b=a.toLowerCase().split(/-|_/);a=[b[0]];var d=1,h;for(h=1;h<b.length;h++){var g=b[h],e=g.length;if(1==e)break;switch(d){case 1:if(d=2,4==e){a.push(g.charAt(0).toUpperCase()+g.slice(1));break}case 2:d=3;a.push(g.toUpperCase());break;default:a.push(g)}}if(!(\"zh\"!=a[0]||1<a.length&&4==a[1].length)){b=\"Hans\";d=1<a.length?a[1]:\nnull;if(\"TW\"===d||\"MO\"===d||\"HK\"===d)b=\"Hant\";a.splice(1,0,b)}return a}function w(a,b){for(var d in b)b.hasOwnProperty(d)&&(null==a[d]?a[d]=b[d]:\"object\"===typeof b[d]&&\"object\"===typeof a[d]&&w(a[d],b[d]))}var x=/(^.*(^|\\/)nls(\\/|$))([^\\/]*)\\/?([^\\/]*)/;define('ojL10n',[\"module\"],function(a){var b=a.config?a.config():{};return{version:\"2.0.1+\",load:function(a,h,g,e){e=e||{};e.locale&&(b.locale=e.locale);var c=x.exec(a),n=c[1],f,p=c[5],q,k=[],t={},y,r=\"\",z,A,l,u,v,m;c[5]?(n=c[1],a=n+p,f=c[4]):(p=c[4],f=b.locale,\n\"undefined\"!==typeof document?(f||(f=e.isBuild?\"root\":document.documentElement.lang)||(f=void 0===navigator?\"root\":navigator.language||navigator.userLanguage||\"root\"),b.locale=f):f=\"root\");q=B(f);z=b.noOverlay;A=b.defaultNoOverlayLocale;if(c=b.merge)if(l=c[n+p])c=x.exec(l),u=c[1],v=c[4];m=[];for(c=0;c<q.length;c++)y=q[c],r+=(r?\"-\":\"\")+y,m.push(r);e.isBuild?(k.push(a),l&&k.push(l),h(k,function(){g()})):(\"query\"==b.includeLocale&&(a=h.toUrl(a+\".js\"),a+=(-1===a.indexOf(\"?\")?\"?\":\"&\")+\"loc=\"+f),e=[a],\nl&&e.push(l),h(e,function(a,b){var d=[],c=function(a,b,c){for(var e=z||!0===a.__noOverlay,h=A||a.__defaultNoOverlayLocale,g=!1,f=m.length-1;0<=f&&(!g||!e);f--)g=s(m[f],a,d,k,b,c);f=1===m.length&&\"root\"===m[0];e&&(f||!g)&&h&&s(h,a,d,k,b,c);f||s(\"root\",a,d,k,b,c)};c(a,n,p);var e=d.length;b&&c(b,u,v);h(k,function(){var c=function(a,b,c,e,f){for(;b<c&&d[b];b++){var g=d[b],k=a[g];if(!0===k||1===k)k=h(e+g+\"/\"+f);w(t,k)}};c(b,e,d.length,u,v);c(a,0,e,n,p);t._ojLocale_=q.join(\"-\");g(t)})}))}}})})();\n\n",
    "define('pcs/resources/nls/pcsSnippetsResource',{root:!0,de:!0,es:!0,fr:!0,it:!0,ja:!0,ko:!0,pt:!0,\"zh-Hans\":!0,\"zh-Hant\":!0});\n",
    "\n",
    "/**\n * @license text 2.0.15 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/text/LICENSE\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    function useDefault(value, defaultValue) {\n        return value === undefined || value === '' ? defaultValue : value;\n    }\n\n    //Allow for default ports for http and https.\n    function isSamePort(protocol1, port1, protocol2, port2) {\n        if (port1 === port2) {\n            return true;\n        } else if (protocol1 === protocol2) {\n            if (protocol1 === 'http') {\n                return useDefault(port1, '80') === useDefault(port2, '80');\n            } else if (protocol1 === 'https') {\n                return useDefault(port1, '443') === useDefault(port2, '443');\n            }\n        }\n        return false;\n    }\n\n    text = {\n        version: '2.0.15',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.lastIndexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || isSamePort(uProtocol, uPort, protocol, port));\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'] &&\n            !process.versions['atom-shell'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file[0] === '\\uFEFF') {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n",
    "\ndefine('text!pcs/taskhistory/templates/pcs-task-history-container.html',[],function () { return '<div id=\"pcs-th-panelPage\">\\n\\t<div class=\"oj-flex\">\\n\\t\\t<div class=\"oj-sm-12 oj-panel oj-panel-alt2 oj-margin demo-mypanel\"  style=\"background-color: #e9ebee;\">\\n\\t\\t\\t<div >\\n\\t\\t\\t\\t<h3 style=\"background-color: #c9d3dd; padding: 10px; margin: -14px;\" data-bind=\"text:bundle.pcs.taskHistory.history\"></h3>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<div style=\"padding-left: 30px; padding-top: 30px; margin-right: 100px;\">\\n\\t\\t\\t\\t\\t\\t<ul style=\"border-left: 3px solid #6ae25d; list-style: none outside;\">\\n\\t\\t\\t\\t\\t\\t\\t<div id=\"pcs-th-taskHistoryDiv-new\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: procHistData -->\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<li data-bind=\"visible: $data.activityType === \\'START_EVENT\\'\" class=\\'pcs-th-green-dot-image\\'>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"html: $data.displayMessage\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-date\\' data-bind=\"text: $data.creationDate\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br><br>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<li data-bind=\"visible: $data.activityType === \\'END_EVENT\\'\" class=\\'pcs-th-green-dot-image\\'>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"text: $data.displayMessage\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-date\\' data-bind=\"text: $data.creationDate\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br><br>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<li data-bind=\"visible: $data.activityType === \\'FUTURE_TASK\\'\" class=\\'pcs-th-grey-dot-image\\'>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"html: $data.displayMessage\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br><br>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<li data-bind=\"visible: ($data.activityType === \\'USER_TASK\\' && $data.showExpanded === \\'false\\')\" class=\\'pcs-th-green-dot-image\\'>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-task-title\\' data-bind=\"text: $data.displayMessage\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-date\\' data-bind=\"text: $data.creationDate\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br><br>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"visible: ($data.activityType === \\'USER_TASK\\' && $data.showExpanded === \\'true\\')\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li  class=\\'pcs-th-blue-dot-image pcs-th-history-user-task-top\\'>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-task-title\\' data-bind=\"text: $data.displayMessage\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-date\\' data-bind=\"text: $data.creationDate\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--assigneesHTMLTable starts -->\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--<table>\\n                                            <tr>\\n                                                <td rowspan=\\'2\\' style=\\'padding-left: 0px\\'>\\n                                                    <table>\\n                                                        <tr>\\n                                                            <td class=\\'pcs-th-assignee-table\\'>\\n                                                                <div data-bind=\"attr: { class: $data.routingTypeImageClass, title: $data.routingTypeImageTitle }\"/>\\n                                                                &lt;!&ndash;<img data-bind=\"attr: { class: $data.routingTypeImageClass, title: $data.routingTypeImageTitle }\">&ndash;&gt;\\n                                                            </td>\\n                                                        </tr>\\n                                                        <tr>\\n                                                            <td class=\\'pcs-th-assignee-table\\'>\\n                                                                <span data-bind=\"text: $data.routingTypeMoreInfo\"/>\\n                                                            </td>\\n                                                        </tr>\\n                                                    </table>\\n                                                </td>\\n                                                &lt;!&ndash; ko foreach: $data.originalAssignees &ndash;&gt;\\n\\n                                                    <td class=\\'pcs-th-assignee-table\\'>\\n                                                        <div data-bind=\"css: $data.assigneeTypeImageClass\"/>\\n                                                        &lt;!&ndash;<img data-bind=\"css: $data.assigneeTypeImageClass\">&ndash;&gt;\\n                                                    </td>\\n\\n                                                &lt;!&ndash; /ko&ndash;&gt;\\n                                            </tr>\\n                                            <tr>\\n                                                &lt;!&ndash; ko foreach: $data.originalAssignees &ndash;&gt;\\n                                                    <td class=\\'pcs-th-assignee-table\\'>\\n                                                        <span class=\\'pcs-th-history-assignee-text\\' data-bind=\"text: $data.id\">\\n                                                        </span>\\n                                                    </td>\\n                                                &lt;!&ndash; /ko&ndash;&gt;\\n                                            </tr>\\n                                        </table>-->\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--assigneesHTMLTable ends -->\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: $data.detailedHistory -->\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li data-bind=\"visible: $data.actionType === \\'REGULAR\\'\" class=\\'pcs-th-history-user-task-other-rows\\' style=\\'padding-bottom: 26px;\\'>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\'float:left; padding-right: 34px; margin-left: -10px\\' data-bind=\"css: $data.imageClass\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--<img data-bind=\"css: $data.imageClass\">-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\\'padding-top: 11px; float: left;\\' data-bind=\"html: $data.displayMessage\"/> &nbsp &nbsp\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-date pcs-th-history-date-float-right\\' style=\\'padding-top: 11px;\\' data-bind=\"text: $data.creationDate\"/>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li data-bind=\"visible: $data.actionType === \\'COMMENT_ADDED\\'\" class=\\'pcs-th-history-user-task-other-rows\\'>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\'float:left; padding-right: 34px; margin-left: -10px\\' data-bind=\"css: $data.imageClass\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--<img data-bind=\"css: $data.imageClass\">-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"html: $data.displayMessage\"></span> &nbsp &nbsp\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-date pcs-th-history-date-float-right\\' data-bind=\"text: $data.creationDate\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-comment\\' data-bind=\"text: $data.comments\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<li data-bind=\"visible: $data.actionType === \\'ATTACHMENT_ADDED\\'\" class=\\'pcs-th-history-user-task-other-rows\\'>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\'float:left; padding-right: 34px; margin-left: -10px\\' data-bind=\"css: $data.imageClass\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--<img data-bind=\"css: $data.imageClass\">-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span data-bind=\"html: $data.displayMessage\"></span> &nbsp &nbsp\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\'pcs-th-history-date pcs-th-history-date-float-right\\' data-bind=\"text: $data.creationDate\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--<span class=\\'pcs-th-history-comment\\' data-bind=\"text: $data.attachmentName\"></span>-->\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"#\"  data-bind=\"text: $data.attachmentName, value : $data.attachmentURL, click:$root.onAttachmentClick\"/>\\n\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko-->\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko-->\\n\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n<!--<div id=\"pcs-th-panelPage-temp\">\\n\\t<div class=\"oj-flex\">\\n\\t\\t<div class=\"oj-panel oj-panel-alt2 oj-margin demo-mypanel\"  style=\"background-color: #e9ebee;\">\\n\\t\\t\\t<div >\\n\\t\\t\\t\\t<h3 style=\"background-color: #c9d3dd; padding: 10px; margin: -14px;\" data-bind=\"text:bundle.pcs.taskHistory.history\"></h3>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<div style=\"padding-left: 30px; padding-top: 30px; margin-right: 100px;\">\\n\\t\\t\\t\\t\\t\\t<ul style=\"border-left: 3px solid #6ae25d; list-style: none outside;\">\\n\\t\\t\\t\\t\\t\\t\\t<div id=\"pcs-th-taskHistoryDiv\">\\n\\n\\n\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>-->\\n';});\n\n",
    "/**\n * Created by nisabhar on 4/9/18.\n */\n\ndefine('pcs/util/loggerUtil',['jquery'],function($){\n\t'use strict';\n\n\tfunction PCSLogger() {\n\t\tvar self= this;\n\t\tself.enableLog = false;\n\n\t\treturn {\n\t\t\tlog: function(value) {\n\t\t\t\tif (self.enableLog) {\n\t\t\t\t\tconsole.log(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror : function (value) {\n\t\t\t\tif (self.enableLog) {\n\t\t\t\t\tconsole.error(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdebug : function (value) {\n\t\t\t\tif (self.enableLog) {\n\t\t\t\t\tconsole.debug(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\twarn : function (value) {\n\t\t\t\tif (self.enableLog) {\n\t\t\t\t\tconsole.warn(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tenableLog :  function (){\n\t\t\t\tself.enableLog = true;\n\t\t\t},\n\t\t\tdisableLog : function(){\n\t\t\t\tself.enableLog = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar instance  = new PCSLogger();\n\t//console.log('####Intitating logger Util');\n\n\treturn instance;\n\n});\n\n\n",
    "/**\n * Created by nisabhar on 3/11/2016.\n */\n\ndefine('pcs/util/pcsUtil',['module', 'knockout', 'ojs/ojcore', 'jquery','pcs/util/loggerUtil'], function(module, ko, oj, $,loggerUtil) {\n    'use strict';\n\n    var eventList = {};\n\n    //A Pub/Sub system based on JQuery callbacks\n    $.CustomEvent = function(eventId) {\n        var callbacks;\n        var pubsub = eventId && eventList[eventId];\n\n        if (!pubsub) {\n            callbacks = $.Callbacks();\n            pubsub = {\n                publish: callbacks.fire,\n                subscribe: callbacks.add,\n                unsubscribe: callbacks.remove\n            };\n            if (eventId) {\n                eventList[eventId] = pubsub;\n            }\n        }\n        return pubsub;\n    };\n\n    //IE polyfill for the CustomEvent constructor\n\t(function () {\n\t\tif ( typeof window.CustomEvent === \"function\" ) return false; //If not IE\n\n\t\tfunction CustomEvent ( event, params ) {\n\t\t\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\n\t\t\tvar evt = document.createEvent( 'CustomEvent' );\n\t\t\tevt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n\t\t\treturn evt;\n\t\t}\n\n\t\tCustomEvent.prototype = window.Event.prototype;\n\n\t\twindow.CustomEvent = CustomEvent;\n\t})();\n\n    var _eventHandler = {\n        addHandler: function(element, type, handler) {\n            if (element.addEventListener) {\n                element.addEventListener(type, handler, false);\n            } else if (element.attachEvent) {\n                element.attachEvent('on' + type, handler);\n            } else {\n                element['on' + type] = handler;\n            }\n        },\n        removeHandler: function(element, type, handler) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, handler, false);\n            } else if (element.detachEvent) {\n                element.detachEvent('on' + type, handler);\n            } else {\n                element['on' + type] = null;\n            }\n        }\n    };\n\n    if (!String.prototype.startsWith) {\n        Object.defineProperty(String.prototype, 'startsWith', {\n            enumerable: false,\n            value: function(searchString, position) {\n                position = position || 0;\n                return this.substr(position, searchString.length) === searchString;\n            }\n        });\n    }\n\n    if (!String.prototype.endsWith) {\n        Object.defineProperty(String.prototype, 'endsWith', {\n            enumerable: false,\n            value: function(searchString, position) {\n                var subjectString = this.toString();\n                if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n                    position = subjectString.length;\n                }\n                position -= searchString.length;\n                var lastIndex = subjectString.indexOf(searchString, position);\n                return lastIndex !== -1 && lastIndex === position;\n            }\n        });\n    }\n\n    //TODO nisabhar : Remove this both commented code, We can not assume where snippets is being consumed\n    //util for centering any element in the center of the page\n    //stackoverflow - http://stackoverflow.com/questions/210717/using-jquery-to-center-a-div-on-the-screen\n    //$.fn.center = function () {\n    //    this.css('position','absolute');\n    //    this.css('top', Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +\n    //            $(window).scrollTop()) + 'px');\n    //    this.css('left', Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +\n    //            $(window).scrollLeft()) + 'px');\n    //    return this;\n    //};\n    //\n    ////show loading animation for any ajax event\n    //$(document).bind('ajaxStart', function(){\n    //    $('body').append('<img id='pcs-loading-anim' src='css/pcs/images/spin.gif'/>');\n    //    $('#pcs-loading-anim').center();\n    //}).bind('ajaxStop', function(){\n    //    $('#pcs-loading-anim').remove();\n    //});\n\n    /**\n     * This method is to do dummy ADF call\n     * @param url\n     * @private\n     */\n    var _adfProxyCall = function(url) {\n        // Let the container handle if container is willing to\n        if (typeof window.doADFProxyCall === 'function') {\n            window.doADFProxyCall(url);\n        }\n        // else handle ourself\n        else {\n            if (url) {\n                window.location.assign(url);\n            }\n        }\n    };\n\n    /**\n     * Method to parse multi part data used by startform plugin\n     * @param jqXHR\n     * @returns {{}}\n     * @private\n     */\n    var _multipartParse = function(jqXHR) {\n        var contentType = jqXHR.getResponseHeader('Content-Type');\n        var body = jqXHR.response;\n\n        // Examples for content types:\n        //      multipart/form-data; boundary='----7dd322351017c'; ...\n        //      multipart/form-data; boundary=----7dd322351017c; ...\n        var m = contentType.match(/boundary=(?:'([^']+)'|([^;]+))/i);\n\n        if (!m) {\n            throw new Error('Bad content-type header, no multipart boundary');\n        }\n\n        var boundary = m[1] || m[2];\n        var isRaw = typeof(body) !== 'string';\n        var s, i;\n\n        function Header_parse(headerString) {\n\n            var headers = headerString.split('\\r\\n');\n\n            var contentType = 'text/plain';\n            var fieldName = 'pcsFormUrl';\n\n            //Result object\n            var headerFields = {\n                contentType: contentType,\n                fieldName: fieldName\n            };\n\n            for (var j = 1; j < headers.length; j++) {\n                var header = headers[j];\n                /*jshint validthis:true */\n                var matchResult = header.match(/^.*filename=\"([^\"]*)\"/);\n                if (matchResult) {\n                    headerFields.fieldName = matchResult[1];\n                } else {\n                    var searchStr = 'Content-Type:';\n                    if (header.indexOf(searchStr) > -1) {\n                        matchResult = header.substring(header.indexOf(searchStr) + searchStr.length);\n                    }\n                    if (matchResult) {\n                        headerFields.contentType = matchResult.trim();\n                    }\n                }\n            }\n            return headerFields;\n        }\n\n        // \\r\\n is part of the boundary.\n        boundary = '\\r\\n--' + boundary;\n\n        if (isRaw) {\n            var view = new Uint8Array(body);\n            //s = String.fromCharCode.apply(null, view);\n\n            var CHUNK_SZ = 0x8000;\n            var c = [];\n            for (i = 0; i < view.length; i += CHUNK_SZ) {\n                c.push(String.fromCharCode.apply(null, view.subarray(i, i + CHUNK_SZ)));\n            }\n            s = c.join('');\n        } else {\n            s = body;\n        }\n\n        // Prepend what has been stripped by the body parsing mechanism.\n        s = '\\r\\n' + s;\n\n        var parts = s.split(new RegExp(boundary)),\n            partsByName = {};\n\n        // First part is a preamble, last part is closing '--'\n        for (i = 1; i < parts.length - 1; i++) {\n            // var subparts = parts[i].split('\\r\\n\\r\\n');\n            // var headers = subparts[0].split('\\r\\n');\n            // partsByName[fieldName] = isRaw?rawStringToBuffer(subparts[1]):subparts[1];\n\n            var searchStr = '\\r\\n\\r\\n';\n            var data = parts[i].substring(parts[i].indexOf(searchStr) + searchStr.length); // we need to igonore the two enters in string thats why +3\n            var header = parts[i].substring(0, parts[i].indexOf(searchStr));\n\n            var headerResult = Header_parse(header);\n\n            var convertDataToBuffer = false;\n\n            if (isRaw && !headerResult.contentType.startsWith('text')) {\n                convertDataToBuffer = true;\n            }\n\n            partsByName[headerResult.fieldName] = {\n                data: data,\n                contentType: headerResult.contentType,\n                fileName: headerResult.fieldName\n            };\n        }\n        return partsByName;\n    };\n\n    //Usage =hideStartform=false&filter={'processName':'AttachApplicationProcess'}&hideSave=true&hideDiscard=true&submitLabel='My Submit'\n    // Read a page's GET URL variables and return them as an associative array.\n    function _getUrlParametersObject() {\n        var vars = {},\n            hash;\n\n        //no query params\n        if (window.location.href.indexOf('?') === -1) {\n            return vars;\n        }\n        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n        for (var i = 0; i < hashes.length; i++) {\n            hash = hashes[i].split('=');\n            //vars[hash[0]] = hash[1];\n            var key = decodeURIComponent(hash[0]);\n            var val = decodeURIComponent(hash[1]);\n            var obj = JSON.parse(val);\n            vars[key] = obj;\n        }\n\n        return vars;\n    }\n\n    var _getAuthToken = function(url) {\n        return $.ajax({\n            type: 'GET',\n            url: url,\n            dataType: 'text',\n            xhrFields: {\n                withCredentials: true\n            }\n        });\n    };\n\n    return {\n        adfProxyCall: _adfProxyCall,\n        getAuthToken: _getAuthToken,\n        multipartParse: _multipartParse,\n        getUrlParametersObject: _getUrlParametersObject,\n        eventHandler: _eventHandler,\n        initComponentForIFrame: function(options, loadComponent, element) {\n            if (!$.isEmptyObject($.pcsConnection)) {\n                loadComponent();\n            } else {\n                $.pcsConnection = {};\n                //$.pcsConnection.serverURL = \"http://den02biu.us.oracle.com:7001\";\n\n\t\t\t\t// See if test mode is passed\n\t\t\t\tif(!$.isEmptyObject(options)){\n\t\t\t\t\tif(options.testMode) {\n\t\t\t\t\t\t$.pcsConnection.testMode = options.testMode;\n\t\t\t\t\t}\n\t\t\t\t\tif(options.serverURL){\n\t\t\t\t\t\t$.pcsConnection.serverURL =options.serverURL;\n\t\t\t\t\t}\n\t\t\t\t\tif(options.authInfo){\n\t\t\t\t\t\t$.pcsConnection.authInfo =options.authInfo;\n\t\t\t\t\t\tloadComponent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n                var util = this;\n                var scriptCallback = function() {\n                    var serverURL = util.getServerURL();\n                    loggerUtil.log('Script loaded and ready, getting token');\n                    util.getAuthToken(serverURL + '/ic/process/workspace/auth/token')\n                        .done(function(data) {\n                            if (data && data.startsWith('<html')) {\n                                element.text('User cannot be authorized').show();\n                            } else {\n                                $.pcsConnection.authInfo = 'Bearer ' + data;\n                                loadComponent();\n                            }\n                        })\n                        .fail(function(jqXHR) {\n                            element.text('User cannot be authorized').show();\n                        });\n                };\n\n                //Load a script tag on PCS Server\n                var script = document.createElement('script');\n                //real browsers\n                script.onload = scriptCallback;\n                //Internet explorer\n                script.onreadystatechange = function() {\n                    if (this.readyState === 'complete') {\n                        scriptCallback();\n                    }\n                };\n\n                var serverURL = this.getServerURL();\n                script.src = serverURL + '/ic/process/workspace/faces/js/homePage.js';\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        },\n        getCookie: function(key) {\n            var result;\n            return (result = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(document.cookie)) ? (result[1]) : null;\n        },\n\t\tstoreLoggedInUser : function (data) {\n\n\t\t\t$.pcsConnection['isAdmin'] = data.adminFlag;\n\t\t\t$.pcsConnection['isProcessOwner'] = false;\n\n\t\t\tif(data.roles && data.roles.items){\n\t\t\t\t$.each(data.roles.items, function(index, role) {\n\t\t\t\t\tif(role.id.endsWith('.ProcessOwner')){\n\t\t\t\t\t\t$.pcsConnection['isProcessOwner'] = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n        getServerURL: function() {\n            if ($.pcsConnection && $.pcsConnection.serverURL) {\n                return $.pcsConnection.serverURL.endsWith('/') ? $.pcsConnection.serverURL.substring(0, $.pcsConnection.serverURL.length - 1) : $.pcsConnection.serverURL;\n            } else {\n            \tvar url = window.location.origin;\n\t\t\t\tif (!$.pcsConnection) {\n\t\t\t\t\t$.pcsConnection= {};\n\t\t\t\t}\n\t\t\t\t$.pcsConnection.serverURL =url;\n                return url;\n            }\n        },\n        getRestUri: function() {\n            //if($.pcsConnection.restURI){\n            //    return $.pcsConnection.restURI  ;\n            //}else{\n            return '/bpm/api/4.0/';\n            //}\n        },\n        getAuthInfo: function() {\n            if ($.pcsConnection && $.pcsConnection.authInfo) {\n                var authInfo = $.pcsConnection.authInfo;\n                if (!authInfo.startsWith('Bearer ') && !authInfo.startsWith('Basic ')) {\n                    authInfo = 'Bearer ' + authInfo;\n                }\n                return authInfo;\n            }\n            return '';\n        },\n        getRestURL: function() {\n            if ($.pcsConnection && $.pcsConnection.restURL) {\n                return $.pcsConnection.restURL;\n            } else {\n                var url = this.getServerURL() + this.getRestUri();\n                if ($.pcsConnection) {\n                    $.pcsConnection.restURL = url;\n                }\n                return url;\n            }\n        },\n        getDpServerURL: function() {\n            if ($.pcsConnection && $.pcsConnection.dpServerURL) {\n                return $.pcsConnection.dpServerURL.endsWith('/') ? $.pcsConnection.dpServerURL.substring(0, $.pcsConnection.dpServerURL.length - 1) : $.pcsConnection.dpServerURL;\n            } else {\n\t\t\t\treturn this.getServerURL();\n            }\n        },\n        getDpRestURL: function() {\n            var url = this.getDpServerURL() + '/bpm/api/4.0/';\n            return url;\n        },\n\t\tbeforeRequestCallback: function(xhr,util){\n\t\t\t//Dummy ADF call\n\t\t\tutil.adfProxyCall();\n\n\t\t\txhr.setRequestHeader('Authorization', util.getAuthInfo());\n\t\t\tif (util.isTestMode()) {\n\t\t\t\txhr.setRequestHeader('pcs_mode', 'dev');\n\t\t\t}\n\t\t\tvar locale = requirejs.s.contexts._.config.locale;\n\t\t\tif(locale){\n\t\t\t\txhr.setRequestHeader('Accept-Language', locale);\n\t\t\t}\n\t\t},\n        isTestMode: function() {\n            if ($.pcsConnection && $.pcsConnection.testMode) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        taskIconColor: function(str) {\n\t\t\tvar colorCodes = [ '#6e8598', '#754b9a', '#45ac62', '#ed813d', '#3f92d0', '#E85E93',\n\t\t\t\t'#81BB5F', '#DFE146', '#FABC39', '#EB5B60', '#1FB4AD', '#00B6D1'];\n\n            if (!str) {\n                return 'grey';\n            }\n            var hash = 0,\n                i, chr, len;\n\n            for (i = 0, len = str.length; i < len; i++) {\n                chr = str.charCodeAt(i);\n                hash = ((hash << 5) - hash) + chr;\n                hash |= 0; // Convert to 32bit integer\n            }\n\n            // var code = hash;\n            // var B = code & 0xFF;\n            //\n            // code >>= 8;\n            // var G = code & 0xFF;\n            //\n            // code >>= 8;\n            // var R = code & 0xFF;\n            //\n            // return 'rgb(' + R + ',' + G + ',' + B + ')';\n\n            var index = hash % (colorCodes.length) ;\n\n            return colorCodes[Math.abs(index)];\n        },\n        taskInitials: function(taskName) {\n            if (!taskName) {\n                return 'NA';\n            }\n\n            taskName = taskName.replace(' ', '');\n            var firstCharUpper = taskName.charAt(0).toUpperCase();\n            var secondCharUpper = '';\n            for (var i = 1; i < taskName.length; i++) {\n                if (taskName.charAt(i) === taskName.charAt(i).toUpperCase()) {\n                    secondCharUpper = taskName.charAt(i);\n                    break;\n\n                }\n            }\n\n            return firstCharUpper + secondCharUpper;\n\n        },\n\t\tgetRandomInt : function (min, max) {\n\t\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n        },\n\t\tunApplyBindings : function($node, remove) {\n\t\t\t// unbind events\n\t\t\t$node.find('*').each(function() {\n\t\t\t\t$(this).off();\n\t\t\t\t$(this).unbind();\n\t\t\t});\n\n\t\t\t$node.off();\n\n\t\t\t// Remove KO subscriptions and references\n\t\t\tif (remove) {\n\t\t\t\tko.cleanNode($node[0]);\n\t\t\t\t$node.find('*').each(function() {\n\t\t\t\t\t$(this).remove();\n\t\t\t\t});\n\t\t\t\tko.removeNode($node);\n\t\t\t} else {\n\t\t\t\tko.cleanNode($node);\n\t\t\t\t$node.find('*').each(function() {\n\t\t\t\t\t$(this).remove();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n        compositeVersion: function (formMetadataURL) {\n            //'webforms/oracleinternalpcs~Mortgage_Underwriting!1*soa_1b4254aa-b094-4cc2-9ea7-29fd58919997~6f5740fb-a6d3-4f82-a022-49854f89accb~c3f48544-3ea0-4238-9d8c-a3e8cedec34c',\n            var version;\n            if (formMetadataURL){\n                try{\n                    var splitOnEsclamation = formMetadataURL.split('!');\n                    var splitOnStar = splitOnEsclamation[1].split('*');\n                    version = splitOnStar[0];\n                }\n                catch (err){\n                    loggerUtil.error('Error while getting version');\n                }\n\n            }\n            return version;\n        },\n\t\tapplicationName: function (formMetadataURL) {\n\t\t\t//'webforms/oracleinternalpcs~Mortgage_Underwriting!1*soa_1b4254aa-b094-4cc2-9ea7-29fd58919997~6f5740fb-a6d3-4f82-a022-49854f89accb~c3f48544-3ea0-4238-9d8c-a3e8cedec34c',\n\t\t\tvar applicationName;\n\t\t\tif (formMetadataURL){\n\t\t\t\ttry{\n\t\t\t\t\tvar splitOnTilde = formMetadataURL.split('~');\n\t\t\t\t\tvar splitOnEscalamation = splitOnTilde[1].split('*');\n\t\t\t\t\tapplicationName = splitOnEscalamation[0];\n\t\t\t\t}\n\t\t\t\tcatch (err){\n\t\t\t\t\tloggerUtil.error('Error while getting application Name');\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn applicationName;\n\t\t}\n    };\n});\n\n",
    "define('pcs/data-services/DataServices',['require','jquery','pcs/util/pcsUtil'],function(require) {\n    'use strict';\n    var $ = require('jquery'),\n        pcsUtil = require('pcs/util/pcsUtil');\n    return (function() {\n        var instance,\n\n            getBaseURL = function(version) {\n                if (version && version === 'dp') {\n                    return pcsUtil.getDpServerURL() + '/bpm/api/4.0';\n                }\n                if (version) {\n                    return pcsUtil.getServerURL() + '/bpm/api/' + version;\n                }\n                return pcsUtil.getServerURL() + '/bpm/api/4.0';\n            },\n\n            //callback to set authorization request header for every call\n            beforeRequestCallback = function(xhr) {\n\t\t\t\tpcsUtil.beforeRequestCallback(xhr,pcsUtil);\n            },\n\n            serializeData = function(contentType, payload) {\n                var data = JSON.stringify(payload);\n                if (!contentType && contentType.startsWith('multipart')) {\n                    data = new Uint8Array(payload.length);\n                    for (var i = 0; i < payload.length; i++) {\n                        data[i] = payload.charCodeAt(i);\n                    }\n                }\n                return data;\n            };\n\n        function init() {\n            return {\n                get: function(url, options, version) {\n                    if (url.indexOf(getBaseURL(version)) === -1) {\n                        url = getBaseURL(version) + url;\n                    }\n                    //add URL query parameters for GET\n                    if (options && options.queryParams) {\n                    \tvar queryParams = $.param(options.queryParams, true) ;\n                        url += '?' + queryParams;\n                    }\n                    //alert(url);\n\t\t\t\t\t//Dummy ADF call\n\t\t\t\t\tpcsUtil.adfProxyCall();\n\n                    return $.ajax({\n                        type: 'GET',\n                        url: url,\n                        beforeSend: beforeRequestCallback,\n                        xhrFields: {\n                            withCredentials: true\n                        },\n                        contentType: (options && options.contentType) ? options.contentType : 'application/json',\n                        dataType: (options && options.dataType) ? options.dataType : 'json'\n                    });\n                },\n\n                post: function(url, options, version) {\n                    if (url.indexOf(getBaseURL(version)) === -1) {\n                        url = getBaseURL(version) + url;\n                    }\n\t\t\t\t\tif (!options.contentType) {\n                        options.contentType = 'application/json';\n                    }\n                    var payload = serializeData(options.contentType, options.payload);\n\n\t\t\t\t\t//Dummy ADF call\n\t\t\t\t\tpcsUtil.adfProxyCall();\n\n                    return $.ajax({\n                        type: 'POST',\n                        url: url,\n                        cache: false,\n                        processData: false,\n                        data: payload,\n                        beforeSend: beforeRequestCallback,\n                        xhrFields: {\n                            withCredentials: true\n                        },\n\t\t\t\t\t\tcontentType: (options && options.contentType) ? options.contentType : 'application/json',\n                        dataType: (options && options.dataType) ? options.dataType : 'json'\n                    });\n                },\n\n                put: function(url, options, version) {\n                    if (url.indexOf(getBaseURL(version)) === -1) {\n                        url = getBaseURL(version) + url;\n                    }\n                    if (!options.contentType) {\n                        options.contentType = 'application/json';\n                    }\n\n                    var payload = serializeData(options.contentType, options.payload);\n\n\t\t\t\t\t//Dummy ADF call\n\t\t\t\t\tpcsUtil.adfProxyCall();\n\n                    return $.ajax({\n                        type: 'PUT',\n                        url: url,\n                        cache: false,\n                        processData: false,\n                        data: payload,\n                        beforeSend: beforeRequestCallback,\n                        xhrFields: {\n                            withCredentials: true\n                        },\n\t\t\t\t\t\tcontentType: (options && options.contentType) ? options.contentType : 'application/json',\n                        dataType: (options && options.dataType) ? options.dataType : 'json'\n                    });\n                },\n\n                delete: function(url, options, version) {\n                    if (url.indexOf(getBaseURL(version)) === -1) {\n                        url = getBaseURL(version) + url;\n                    }\n\n\t\t\t\t\t//Dummy ADF call\n\t\t\t\t\tpcsUtil.adfProxyCall();\n\n                    return $.ajax({\n                        type: 'DELETE',\n                        url: url + '/' + options.payload,\n                        beforeSend: beforeRequestCallback,\n                        xhrFields: {\n                            withCredentials: true\n                        },\n                        contentType: (options && options.contentType) ? options.contentType : 'application/json',\n                        cache: false,\n                        processData: false\n                    });\n                }\n            };\n        }\n\n        return {\n            // Get the Singleton instance if one exists\n            // or create one if it doesn't\n            getInstance: function(connection) {\n                if (!instance) {\n                    instance = init();\n                }\n                if (connection) {\n                    instance.connection = connection;\n                }\n                return instance;\n            },\n\n            setConnection: function(connection) {\n                if (!instance) {\n                    instance = init();\n                }\n                instance.connection = connection;\n            }\n        };\n\n    })();\n});\n\n",
    "/**\n * Created by nisabhar on 11/7/17.\n */\n\ndefine('pcs/util/dateUtil',['knockout', 'ojs/ojcore', 'jquery','ojs/ojdatetimepicker'], function(ko, oj, $) {\n\t'use strict';\n\n\n\t/**\n\t * ,method to convert time in string\n\t * @param millisecs\n\t * @returns {string}\n\t */\n\tvar _getTimeDurationTxt = function (millisecs) {\n\n\t\tif (!millisecs){\n\t\t\treturn '';\n\t\t}\n\n\t\tvar durationTxt = '';\n\t\t// get total seconds between the times\n\t\tvar delta = Math.abs(millisecs) / 1000;\n\n\t\t// calculate (and subtract) whole days\n\t\tvar days = Math.floor(delta / 86400);\n\t\tdelta -= days * 86400;\n\t\tdurationTxt = days > 0 ? durationTxt + days + 'd ' : durationTxt;\n\n\t\t// calculate (and subtract) whole hours\n\t\tvar hours = Math.floor(delta / 3600) % 24;\n\t\tdelta -= hours * 3600;\n\t\tdurationTxt = hours > 0 ? durationTxt + hours + 'h ' : durationTxt;\n\n\t\t// calculate (and subtract) whole minutes\n\t\tvar minutes = Math.floor(delta / 60) % 60;\n\t\tdelta -= minutes * 60;\n\t\tdurationTxt = minutes > 0 ? durationTxt + minutes + 'm' : durationTxt;\n\n\t\tif (durationTxt === ''){\n\t\t\tvar seconds = Math.floor(delta);\n\t\t\tdurationTxt = seconds + 's';\n\t\t}\n\n\t\treturn durationTxt;\n\t};\n\n\t/**\n\t * Convert the given utc date to user timezone\n\t * @param utcDate\n\t */\n\tvar _getDateInUserTimezone = function(utcDate){\n\t\tif(!utcDate){\n\t\t\treturn null;\n\t\t}\n\n\t\tvar date;\n\t\tif (typeof utcDate === 'string' || typeof utcDate === 'number'){\n\t\t\t//string format or longTime format\n\t\t\tdate = new Date(utcDate)\n\t\t}else if(utcDate instanceof Date){\n\t\t\tdate = utcDate;\n\t\t}else{\n\t\t\treturn utcDate;\n\t\t}\n\n\t\tvar convertedDate = oj.IntlConverterUtils.dateToLocalIso(date);\n\n\t\treturn convertedDate;\n\t};\n\n\n\t/**\n\t * convert the requested date in the given pattern, do not change the timezone\n\t * @param requestedDate\n\t * @param datePattern\n\t * @returns {string}\n\t */\n\tvar _getFormattedDate =  function (requestedDate, datePattern) {\n\t\tif(!requestedDate || requestedDate === ''){\n\t\t\treturn '';\n\t\t}\n\t\tvar pattern = datePattern ? datePattern : 'MMM dd yyyy, hh:mm a';\n\t\tvar dateOptions = {\n\t\t\tpattern: pattern\n\t\t};\n\t\tvar dateConverter = oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter(dateOptions);\n\n\t\treturn dateConverter.format(requestedDate);\n\t};\n\n\n\t/**\n\t* method to convert\n\t* @param userDate\n\t* @returns {Date}\n\t*/\n\tvar _getDateStingInUTCTimezone= function(userDate){\n\n\t\tvar date;\n\t\tif (typeof userDate === 'string' || typeof userDate === 'number'){\n\t\t\t//string format or longTime format\n\t\t\tdate = new Date(userDate)\n\t\t}else if(userDate instanceof Date){\n\t\t\tdate = userDate;\n\t\t}else{\n\t\t\treturn userDate.toString();\n\t\t}\n\n\t\tdate =date.toISOString();\n\n\t\treturn date;\n\t};\n\n\n\t/**\n\t * custom handlers to convert date pattern\n\t * @type {{update: update}}\n\t */\n\tko.bindingHandlers.pcsFormatDate = {\n\t\tupdate: function(element, valueAccessor, allBindings) {\n\t\t\tvar valueUnwrapped = ko.unwrap(valueAccessor());\n\n\t\t\tif (!valueUnwrapped) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar formattedValue = _getFormattedDate (valueUnwrapped, allBindings().datePattern);\n\n\t\t\tko.bindingHandlers.text.update(element, function() {\n\t\t\t\treturn formattedValue;\n\t\t\t});\n\t\t}\n\t};\n\n\n\treturn {\n\n\t\tgetTimeDurationTxt : _getTimeDurationTxt,\n\n\t\tgetDateInUserTimezone: _getDateInUserTimezone,\n\n\t\tgetFormattedDate : _getFormattedDate,\n\n\t\tgetDateStingInUTCTimezone: _getDateStingInUTCTimezone\n\t};\n});\n\n",
    "define('pcs/tasklist/viewModel/Task',['pcs/util/dateUtil'], function(dateUtil) {\n    'use strict';\n    return function(data) {\n\n\t\t//store the server dates\n\t\tdata.serverAssignedDate = data.assignedDate;\n\t\tdata.serverDueDate = data.dueDate;\n\t\tdata.serverUpdatedDate = data.updatedDate;\n\t\tdata.serverCreateDate = data.createdDate;\n\n\t\t//convert to local dates\n\t\tdata.assignedDate = dateUtil.getDateInUserTimezone(data.serverAssignedDate);\n\t\tdata.dueDate =  dateUtil.getDateInUserTimezone(data.serverDueDate);\n\t\tdata.updatedDate = dateUtil.getDateInUserTimezone(data.serverUpdatedDate);\n\t\tdata.createdDate =  dateUtil.getDateInUserTimezone(data.serverCreateDate);\n\n        return {\n            getTitle: function() {\n                return data.title;\n            },\n            getNumber: function() {\n                return data.number;\n            },\n            getFromUser: function() {\n                return data.fromUserDisplayName;\n            },\n            getState: function() {\n                return data.state;\n            },\n            getAssignees: function() {\n                return data.assignees.items;\n            },\n            getCreator: function() {\n                return data.creatorName;\n            },\n            getAssignedDate: function() {\n                return data.assignedDate;\n            },\n            getCreatedDate: function() {\n                return data.createdDate;\n            },\n            getPriority: function() {\n                return data.priority;\n            },\n            getFromUserName: function() {\n                return data.fromUserName;\n            },\n            getFromUserDisplayName: function() {\n                return data.fromUserDisplayName;\n            },\n            getShortSummary: function() {\n                return data.shortSummary;\n            },\n            getDueDate: function() {\n                return data.dueDate;\n            },\n            getProcessName: function() {\n                return data.processName;\n            },\n            getUpdatedDate: function() {\n                return data.updatedDate;\n            },\n            getActionList: function() {\n                return data.actionList;\n            }\n        };\n    };\n});\n\n",
    "define('pcs/taskhistory/viewModel/TaskHistory',['jquery','pcs/data-services/DataServices','pcs/tasklist/viewModel/Task' ],\n\tfunction($,DataServices, Task) {\n    'use strict';\n    var resourceUrlConfig = {\n            tasks: '/tasks',\n            processAudit: '/processes'\n        },\n        dataServices = DataServices.getInstance();\n\n\n    //TODO: refactor to remove jquery deferred and use Promise when moving to JET 2.1\n    return function(options) {\n        //entire UI state of the task list is stored in _state\n        var _state = {};\n        //options will contain all preferences or customizations that can be\n        //passed to task list via component. It will also contain language\n        //and timezone\n        _state.options = options;\n\n        /*\n                var resourcePaths = {\n                        tasks: {\n                            url: '/tasks'\n                        }\n                    },\n                    createIdObjectArray = function(identityId, identityType) {\n                        var idArray = [];\n                        for (var i = 0; i < identityId.length; i++) {\n                            idArray.push({\n                                id: identityId[i],\n                                type: identityType[i]\n                            });\n                        }\n                        return idArray;\n                    };\n        */\n\n        return {\n            fetchTask: function(taskNumber) {\n                var url = resourceUrlConfig.tasks;\n                var promise = $.Deferred();\n\n                url += '/' + taskNumber;\n                dataServices.get(url, null, '4.0').done(function(data) {\n                    promise.resolve(data);\n                }).fail(function(error) {\n                    promise.reject(error);\n                });\n                return promise;\n            },\n            fetchProcessAuditInfo: function(procInstId, currentTaskNumber) {\n                var url = resourceUrlConfig.processAudit;\n                var promise = $.Deferred();\n\n                url += '/' + procInstId;\n                url += '/audit?graphicFlag=false&filterActivitiesBy=USER_TASK&filterActivitiesBy=START_EVENT&filterActivitiesBy=END_EVENT&includeFutureTasksFlag=true';\n                url += '&currentTaskNumber=' + currentTaskNumber;\n                dataServices.get(url, null, '4.0').done(function(data) {\n                    promise.resolve(data);\n                }).fail(function(error) {\n                    promise.reject(error);\n                });\n                return promise;\n            }\n        };\n    };\n});\n\n",
    "/**\n * Created by vijagarw on 16/09/2016.\n */\n\ndefine('pcs/taskhistory/viewModel/taskHistoryVM',['ojs/ojcore', 'knockout', 'jquery', 'pcs/util/pcsUtil', 'pcs/taskhistory/viewModel/TaskHistory', 'ojs/ojknockout', 'ojs/ojcollapsible', 'ojL10n!pcs/resources/nls/pcsSnippetsResource', 'ojs/ojvalidation'],\n\n    function(oj, ko, $, pcsUtil, TaskHistory) {\n        'use strict';\n\n        function TaskHistoryVM(params) {\n\n            var self = this;\n\t\t\tvar loggerUtil =  require('pcs/util/loggerUtil');\n\n            self.procHistData = ko.observableArray([]);\n\n            //var taskJSONData;\n            //var taskNumber;\n            //var service;\n\n            //Set the resource bundle\n\n            self.bundle = require('ojL10n!pcs/resources/nls/pcsSnippetsResource');\n\n            function init() {\n\n                var service = new TaskHistory();\n\n                var currentTaskNumber = params.data.taskNumber;\n\n                service.fetchTask(currentTaskNumber).then(function(taskJSON) {\n\n                    var processInstanceID = taskJSON.processId;\n\n                    var currentTaskNumber = taskJSON.number;\n\n                    if (processInstanceID != null) {\n\n                        //self.taskData = data;\n                        //taskJSONData = data;\n                        //getProcessAuditData(taskJSON);\n\n                        service.fetchProcessAuditInfo(processInstanceID, currentTaskNumber).then(function(processAuditJSON) {\n                            /*self.procHistData(processAuditJSON.processHistory);\n                             var json = {\n                             'processId' : processAuditJSON.processId\n                             };\n                             loggerUtil.log(json);*/\n\n\n\n                            self.buildTaskHistoryViewJSON(taskJSON, processAuditJSON);\n\n\n\n\n                            //self.getTaskHistory(taskJSON, processAuditJSON);\n                        });\n                    }\n                });\n            }\n\n            init();\n\n            /*function getProcessAuditData(taskJSON){\n             service.fetchProcessAuditInfo(taskJSON.processId).then(function(processAuditJSON){\n             self.procHistData(processAuditJSON.processHistory);\n             self.getTaskHistory(taskJSON, processAuditJSON);\n             });\n             }*/\n\n            function downloadFile(url, success) {\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.setRequestHeader('Authorization', pcsUtil.getAuthInfo());\n                xhr.setRequestHeader('pcs_mode', 'dev');\n                xhr.responseType = 'blob';\n                xhr.onreadystatechange = function() {\n                    if (xhr.status === 200 && xhr.readyState === 4) {\n                        if (success) {\n                            success(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(null);\n            }\n\n\n\n            self.onAttachmentClick = function(data, event) {\n\n                var attachmentURL = event.target.value;\n                var attachmentName = event.target.text;\n\n                //var win = window.open('_blank');\n\n                downloadFile(attachmentURL, function(blob) {\n\n                    var url = URL.createObjectURL(blob);\n\n                    var a = document.createElement('a');\n                    a.style = 'display: none';\n                    a.href = url;\n                    a.download = attachmentName;\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                    window.URL.revokeObjectURL(url);\n\n\n                    //win.location = url;\n                });\n\n\n            };\n\n            self.buildTaskHistoryViewJSON = function(taskJSON, processAuditJSON) {\n\n                var currentTaskNumber = taskJSON.number;\n\n                if (taskJSON.rootTaskNumber) {\n                    currentTaskNumber = taskJSON.rootTaskNumber;\n                }\n\n\n                var data = processAuditJSON;\n\n                var taskHistoryJSON = {};\n\n                taskHistoryJSON.taskNumber = currentTaskNumber;\n                taskHistoryJSON.history = [];\n\n\n                if (data.processHistory) {\n                    for (var i = 0; i < data.processHistory.length; i++) {\n\n\n                        var historyElement = {};\n\n                        historyElement.activityType = data.processHistory[i].activityType;\n\n                        if (data.processHistory[i].activityType === 'START_EVENT') {\n\n                            var displayMessage = self.bundle.pcs.taskHistory.proc_inst_started;\n                            displayMessage = oj.Translations.applyParameters(displayMessage, {\n                                '0': data.processHistory[i].processName\n                            });\n                            historyElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].creationDate, 'MMM d, yyyy hh:mm:ss a');\n\n                            if (data.processHistory[i].updatedBy) {\n\n                                var updatedByMsg = self.bundle.pcs.taskHistory.proc_inst_started_by;\n\n                                updatedByMsg = oj.Translations.applyParameters(updatedByMsg, {\n                                    '0': data.processHistory[i].processName,\n                                    '1': data.processHistory[i].updatedBy\n                                });\n                                displayMessage = updatedByMsg;\n                            }\n\n\n\n                            historyElement.displayMessage = displayMessage;\n\n                        }\n\n                        if (data.processHistory[i].activityType === 'END_EVENT') {\n\n                            historyElement.displayMessage = self.bundle.pcs.taskHistory.proc_inst_ended;\n                            historyElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].creationDate, 'MMM d, yyyy hh:mm:ss a');\n\n                        }\n\n                        if (data.processHistory[i].activityType === 'FUTURE_TASK') {\n\n                            var futureTaskMsg = self.bundle.pcs.taskHistory.pcs_history_user_task_pending;\n                            futureTaskMsg = oj.Translations.applyParameters(futureTaskMsg, {\n                                '0': data.processHistory[i].activityName\n                            });\n\n                            historyElement.displayMessage = futureTaskMsg;\n\n                        }\n\n\n                        if (data.processHistory[i].activityType === 'USER_TASK') {\n\n                            var displayMsg;\n\n                            if (data.processHistory[i].userTaskTitle) {\n                                displayMsg = data.processHistory[i].userTaskTitle;\n                            } else {\n                                displayMsg = data.processHistory[i].activityName;\n                            }\n\n                            historyElement.displayMessage = displayMsg;\n                            historyElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].creationDate, 'MMM d, yyyy hh:mm:ss a');\n                            historyElement.showExpanded = 'false';\n\n                            if (data.processHistory[i].userTaskNumber && currentTaskNumber === parseInt(data.processHistory[i].userTaskNumber)) {\n\n                                historyElement.detailedHistory = [];\n                                historyElement.showExpanded = 'true';\n\n\n                                var routingType = taskJSON.routingType;\n\n                                if (routingType === 'SINGLE') {\n                                    historyElement.routingTypeImageClass = 'pcs-th-single-assignee-img';\n                                    historyElement.routingTypeImageTitle = 'Single Assignee';\n                                } else if (routingType === 'PARALLEL') {\n\n                                    historyElement.routingTypeImageClass = 'pcs-th-parallel-assignee-img';\n                                    historyElement.routingTypeImageTitle = 'Parallel Assignees';\n                                    historyElement.routingTypeMoreInfo = 'Consensus : ' + taskJSON.outcomePercentage + ' %';\n\n                                } else if (routingType === 'SEQUENTIAL') {\n\n                                    historyElement.routingTypeImageClass = 'pcs-th-sequential-assignee-img';\n                                    historyElement.routingTypeImageTitle = 'Sequential Assignees';\n\n                                } else if (routingType === 'MANAGEMENT CHAIN') {\n\n                                    historyElement.routingTypeImageClass = 'pcs-th-management-chain-assignee-img';\n                                    historyElement.routingTypeImageTitle = 'Management Chain in Sequence';\n                                    historyElement.routingTypeMoreInfo = 'Number of levels : ' + taskJSON.managementChainLevel;\n                                }\n\n\n                                historyElement.originalAssignees = [];\n\n                                for (var k = 0; k < taskJSON.originalAssignees.items.length; k++) {\n\n                                    var originalAssigneesElement = {};\n\n                                    originalAssigneesElement.type = taskJSON.originalAssignees.items[k].type;\n                                    originalAssigneesElement.id = taskJSON.originalAssignees.items[k].id;\n\n                                    var type = taskJSON.originalAssignees.items[k].type;\n\n                                    if (type === 'user') {\n\n                                        originalAssigneesElement.assigneeTypeImageClass = 'pcs-th-history-user-img';\n\n\n                                    } else if (type === 'group') {\n\n                                        originalAssigneesElement.assigneeTypeImageClass = 'pcs-th-history-group-img';\n\n                                    } else if (type === 'application_role') {\n\n                                        originalAssigneesElement.assigneeTypeImageClass = 'pcs-th-history-approle-img';\n\n                                    }\n\n                                    historyElement.originalAssignees.push(originalAssigneesElement);\n                                }\n\n                                for (var j = 0; j < data.processHistory[i].taskHistory.length; j++) {\n\n                                    var detailedHistoryElement = {};\n\n\n                                    if (data.processHistory[i].taskHistory[j].actionName === 'System Update') {\n\n                                        continue;\n                                        // do nothing\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Withdrawn') {\n\n                                        var withDrawnMsg = self.bundle.pcs.taskHistory.pcs_history_withdrawn_message;\n                                        withDrawnMsg = oj.Translations.applyParameters(withDrawnMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = withDrawnMsg;\n\n                                        //detailedHistoryElement.displayMsg = 'Withdrawn from ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-withdrawn-action-img';\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-withdrawn-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Withdrawn from ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Resumed') {\n\n                                        var resumedMesage = self.bundle.pcs.taskHistory.pcs_history_resumed_message;\n                                        resumedMesage = oj.Translations.applyParameters(resumedMesage, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = resumedMesage;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        //detailedHistoryElement.displayMsg = 'Resumed by ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-resumed-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-resumed-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Resumed by ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Suspended') {\n\n                                        var suspendedMsg = self.bundle.pcs.taskHistory.pcs_history_suspended_message;\n                                        suspendedMsg = oj.Translations.applyParameters(suspendedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = suspendedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        //detailedHistoryElement.displayMsg = 'Suspended by ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-suspended-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-suspended-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Suspended by ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Escalated') {\n\n                                        var escalatedMsg = self.bundle.pcs.taskHistory.pcs_history_escalated_message;\n                                        escalatedMsg = oj.Translations.applyParameters(escalatedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = escalatedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        //detailedHistoryElement.displayMsg = 'Escalated to ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-escalated-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-escalated-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Escalated to ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Delegated') {\n\n                                        var delegatedMsg = self.bundle.pcs.taskHistory.pcs_history_delegated_message;\n                                        delegatedMsg = oj.Translations.applyParameters(delegatedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = delegatedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        //detailedHistoryElement.displayMsg = 'Delegated to ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-delegated-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-delegated-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Delegated to ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Approved') {\n\n                                        var approvedMsg = self.bundle.pcs.taskHistory.pcs_history_approved_message;\n                                        approvedMsg = oj.Translations.applyParameters(approvedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = approvedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        //detailedHistoryElement.displayMsg = 'Approved by ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-approved-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-approved-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Approved by ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Rejected') {\n\n                                        var rejectedMsg = self.bundle.pcs.taskHistory.pcs_history_rejected_message;\n                                        rejectedMsg = oj.Translations.applyParameters(rejectedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = rejectedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        //detailedHistoryElement.displayMsg = 'Rejected by ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-rejected-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-rejected-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Rejected by ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName.toString().startsWith('Task Completed')) {\n\n                                        var actionNameStr = data.processHistory[i].taskHistory[j].actionName.toString();\n\n                                        var strArray = actionNameStr.split('-');\n                                        var action = strArray[1].trim();\n\n                                        var detailedHistoryElementForAction = {};\n\n                                        if (data.processHistory[i].taskHistory[j].displayName) {\n\n\n                                            if (action === 'Rejected') {\n\n                                                detailedHistoryElementForAction.imageClass = 'pcs-th-rejected-action-img';\n\n                                            } else if (action === 'Approved') {\n\n                                                detailedHistoryElementForAction.imageClass = 'pcs-th-approved-action-img';\n\n                                            } else {\n\n                                                detailedHistoryElementForAction.imageClass = 'pcs-th-undefined-action-img';\n                                            }\n\n\n\n                                            var actionMsg = self.bundle.pcs.taskHistory.pcs_history_any_action_message;\n                                            actionMsg = oj.Translations.applyParameters(actionMsg, {\n                                                '0': action,\n                                                '1': data.processHistory[i].taskHistory[j].displayName\n                                            });\n                                            detailedHistoryElementForAction.displayMessage = actionMsg;\n\n\n                                            //detailedHistoryElementForAction.displayMsg = action + ' by ' + data.processHistory[i].taskHistory[j].displayName;\n\n                                            detailedHistoryElementForAction.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                            detailedHistoryElementForAction.actionType = 'REGULAR';\n                                            historyElement.detailedHistory.push(detailedHistoryElementForAction);\n                                        }\n\n                                        var taskCompletedMsg = self.bundle.pcs.taskHistory.pcs_history_task_completed;\n                                        detailedHistoryElement.displayMessage = taskCompletedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        //detailedHistoryElement.displayMsg = taskCompletedString;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-task-Completed-action-img';\n\n\n                                        /*var actionNameStr = data.processHistory[i].taskHistory[j].actionNameStr.toString();\n\n                                         var strArray = actionNameStr.split('-');\n                                         var taskCompletedString = strArray[0].trim();\n                                         var action = strArray[1].trim();\n\n\n                                         if(data.processHistory[i].taskHistory[j].displayName) {\n                                         historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>';\n\n                                         if (action === 'Rejected') {\n\n                                         historyHTML = historyHTML +\n                                         '<img class='pcs-th-rejected-action-img'>';\n                                         }\n                                         else if (action === 'Approved') {\n\n                                         historyHTML = historyHTML +\n                                         '<img class='pcs-th-approved-action-img'>';\n                                         } else {\n\n                                         historyHTML = historyHTML +\n                                         '<img class='pcs-th-undefined-action-img'>';\n                                         }\n\n\n                                         historyHTML = historyHTML +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>' +\n\n                                         action + ' by ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n\n                                         '</li>';\n                                         }\n\n                                         historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-task-Completed-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>' +\n\n                                         taskCompletedString +\n\n                                         '</span>' + '&nbsp &nbsp' +\n\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n\n\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Information Submitted') {\n\n                                        var infoSubmittedMsg = self.bundle.pcs.taskHistory.pcs_history_info_submitted_message;\n                                        infoSubmittedMsg = oj.Translations.applyParameters(infoSubmittedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName,\n                                            '1': data.processHistory[i].taskHistory[j].infoSubmittedTo\n                                        });\n                                        //updatedByMsg = oj.Translations.applyParameters(updatedByMsg, { '1' :data.processHistory[i].taskHistory[j].displayName});\n                                        detailedHistoryElement.displayMessage = infoSubmittedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n\n                                        //detailedHistoryElement.displayMsg = '' + 'submitted more Information to ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-info-submitted-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-info-submitted-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>' +\n\n                                         '<span class='pcs-th-history-user-name'>' + '' + '</span> ' +\n\n                                         'submitted more Information to ' + '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '&nbsp &nbsp' + '</span> ' +\n\n                                         '</span>' +\n\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n                                         '</li>';*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Task Updated') {\n\n\n\n                                        if (data.processHistory[i].taskHistory[j].displayName) {\n\n                                            var taskHistoryUpdatedMsg = self.bundle.pcs.taskHistory.pcs_history_task_updated_message;\n                                            taskHistoryUpdatedMsg = oj.Translations.applyParameters(taskHistoryUpdatedMsg, {\n                                                '0': data.processHistory[i].taskHistory[j].displayName\n                                            });\n                                            detailedHistoryElement.displayMessage = taskHistoryUpdatedMsg;\n                                            detailedHistoryElement.actionType = 'REGULAR';\n\n                                            //detailedHistoryElement.displayMsg = 'Task updated by ' + data.processHistory[i].taskHistory[j].displayName;\n                                            detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                            detailedHistoryElement.imageClass = 'pcs-th-task-updated-action-img';\n                                        }\n\n                                        /*\t\t\t\t\t\t\t\t\t\tif(data.processHistory[i].taskHistory[j].displayName)\n\n                                         historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-task-updated-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Task updated by ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n                                         '</li>';*/\n\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Information Requested') {\n\n                                        var infoRequestedMsg = self.bundle.pcs.taskHistory.pcs_history_info_requested_message;\n\n                                        var infoRequestedFrom = data.processHistory[i].taskHistory[j].infoRequestedFrom;\n\n                                        infoRequestedMsg = oj.Translations.applyParameters(infoRequestedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName,\n                                            '1': infoRequestedFrom\n                                        });\n\n                                        //updatedByMsg = oj.Translations.applyParameters(updatedByMsg, { '1' : infoRequestedFrom});\n\n                                        detailedHistoryElement.displayMessage = infoRequestedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        //detailedHistoryElement.displayMsg = data.processHistory[i].taskHistory[j].displayName + 'requested for more Information from ' + '' ;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-info-requested-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-info-requested-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span> ' +\n\n                                         'requested for more Information from ' + '<span class='pcs-th-history-user-name'>' + '' + '&nbsp &nbsp' + '</span> ' +\n\n                                         '</span>' +\n\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Reassigned') {\n\n                                        var reassignedMsg = self.bundle.pcs.taskHistory.pcs_history_reassigned_message;\n                                        reassignedMsg = oj.Translations.applyParameters(reassignedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = reassignedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        //detailedHistoryElement.displayMsg = 'Reassigned to ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-reassigned-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-reassigned-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Reassigned to ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Assigned') {\n\n                                        var assignedMsg = self.bundle.pcs.taskHistory.pcs_history_assigned_message;\n                                        assignedMsg = oj.Translations.applyParameters(assignedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = assignedMsg;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n                                        //detailedHistoryElement.displayMsg = 'Assigned to ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-assigned-action-img';\n\n                                        /*historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-assigned-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>Assigned to ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Attachment Added') {\n\n                                        var attachmentAddedMsg = self.bundle.pcs.taskHistory.pcs_history_doc_attached_message;\n                                        attachmentAddedMsg = oj.Translations.applyParameters(attachmentAddedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = attachmentAddedMsg;\n                                        detailedHistoryElement.attachmentName = data.processHistory[i].taskHistory[j].reason;\n                                        detailedHistoryElement.actionType = 'ATTACHMENT_ADDED';\n                                        detailedHistoryElement.attachmentURL = data.processHistory[i].taskHistory[j].attachmentUri.href + '/stream';\n\n                                        //detailedHistoryElement.displayMsg = 'Document attached by ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-att-added-action-img';\n\n                                        /*var attURL = data.processHistory[i].taskHistory[j].attachmentUri.href;\n                                         var attachmentLinkHTML = '';\n\n\n                                         doGet(attURL, 'application/json', 'json').done(\n                                         function(attJSON){\n\n                                         var mimeType = attJSON.mimeType;\n                                         var attName = attJSON.attachmentName;\n                                         var attURI = attJSON.uri.href;\n\n                                         doGet(attURI, mimeType, 'text').done(\n                                         function(attContent){\n\n                                         var content = attContent.toString();\n\n                                         var hrefStr = 'data:'+ mimeType + ';charset=utf-8,' + content;\n\n                                         attachmentLinkHTML = attachmentLinkHTML +\n                                         '<a href='' + hrefStr + '' download='' + attName + ''>' + attName + '</a>';\n\n\n                                         historyHTML = historyHTML + '<li class='pcs-th-history-user-task-other-rows'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-att-added-action-img'>' +\n\n                                         '</div>' +\n\n                                         'Document attached by ' +\n\n                                         '<span class='pcs-th-history-user-name'>' +\n\n                                         data.processHistory[i].taskHistory[j].displayName + '&nbsp &nbsp' +\n\n                                         '</span>' +\n\n\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n\n                                         '</span>' +\n                                         '<br>' +\n\n                                         attachmentLinkHTML +\n\n                                         '</li>';\n\n\n                                         }\n                                         ).fail(\n                                         function(jqXHR, textStatus, errorThrown){\n                                         alert('Attachment rest call failed');\n                                         }\n                                         );\n                                         }\n                                         ).fail(function(jqXHR, textStatus, errorThrown){\n                                         alert('The JSON REST call for attachment failed');\n                                         }\n                                         );*/\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Attachment Removed') {\n\n                                        var attachmentreemovedMsg = self.bundle.pcs.taskHistory.pcs_history_doc_removed_message;\n                                        attachmentreemovedMsg = oj.Translations.applyParameters(attachmentreemovedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = attachmentreemovedMsg;\n                                        //detailedHistoryElement.attachmentName = data.processHistory[i].taskHistory[j].reason;\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-att-removed-action-img';\n\n                                    } else if (data.processHistory[i].taskHistory[j].actionName === 'Comment Added') {\n\n                                        var commentedMsg = self.bundle.pcs.taskHistory.pcs_history_commented_message;\n                                        commentedMsg = oj.Translations.applyParameters(commentedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = commentedMsg;\n\n\n                                        //detailedHistoryElement.displayMsg = 'Commented by ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-comment-added-action-img';\n                                        detailedHistoryElement.comments = '' + data.processHistory[i].taskHistory[j].reason + '';\n                                        detailedHistoryElement.actionType = 'COMMENT_ADDED';\n\n\n                                        /*historyHTML = historyHTML + '<li class='pcs-th-history-user-task-other-rows'>' +\n\n\n                                         '<div style='float:left; padding-right: 13px;'>' +\n\n                                         '<img class='pcs-th-comment-added-action-img'>' +\n\n                                         '</div>' +\n\n                                         'Commented by ' +\n\n                                         '<span class='pcs-th-history-user-name'>' +\n\n                                         data.processHistory[i].taskHistory[j].displayName +\n\n                                         '</span>' + '&nbsp &nbsp' +\n\n\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n                                         '<br>' +\n\n                                         '<span class='pcs-th-history-comment'>' +\n\n                                         ''' +\n\n                                         data.processHistory[i].taskHistory[j].reason +\n\n                                         ''' +\n\n                                         '</span>' +\n\n                                         '</li>';*/\n                                    } else {\n\n                                        var resumedMsg = self.bundle.pcs.taskHistory.pcs_history_resumed_message;\n                                        resumedMsg = oj.Translations.applyParameters(resumedMsg, {\n                                            '0': data.processHistory[i].taskHistory[j].displayName\n                                        });\n                                        detailedHistoryElement.displayMessage = resumedMsg;\n\n                                        //for all custom actions. We can not hardcode custom actions\n                                        var actionName = data.processHistory[i].taskHistory[j].actionName;\n\n                                        detailedHistoryElement.displayMessage = actionName + ' by ' + data.processHistory[i].taskHistory[j].displayName;\n                                        detailedHistoryElement.creationDate = self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a');\n                                        detailedHistoryElement.imageClass = 'pcs-th-custom-action-img';\n                                        detailedHistoryElement.actionType = 'REGULAR';\n\n                                        /*//for all custom actions. We can not hardcode custom actions\n                                         var actionNameStr = data.processHistory[i].taskHistory[j].actionNameStr;\n\n                                         if(data.processHistory[i].taskHistory[j].displayName)\n\n                                         historyHTML = historyHTML +\n\n                                         '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n                                         '<div style='float:left; padding-right: 15px;'>' +\n\n                                         '<img class='pcs-th-custom-action-img'>' +\n\n                                         '</div>' +\n\n                                         '<span style='padding-top: 11px; float: left;'>' +\n\n                                         actionNameStr + ' by ' +\n\n                                         '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n                                         '</span>' + '&nbsp &nbsp' +\n                                         '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n                                         self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n                                         '</span>' +\n\n\n                                         '</li>';*/\n\n\n                                    }\n\n\n                                    historyElement.detailedHistory.push(detailedHistoryElement);\n                                }\n\n\n                            }\n                        }\n\n\n\n\n\n                        taskHistoryJSON.history.push(historyElement);\n\n                    }\n                }\n\n\n\n\n                self.procHistData(taskHistoryJSON.history);\n                loggerUtil.log(taskHistoryJSON);\n\n            };\n\n\n\n            // wrapper function for HTTP GET\n\n            self.formatTaskHistoryDate = function formatDate(dateISOStr, pattern) {\n                var options = {\n                    formatType: 'date',\n                    pattern: pattern\n                };\n                var dateConverter = oj.Validation.converterFactory('datetime').createConverter(options);\n                return dateConverter.format(oj.IntlConverterUtils.dateToLocalIso(new Date(dateISOStr)));\n            };\n\n\n\n\t\t\t/**\n\t\t\t * method to clean up everything\n\t\t\t */\n\t\t\tself.dispose = function() {\n\t\t\t\tloggerUtil.log('dispose in taskHistoryVm');\n\n\t\t\t\t// clean up the events\n\t\t\t};\n\n\n\n\n\n\n            /*self.getTaskHistory = function (taskJSON, processAuditJSON) {\n\n             var currentTaskNumber = taskJSON.number;\n\n             if(taskJSON.parentTaskPresentFlag)\n             currentTaskNumber = taskJSON.parentTaskNumber;\n\n             var data = processAuditJSON;\n\n             var historyHTML = '';\n\n             for (var i = 0; i < data.processHistory.length; i++) {\n\n             if(data.processHistory[i].activityType === 'START_EVENT') {\n\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-green-dot-image'>' +\n\n             self.bundle.pcs.taskHistory.proc_inst_started +\n\n             '<br>' +\n\n             '<span class='pcs-th-history-date'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].creationDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n             '<br><br><br>' +\n\n             '</li>';\n             }\n\n             if(data.processHistory[i].activityType === 'FUTURE_TASK') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-grey-dot-image'>' +\n\n             'User Task ' +\n\n             '<span class='pcs-th-history-task-title'>' +\n\n             data.processHistory[i].activityName +\n\n             '</span>' +\n\n             ' is pending' +\n\n             '<br><br><br>' +\n\n             '</li>';\n\n             }\n\n             if(data.processHistory[i].activityType === 'END_EVENT') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-green-dot-image'>' +\n\n             'Process Instance Ended' +\n\n             '<br>' +\n\n             '<span class='pcs-th-history-date'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].creationDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n             '<br><br><br>' +\n\n             '</li>';\n\n             }\n\n\n             if(data.processHistory[i].activityType === 'USER_TASK') {\n\n             if(currentTaskNumber === data.processHistory[i].userTaskNumber) {\n\n\n             var assigneesHTMLTable = '';\n             var routingType = taskJSON.routingType;\n\n             var routingTypeTable = '';\n\n             if(routingType === 'SINGLE') {\n\n             routingTypeTable = routingTypeTable +\n\n             '<table>' +\n             '<tr>' +\n             '<td class='pcs-th-assignee-table'>' +\n\n             '<img class='pcs-th-single-assignee-img' title='Single Assignee'>' +\n\n             '</td>' +\n             '</tr>' +\n\n             '</table>';\n\n             }\n             else if(routingType === 'PARALLEL') {\n\n             routingTypeTable = routingTypeTable +\n\n             '<table>' +\n             '<tr>' +\n             '<td class='pcs-th-assignee-table'>' +\n\n             '<img class='pcs-th-parallel-assignee-img' title='Parallel Assignees'>' +\n\n             '</td>' +\n             '</tr>' +\n\n             '<tr>' +\n             '<td class='pcs-th-assignee-table'>' +\n\n             'Consensus : ' +  taskJSON.outcomePercentage + ' %' +\n\n             '</td>' +\n             '</tr>' +\n\n             '</table>';\n\n             }\n             else if(routingType === 'SEQUENTIAL'){\n\n             routingTypeTable = routingTypeTable +\n\n             '<table>' +\n             '<tr>' +\n             '<td class='pcs-th-assignee-table'>' +\n\n             '<img class='pcs-th-sequential-assignee-img' title='Sequential Assignees'>' +\n\n             '</td>' +\n             '</tr>' +\n\n\n\n             '</table>';\n\n             }\n             else if(routingType === 'MANAGEMENT CHAIN'){\n             routingTypeTable = routingTypeTable +\n\n             '<table>' +\n             '<tr>' +\n             '<td class='pcs-th-assignee-table'>' +\n\n             '<img class='pcs-th-management-chain-assignee-img' title='Management Chain in Sequence'>' +\n\n             '</td>' +\n             '</tr>' +\n\n             '<tr>' +\n             '<td class='pcs-th-assignee-table'>' +\n\n             'Number of levels : ' + taskJSON.managementChainLevel +\n\n             '</td>' +\n             '</tr>' +\n\n             '</table>';\n             }\n\n             assigneesHTMLTable = assigneesHTMLTable +\n\n             '<table>' +\n             '<tr>' +\n\n             '<td rowspan='2' style='padding-left: 0px'>' +\n\n             routingTypeTable +\n\n             '</td>';\n\n             for (var k = 0; k < taskJSON.originalAssignees.items.length; k++) {\n\n             var type = taskJSON.originalAssignees.items[k].type;\n\n             if(type === 'user'){\n\n             assigneesHTMLTable = assigneesHTMLTable +\n             '<td class='pcs-th-assignee-table'>' +\n\n             '<img class='pcs-th-history-user-img'>' +\n\n             '</td>';\n\n             } else if(type === 'group'){\n\n             assigneesHTMLTable = assigneesHTMLTable +\n             '<td class='pcs-th-assignee-table'>' +\n\n             '<img class='pcs-th-history-group-img'>' +\n\n             '</td>';\n\n             } else if(type === 'application_role') {\n\n             assigneesHTMLTable = assigneesHTMLTable +\n             '<td class='pcs-th-assignee-table'>' +\n\n             '<img class='pcs-th-history-approle-img'>' +\n\n             '</td>';\n\n             }\n             }\n\n             assigneesHTMLTable = assigneesHTMLTable +\n\n             '</tr>' +\n\n             '<tr>';\n\n             for (var k = 0; k < taskJSON.originalAssignees.items.length; k++) {\n\n\n             assigneesHTMLTable = assigneesHTMLTable +\n             '<td class='pcs-th-assignee-table'>' +\n             '<span class='pcs-th-history-assignee-text'>' +\n             taskJSON.originalAssignees.items[k].id +\n             '</span>' +\n\n             '</td>';\n             }\n\n             assigneesHTMLTable = assigneesHTMLTable +\n             '</tr>' +\n\n             '</table>';\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-blue-dot-image pcs-th-history-user-task-top'>' +\n\n             /!*'<span class='pcs-th-history-task-title'>' +\n\n             data.processHistory[i].activityName +\n\n             '</span>' +\n\n             ' - ' +*!/\n\n             '<span class='pcs-th-history-task-title'>' +\n\n             data.processHistory[i].userTaskTitle +\n\n             '</span>' +\n\n             '<br>' +\n\n             '<span class='pcs-th-history-date'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].creationDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n             '<br><br>' +\n\n             assigneesHTMLTable +\n\n             '</li>';\n\n\n\n             for (var j = 0; j < data.processHistory[i].taskHistory.length; j++) {\n\n\n             if (data.processHistory[i].taskHistory[j].actionName === 'System Update') {\n\n             // do nothing\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Withdrawn') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-withdrawn-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Withdrawn from ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n\n             '</li>';\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Resumed') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-resumed-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Resumed by ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n             '</span>' +\n\n\n             '</li>';\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Suspended') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-suspended-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Suspended by ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n             '</span>' +\n\n\n             '</li>';\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Escalated') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-escalated-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Escalated to ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n\n             '</li>';\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Delegated') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-delegated-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Delegated to ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n\n             '</li>';\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Approved') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-approved-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Approved by ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n\n             '</li>';\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Rejected') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-rejected-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Rejected by ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n             '</span>' +\n\n\n             '</li>';\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName.toString().startsWith('Task Completed')) {\n\n             var actionName = data.processHistory[i].taskHistory[j].actionName.toString();\n\n             var strArray = actionName.split('-');\n             var taskCompletedString = strArray[0].trim();\n             var action = strArray[1].trim();\n\n\n             if(data.processHistory[i].taskHistory[j].displayName) {\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>';\n\n             if (action === 'Rejected') {\n\n             historyHTML = historyHTML +\n             '<img class='pcs-th-rejected-action-img'>';\n             }\n             else if (action === 'Approved') {\n\n             historyHTML = historyHTML +\n             '<img class='pcs-th-approved-action-img'>';\n             } else {\n\n             historyHTML = historyHTML +\n             '<img class='pcs-th-undefined-action-img'>';\n             }\n\n\n             historyHTML = historyHTML +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>' +\n\n             action + ' by ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n\n             '</li>';\n             }\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-task-Completed-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>' +\n\n             taskCompletedString +\n\n             '</span>' + '&nbsp &nbsp' +\n\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n\n             '</li>';\n\n\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Information Submitted') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-info-submitted-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>' +\n\n             '<span class='pcs-th-history-user-name'>' + '' + '</span> ' +\n\n             'submitted more Information to ' + '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '&nbsp &nbsp' + '</span> ' +\n\n             '</span>' +\n\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n             '</li>';\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Task Updated') {\n\n             if(data.processHistory[i].taskHistory[j].displayName)\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-task-updated-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Task updated by ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n\n             '</li>';\n\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Information Requested') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-info-requested-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span> ' +\n\n             'requested for more Information from ' + '<span class='pcs-th-history-user-name'>' + '' + '&nbsp &nbsp' + '</span> ' +\n\n             '</span>' +\n\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n             '</span>' +\n\n\n             '</li>';\n\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Reassigned') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-reassigned-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Reassigned to ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n\n             '</li>';\n\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Assigned') {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-assigned-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>Assigned to ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n             '</span>' +\n\n\n             '</li>';\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Attachment Added') {\n\n             var attURL = data.processHistory[i].taskHistory[j].attachmentUri.href;\n             var attachmentLinkHTML = '';\n\n\n             /!*doGet(attURL, 'application/json', 'json').done(\n             function(attJSON){\n\n             var mimeType = attJSON.mimeType;\n             var attName = attJSON.attachmentName;\n             var attURI = attJSON.uri.href;\n\n             doGet(attURI, mimeType, 'application/json').done(\n             function(attContent){\n\n             var content = attContent.toString();\n\n             var hrefStr = 'data:'+ mimeType + ';charset=utf-8,' + content;\n\n             attachmentLinkHTML = attachmentLinkHTML +\n             '<a href='' + hrefStr + '' download='' + attName + ''>' + attName + '</a>';\n\n\n             historyHTML = historyHTML + '<li class='pcs-th-history-user-task-other-rows'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-att-added-action-img'>' +\n\n             '</div>' +\n\n             'Document attached by ' +\n\n             '<span class='pcs-th-history-user-name'>' +\n\n             data.processHistory[i].taskHistory[j].displayName + '&nbsp &nbsp' +\n\n             '</span>' +\n\n\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n\n\n             '</span>' +\n             '<br>' +\n\n             attachmentLinkHTML +\n\n             '</li>';\n\n\n             }\n             ).fail(\n             function(jqXHR, textStatus, errorThrown){\n             alert('Attachment rest call failed');\n             }\n             );\n             }\n             ).fail(function(jqXHR, textStatus, errorThrown){\n             alert('The JSON REST call for attachment failed');\n             }\n             );*!/\n             }\n\n             else if (data.processHistory[i].taskHistory[j].actionName === 'Comment Added') {\n             historyHTML = historyHTML + '<li class='pcs-th-history-user-task-other-rows'>' +\n\n\n             '<div style='float:left; padding-right: 13px;'>' +\n\n             '<img class='pcs-th-comment-added-action-img'>' +\n\n             '</div>' +\n\n             'Commented by ' +\n\n             '<span class='pcs-th-history-user-name'>' +\n\n             data.processHistory[i].taskHistory[j].displayName +\n\n             '</span>' + '&nbsp &nbsp' +\n\n\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n             '<br>' +\n\n             '<span class='pcs-th-history-comment'>' +\n\n             ''' +\n\n             data.processHistory[i].taskHistory[j].reason +\n\n             ''' +\n\n             '</span>' +\n\n             '</li>';\n             }\n\n             else {\n\n             //for all custom actions. We can not hardcode custom actions\n             var actionName = data.processHistory[i].taskHistory[j].actionName;\n\n             if(data.processHistory[i].taskHistory[j].displayName)\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-history-user-task-other-rows' style='padding-bottom: 45px;'>' +\n\n             '<div style='float:left; padding-right: 15px;'>' +\n\n             '<img class='pcs-th-custom-action-img'>' +\n\n             '</div>' +\n\n             '<span style='padding-top: 11px; float: left;'>' +\n\n             actionName + ' by ' +\n\n             '<span class='pcs-th-history-user-name'>' + data.processHistory[i].taskHistory[j].displayName + '</span>' +\n             '</span>' + '&nbsp &nbsp' +\n             '<span class='pcs-th-history-date pcs-th-history-date-float-right' style='padding-top: 11px;'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].taskHistory[j].updatedDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n\n             '</li>';\n\n\n             }\n             }\n\n             historyHTML = historyHTML + '<br><br>';\n\n             }\n\n             else {\n\n             historyHTML = historyHTML +\n\n             '<li class='pcs-th-green-dot-image'>' +\n\n\n\n             /!*'<span class='pcs-th-history-task-title'>' +\n\n             data.processHistory[i].activityName +\n\n             '</span>' +\n\n             ' - ' +*!/\n\n             '<span class='pcs-th-history-task-title'>' +\n\n             data.processHistory[i].userTaskTitle +\n\n             '</span>' +\n\n             '<br>' +\n\n             '<span class='pcs-th-history-date'>' +\n\n             self.formatTaskHistoryDate(data.processHistory[i].creationDate, 'MMM d, yyyy hh:mm:ss a' ) +\n\n             '</span>' +\n\n             '<br><br><br>' +\n\n             '</li>';\n\n             }\n\n             }\n             }\n\n\n\n             $('#pcs-th-taskHistoryDiv').html(historyHTML);\n\n\n\n\n\n\n             };*/\n\n        }\n\n\n        return TaskHistoryVM;\n    }\n);\n\n",
    "\ndefine('text!pcs/taskhistory/templates/pcs-taskhistory-error.html',[],function () { return '<div class=\"oj-message oj-message-error\">\\n    <span class=\"oj-component-icon oj-message-status-icon oj-message-error-icon\"\\n          role=\"img\">\\n    </span>\\n    <span class=\"oj-message-content\">\\n        <div class=\"oj-message-summary\">\\n            Required parameters are missing\\n        </div>\\n        <div class=\"oj-message-detail\">\\n            <span>This component requires these values -</span>\\n            <pre>\\n    *taskNumber : \\'\\'\\n    </pre>\\n        </div>\\n    </span>\\n</div>\\n';});\n\n",
    "/**\n * Created by srayker on 8/25/2016.\n */\n\ndefine('pcs/pcs.taskhistory',['ojs/ojcore', 'knockout', 'jquery', 'ojL10n!pcs/resources/nls/pcsSnippetsResource',\n\t\t'!text!pcs/taskhistory/templates/pcs-task-history-container.html', 'pcs/taskhistory/viewModel/taskHistoryVM',\n\t\t'!text!pcs/taskhistory/templates/pcs-taskhistory-error.html', 'pcs/util/loggerUtil',\n         'jqueryui-amd/widget'\n    ],\n    function(oj, ko, $, bundle, tmpl, taskhistory,  errortmpl,loggerUtil) {\n        'use strict';\n        $.widget('pcs.taskhistory', {\n\n            //Options to be used as defaults\n            options: {\n                taskNumber: '',\n            },\n\n\t\t\t// Check if the Required options are provided to the widget\n\t\t\t_isValid: function() {\n\t\t\t\tif (this.options.taskNumber === undefined || this.options.taskNumber === '') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\n            _create: function() {\n                // _create will automatically run the first time\n                // this widget is called. Put the initial widget\n                // setup code here, then you can access the element\n                // on which the widget was called via this.element.\n                // The options defined above can be accessed\n                // via this.options this.element.addStuff();\n                var widget = this;\n\n\t\t\t\t// Check if PCSConenction is set\n\t\t\t\tif ($.pcsConnection === undefined) {\n\t\t\t\t\tthis.element.html('<div style=\\'color:red\\'>' + bundle.pcs.common.pcs_connection + ' </div>');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// check if the the plugin is initialized correctly\n\t\t\t\tif (!this._isValid()) {\n\t\t\t\t\tthis.element.html(errortmpl);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n                var data = this.options;\n                data.rootElement = widget.element;\n\n                var params = {\n                    data: data\n                };\n\n                this.element.html(tmpl);\n                var vm = new taskhistory(params);\n                this.model = vm;\n\n                //ko.cleanNode(this.element['0']);\n                ko.applyBindings(vm, this.element['0']);\n            },\n\n            // Destroy an instantiated plugin and clean up modifications\n            // that the widget has made to the DOM\n            destroy: function() {\n                //t his.element.removeStuff();\n                // For UI 1.8, destroy must be invoked from the base\n                // widget\n                $.Widget.prototype.destroy.call(this);\n                // For UI 1.9, define _destroy instead and don't worry\n                // about calling the base widget\n            },\n\n\t\t\t_destroy: function (){\n\t\t\t\tloggerUtil.log('Destroying history');\n\t\t\t\t// clean everything up\n\t\t\t\tif (this.model) {\n\t\t\t\t\tthis.model.dispose();\n\t\t\t\t}\n\t\t\t},\n\n            // Respond to any changes the user makes to the option method\n            _setOption: function(key, value) {\n                this.options[key] = value;\n\n                // For UI 1.8, _setOption must be manually invoked\n                // from the base widget\n                $.Widget.prototype._setOption.apply(this, arguments);\n                // For UI 1.9 the _super method can be used instead\n                // this._super( \"_setOption\", key, value );\n            }\n        });\n    }\n);\n\n"
  ]
}