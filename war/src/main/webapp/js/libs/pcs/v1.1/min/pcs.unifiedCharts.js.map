{
  "version": 3,
  "sources": [
    "../../node_modules/requirejs-text/text.js",
    "text!pcs/charts/unifiedCharts/templates/pcs-unified-container.html",
    "libs/pcs/v1.1/debug/util/loggerUtil.js",
    "libs/pcs/v1.1/debug/util/pcsUtil.js",
    "../../node_modules/oraclejet/dist/js/libs/oj/ojL10n.js",
    "libs/pcs/v1.1/debug/resources/nls/dashboardResource.js",
    "libs/pcs/v1.1/debug/resources/nls/dashboardResource!ojL10n",
    "text!pcs/charts/visualization/templates/pcs-visualization.html",
    "libs/pcs/v1.1/debug/charts/visualization/viewModel/util/visualizationUtil.js",
    "libs/pcs/v1.1/debug/charts/visualization/viewModel/services/DataServices.js",
    "libs/pcs/v1.1/debug/charts/visualization/viewModel/custom/customDashboard.js",
    "libs/pcs/v1.1/debug/charts/visualization/view/custom/businessAnalytics.html!text",
    "libs/pcs/v1.1/debug/charts/visualization/viewModel/visualizationContainer.js",
    "libs/pcs/v1.1/debug/charts/visualization/view/visualizationContainer.html!text",
    "libs/pcs/v1.1/debug/pcs.visualization.js",
    "text!pcs/charts/dashboard/templates/pcs-dashboard.html",
    "libs/pcs/v1.1/debug/charts/dashboard/util.js",
    "libs/pcs/v1.1/debug/charts/dashboard/viewModel/dashboards/healthDashboard.js",
    "libs/pcs/v1.1/debug/charts/dashboard/view/dashboards/healthDashboard.html!text",
    "libs/pcs/v1.1/debug/charts/dashboard/viewModel/dashboards/openDashboard.js",
    "libs/pcs/v1.1/debug/charts/dashboard/view/dashboards/openDashboard.html!text",
    "libs/pcs/v1.1/debug/charts/dashboard/viewModel/dashboards/workloadDashboard.js",
    "libs/pcs/v1.1/debug/charts/dashboard/view/dashboards/workloadDashboard.html!text",
    "libs/pcs/v1.1/debug/charts/dashboard/viewModel/dashboards/cycleTimeDashboard.js",
    "libs/pcs/v1.1/debug/charts/dashboard/view/dashboards/cycleTimeDashboard.html!text",
    "libs/pcs/v1.1/debug/charts/dashboard/viewModel/dashboards/closedDashboard.js",
    "libs/pcs/v1.1/debug/charts/dashboard/view/dashboards/closedDashboard.html!text",
    "libs/pcs/v1.1/debug/charts/dashboard/viewModel/dashboards/filters/processFilter.js",
    "libs/pcs/v1.1/debug/charts/dashboard/view/dashboards/filters/processFilter.html!text",
    "libs/pcs/v1.1/debug/charts/dashboard/viewModel/dashboardContainer.js",
    "libs/pcs/v1.1/debug/charts/dashboard/view/dashboardContainer.html!text",
    "libs/pcs/v1.1/debug/pcs.dashboard.js",
    "libs/pcs/v1.1/debug/pcs.unifiedCharts.js"
  ],
  "names": [],
  "mappingszZA;AACA;AACA;AACA,ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjjhzoCA;AACA;AACA;AACA,ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpvztcnzHA;AACA;AACA;AACA,ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "pcs.unifiedCharts.js",
  "sourcesContent": [
    "/**\n * @license text 2.0.15 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/text/LICENSE\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    function useDefault(value, defaultValue) {\n        return value === undefined || value === '' ? defaultValue : value;\n    }\n\n    //Allow for default ports for http and https.\n    function isSamePort(protocol1, port1, protocol2, port2) {\n        if (port1 === port2) {\n            return true;\n        } else if (protocol1 === protocol2) {\n            if (protocol1 === 'http') {\n                return useDefault(port1, '80') === useDefault(port2, '80');\n            } else if (protocol1 === 'https') {\n                return useDefault(port1, '443') === useDefault(port2, '443');\n            }\n        }\n        return false;\n    }\n\n    text = {\n        version: '2.0.15',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.lastIndexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || isSamePort(uProtocol, uPort, protocol, port));\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'] &&\n            !process.versions['atom-shell'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file[0] === '\\uFEFF') {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n",
    "\ndefine('text!pcs/charts/unifiedCharts/templates/pcs-unified-container.html',[],function () { return ' <div id=\"bpm-charts-container\">\\n    <div class=\"oj-row oj-cols-nopad\">\\n        <div class=\"oj-xl-12 oj-lg-12 oj-md-12 oj-col\">\\n\\t\\t\\t<div id=\"bpm-unifiedCharts-tabs\" data-bind=\"ojComponent:{component: \\'ojTabs\\'}\">\\n\\t\\t\\t    <ul>\\n\\t\\t\\t      <li><span data-bind=\"text: bundle.vis.formlbl.dashboard\"></span></li>\\n\\t\\t\\t      <li><span data-bind=\"text: bundle.vis.formlbl.visualization\"></span></li>\\n\\t\\t\\t    </ul>\\n\\n\\t\\t\\t    <div id=\"bpm-charts-tabs-1\">\\n\\t\\t\\t      <div id=\"bpm-charts-dash\"></div>\\n\\t\\t\\t    </div>\\n\\t\\t\\t    <div id=\"bpm-charts-tabs-2\">\\n\\t\\t\\t      <div id=\"bpm-charts-vis\"></div>\\n\\t\\t\\t    </div>\\n\\t\\t  \\t</div>\\n        </div>\\n    </div>\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 4/9/18.\n */\n\ndefine('pcs/util/loggerUtil',['jquery'],function($){\n\t'use strict';\n\n\tfunction PCSLogger() {\n\t\tvar self= this;\n\t\tself.enableLog = false;\n\n\t\treturn {\n\t\t\tlog: function(value) {\n\t\t\t\tif (self.enableLog) {\n\t\t\t\t\tconsole.log(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror : function (value) {\n\t\t\t\tif (self.enableLog) {\n\t\t\t\t\tconsole.error(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdebug : function (value) {\n\t\t\t\tif (self.enableLog) {\n\t\t\t\t\tconsole.debug(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\twarn : function (value) {\n\t\t\t\tif (self.enableLog) {\n\t\t\t\t\tconsole.warn(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tenableLog :  function (){\n\t\t\t\tself.enableLog = true;\n\t\t\t},\n\t\t\tdisableLog : function(){\n\t\t\t\tself.enableLog = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar instance  = new PCSLogger();\n\t//console.log('####Intitating logger Util');\n\n\treturn instance;\n\n});\n\n\n",
    "/**\n * Created by nisabhar on 3/11/2016.\n */\n\ndefine('pcs/util/pcsUtil',['module', 'knockout', 'ojs/ojcore', 'jquery','pcs/util/loggerUtil'], function(module, ko, oj, $,loggerUtil) {\n    'use strict';\n\n    var eventList = {};\n\n    //A Pub/Sub system based on JQuery callbacks\n    $.CustomEvent = function(eventId) {\n        var callbacks;\n        var pubsub = eventId && eventList[eventId];\n\n        if (!pubsub) {\n            callbacks = $.Callbacks();\n            pubsub = {\n                publish: callbacks.fire,\n                subscribe: callbacks.add,\n                unsubscribe: callbacks.remove\n            };\n            if (eventId) {\n                eventList[eventId] = pubsub;\n            }\n        }\n        return pubsub;\n    };\n\n    //IE polyfill for the CustomEvent constructor\n\t(function () {\n\t\tif ( typeof window.CustomEvent === \"function\" ) return false; //If not IE\n\n\t\tfunction CustomEvent ( event, params ) {\n\t\t\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\n\t\t\tvar evt = document.createEvent( 'CustomEvent' );\n\t\t\tevt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n\t\t\treturn evt;\n\t\t}\n\n\t\tCustomEvent.prototype = window.Event.prototype;\n\n\t\twindow.CustomEvent = CustomEvent;\n\t})();\n\n    var _eventHandler = {\n        addHandler: function(element, type, handler) {\n            if (element.addEventListener) {\n                element.addEventListener(type, handler, false);\n            } else if (element.attachEvent) {\n                element.attachEvent('on' + type, handler);\n            } else {\n                element['on' + type] = handler;\n            }\n        },\n        removeHandler: function(element, type, handler) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, handler, false);\n            } else if (element.detachEvent) {\n                element.detachEvent('on' + type, handler);\n            } else {\n                element['on' + type] = null;\n            }\n        }\n    };\n\n    if (!String.prototype.startsWith) {\n        Object.defineProperty(String.prototype, 'startsWith', {\n            enumerable: false,\n            value: function(searchString, position) {\n                position = position || 0;\n                return this.substr(position, searchString.length) === searchString;\n            }\n        });\n    }\n\n    if (!String.prototype.endsWith) {\n        Object.defineProperty(String.prototype, 'endsWith', {\n            enumerable: false,\n            value: function(searchString, position) {\n                var subjectString = this.toString();\n                if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n                    position = subjectString.length;\n                }\n                position -= searchString.length;\n                var lastIndex = subjectString.indexOf(searchString, position);\n                return lastIndex !== -1 && lastIndex === position;\n            }\n        });\n    }\n\n    //TODO nisabhar : Remove this both commented code, We can not assume where snippets is being consumed\n    //util for centering any element in the center of the page\n    //stackoverflow - http://stackoverflow.com/questions/210717/using-jquery-to-center-a-div-on-the-screen\n    //$.fn.center = function () {\n    //    this.css('position','absolute');\n    //    this.css('top', Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +\n    //            $(window).scrollTop()) + 'px');\n    //    this.css('left', Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +\n    //            $(window).scrollLeft()) + 'px');\n    //    return this;\n    //};\n    //\n    ////show loading animation for any ajax event\n    //$(document).bind('ajaxStart', function(){\n    //    $('body').append('<img id='pcs-loading-anim' src='css/pcs/images/spin.gif'/>');\n    //    $('#pcs-loading-anim').center();\n    //}).bind('ajaxStop', function(){\n    //    $('#pcs-loading-anim').remove();\n    //});\n\n    /**\n     * This method is to do dummy ADF call\n     * @param url\n     * @private\n     */\n    var _adfProxyCall = function(url) {\n        // Let the container handle if container is willing to\n        if (typeof window.doADFProxyCall === 'function') {\n            window.doADFProxyCall(url);\n        }\n        // else handle ourself\n        else {\n            if (url) {\n                window.location.assign(url);\n            }\n        }\n    };\n\n    /**\n     * Method to parse multi part data used by startform plugin\n     * @param jqXHR\n     * @returns {{}}\n     * @private\n     */\n    var _multipartParse = function(jqXHR) {\n        var contentType = jqXHR.getResponseHeader('Content-Type');\n        var body = jqXHR.response;\n\n        // Examples for content types:\n        //      multipart/form-data; boundary='----7dd322351017c'; ...\n        //      multipart/form-data; boundary=----7dd322351017c; ...\n        var m = contentType.match(/boundary=(?:'([^']+)'|([^;]+))/i);\n\n        if (!m) {\n            throw new Error('Bad content-type header, no multipart boundary');\n        }\n\n        var boundary = m[1] || m[2];\n        var isRaw = typeof(body) !== 'string';\n        var s, i;\n\n        function Header_parse(headerString) {\n\n            var headers = headerString.split('\\r\\n');\n\n            var contentType = 'text/plain';\n            var fieldName = 'pcsFormUrl';\n\n            //Result object\n            var headerFields = {\n                contentType: contentType,\n                fieldName: fieldName\n            };\n\n            for (var j = 1; j < headers.length; j++) {\n                var header = headers[j];\n                /*jshint validthis:true */\n                var matchResult = header.match(/^.*filename=\"([^\"]*)\"/);\n                if (matchResult) {\n                    headerFields.fieldName = matchResult[1];\n                } else {\n                    var searchStr = 'Content-Type:';\n                    if (header.indexOf(searchStr) > -1) {\n                        matchResult = header.substring(header.indexOf(searchStr) + searchStr.length);\n                    }\n                    if (matchResult) {\n                        headerFields.contentType = matchResult.trim();\n                    }\n                }\n            }\n            return headerFields;\n        }\n\n        // \\r\\n is part of the boundary.\n        boundary = '\\r\\n--' + boundary;\n\n        if (isRaw) {\n            var view = new Uint8Array(body);\n            //s = String.fromCharCode.apply(null, view);\n\n            var CHUNK_SZ = 0x8000;\n            var c = [];\n            for (i = 0; i < view.length; i += CHUNK_SZ) {\n                c.push(String.fromCharCode.apply(null, view.subarray(i, i + CHUNK_SZ)));\n            }\n            s = c.join('');\n        } else {\n            s = body;\n        }\n\n        // Prepend what has been stripped by the body parsing mechanism.\n        s = '\\r\\n' + s;\n\n        var parts = s.split(new RegExp(boundary)),\n            partsByName = {};\n\n        // First part is a preamble, last part is closing '--'\n        for (i = 1; i < parts.length - 1; i++) {\n            // var subparts = parts[i].split('\\r\\n\\r\\n');\n            // var headers = subparts[0].split('\\r\\n');\n            // partsByName[fieldName] = isRaw?rawStringToBuffer(subparts[1]):subparts[1];\n\n            var searchStr = '\\r\\n\\r\\n';\n            var data = parts[i].substring(parts[i].indexOf(searchStr) + searchStr.length); // we need to igonore the two enters in string thats why +3\n            var header = parts[i].substring(0, parts[i].indexOf(searchStr));\n\n            var headerResult = Header_parse(header);\n\n            var convertDataToBuffer = false;\n\n            if (isRaw && !headerResult.contentType.startsWith('text')) {\n                convertDataToBuffer = true;\n            }\n\n            partsByName[headerResult.fieldName] = {\n                data: data,\n                contentType: headerResult.contentType,\n                fileName: headerResult.fieldName\n            };\n        }\n        return partsByName;\n    };\n\n    //Usage =hideStartform=false&filter={'processName':'AttachApplicationProcess'}&hideSave=true&hideDiscard=true&submitLabel='My Submit'\n    // Read a page's GET URL variables and return them as an associative array.\n    function _getUrlParametersObject() {\n        var vars = {},\n            hash;\n\n        //no query params\n        if (window.location.href.indexOf('?') === -1) {\n            return vars;\n        }\n        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\n        for (var i = 0; i < hashes.length; i++) {\n            hash = hashes[i].split('=');\n            //vars[hash[0]] = hash[1];\n            var key = decodeURIComponent(hash[0]);\n            var val = decodeURIComponent(hash[1]);\n            var obj = JSON.parse(val);\n            vars[key] = obj;\n        }\n\n        return vars;\n    }\n\n    var _getAuthToken = function(url) {\n        return $.ajax({\n            type: 'GET',\n            url: url,\n            dataType: 'text',\n            xhrFields: {\n                withCredentials: true\n            }\n        });\n    };\n\n    return {\n        adfProxyCall: _adfProxyCall,\n        getAuthToken: _getAuthToken,\n        multipartParse: _multipartParse,\n        getUrlParametersObject: _getUrlParametersObject,\n        eventHandler: _eventHandler,\n        initComponentForIFrame: function(options, loadComponent, element) {\n            if (!$.isEmptyObject($.pcsConnection)) {\n                loadComponent();\n            } else {\n                $.pcsConnection = {};\n                //$.pcsConnection.serverURL = \"http://den02biu.us.oracle.com:7001\";\n\n\t\t\t\t// See if test mode is passed\n\t\t\t\tif(!$.isEmptyObject(options)){\n\t\t\t\t\tif(options.testMode) {\n\t\t\t\t\t\t$.pcsConnection.testMode = options.testMode;\n\t\t\t\t\t}\n\t\t\t\t\tif(options.serverURL){\n\t\t\t\t\t\t$.pcsConnection.serverURL =options.serverURL;\n\t\t\t\t\t}\n\t\t\t\t\tif(options.authInfo){\n\t\t\t\t\t\t$.pcsConnection.authInfo =options.authInfo;\n\t\t\t\t\t\tloadComponent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n                var util = this;\n                var scriptCallback = function() {\n                    var serverURL = util.getServerURL();\n                    loggerUtil.log('Script loaded and ready, getting token');\n                    util.getAuthToken(serverURL + '/ic/process/workspace/auth/token')\n                        .done(function(data) {\n                            if (data && data.startsWith('<html')) {\n                                element.text('User cannot be authorized').show();\n                            } else {\n                                $.pcsConnection.authInfo = 'Bearer ' + data;\n                                loadComponent();\n                            }\n                        })\n                        .fail(function(jqXHR) {\n                            element.text('User cannot be authorized').show();\n                        });\n                };\n\n                //Load a script tag on PCS Server\n                var script = document.createElement('script');\n                //real browsers\n                script.onload = scriptCallback;\n                //Internet explorer\n                script.onreadystatechange = function() {\n                    if (this.readyState === 'complete') {\n                        scriptCallback();\n                    }\n                };\n\n                var serverURL = this.getServerURL();\n                script.src = serverURL + '/ic/process/workspace/faces/js/homePage.js';\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        },\n        getCookie: function(key) {\n            var result;\n            return (result = new RegExp('(?:^|; )' + encodeURIComponent(key) + '=([^;]*)').exec(document.cookie)) ? (result[1]) : null;\n        },\n\t\tstoreLoggedInUser : function (data) {\n\n\t\t\t$.pcsConnection['isAdmin'] = data.adminFlag;\n\t\t\t$.pcsConnection['isProcessOwner'] = false;\n\n\t\t\tif(data.roles && data.roles.items){\n\t\t\t\t$.each(data.roles.items, function(index, role) {\n\t\t\t\t\tif(role.id.endsWith('.ProcessOwner')){\n\t\t\t\t\t\t$.pcsConnection['isProcessOwner'] = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n        getServerURL: function() {\n            if ($.pcsConnection && $.pcsConnection.serverURL) {\n                return $.pcsConnection.serverURL.endsWith('/') ? $.pcsConnection.serverURL.substring(0, $.pcsConnection.serverURL.length - 1) : $.pcsConnection.serverURL;\n            } else {\n            \tvar url = window.location.origin;\n\t\t\t\tif (!$.pcsConnection) {\n\t\t\t\t\t$.pcsConnection= {};\n\t\t\t\t}\n\t\t\t\t$.pcsConnection.serverURL =url;\n                return url;\n            }\n        },\n        getRestUri: function() {\n            //if($.pcsConnection.restURI){\n            //    return $.pcsConnection.restURI  ;\n            //}else{\n            return '/bpm/api/4.0/';\n            //}\n        },\n        getAuthInfo: function() {\n            if ($.pcsConnection && $.pcsConnection.authInfo) {\n                var authInfo = $.pcsConnection.authInfo;\n                if (!authInfo.startsWith('Bearer ') && !authInfo.startsWith('Basic ')) {\n                    authInfo = 'Bearer ' + authInfo;\n                }\n                return authInfo;\n            }\n            return '';\n        },\n        getRestURL: function() {\n            if ($.pcsConnection && $.pcsConnection.restURL) {\n                return $.pcsConnection.restURL;\n            } else {\n                var url = this.getServerURL() + this.getRestUri();\n                if ($.pcsConnection) {\n                    $.pcsConnection.restURL = url;\n                }\n                return url;\n            }\n        },\n        getDpServerURL: function() {\n            if ($.pcsConnection && $.pcsConnection.dpServerURL) {\n                return $.pcsConnection.dpServerURL.endsWith('/') ? $.pcsConnection.dpServerURL.substring(0, $.pcsConnection.dpServerURL.length - 1) : $.pcsConnection.dpServerURL;\n            } else {\n\t\t\t\treturn this.getServerURL();\n            }\n        },\n        getDpRestURL: function() {\n            var url = this.getDpServerURL() + '/bpm/api/4.0/';\n            return url;\n        },\n\t\tbeforeRequestCallback: function(xhr,util){\n\t\t\t//Dummy ADF call\n\t\t\tutil.adfProxyCall();\n\n\t\t\txhr.setRequestHeader('Authorization', util.getAuthInfo());\n\t\t\tif (util.isTestMode()) {\n\t\t\t\txhr.setRequestHeader('pcs_mode', 'dev');\n\t\t\t}\n\t\t\tvar locale = requirejs.s.contexts._.config.locale;\n\t\t\tif(locale){\n\t\t\t\txhr.setRequestHeader('Accept-Language', locale);\n\t\t\t}\n\t\t},\n        isTestMode: function() {\n            if ($.pcsConnection && $.pcsConnection.testMode) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        taskIconColor: function(str) {\n\t\t\tvar colorCodes = [ '#6e8598', '#754b9a', '#45ac62', '#ed813d', '#3f92d0', '#E85E93',\n\t\t\t\t'#81BB5F', '#DFE146', '#FABC39', '#EB5B60', '#1FB4AD', '#00B6D1'];\n\n            if (!str) {\n                return 'grey';\n            }\n            var hash = 0,\n                i, chr, len;\n\n            for (i = 0, len = str.length; i < len; i++) {\n                chr = str.charCodeAt(i);\n                hash = ((hash << 5) - hash) + chr;\n                hash |= 0; // Convert to 32bit integer\n            }\n\n            // var code = hash;\n            // var B = code & 0xFF;\n            //\n            // code >>= 8;\n            // var G = code & 0xFF;\n            //\n            // code >>= 8;\n            // var R = code & 0xFF;\n            //\n            // return 'rgb(' + R + ',' + G + ',' + B + ')';\n\n            var index = hash % (colorCodes.length) ;\n\n            return colorCodes[Math.abs(index)];\n        },\n        taskInitials: function(taskName) {\n            if (!taskName) {\n                return 'NA';\n            }\n\n            taskName = taskName.replace(' ', '');\n            var firstCharUpper = taskName.charAt(0).toUpperCase();\n            var secondCharUpper = '';\n            for (var i = 1; i < taskName.length; i++) {\n                if (taskName.charAt(i) === taskName.charAt(i).toUpperCase()) {\n                    secondCharUpper = taskName.charAt(i);\n                    break;\n\n                }\n            }\n\n            return firstCharUpper + secondCharUpper;\n\n        },\n\t\tgetRandomInt : function (min, max) {\n\t\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n        },\n\t\tunApplyBindings : function($node, remove) {\n\t\t\t// unbind events\n\t\t\t$node.find('*').each(function() {\n\t\t\t\t$(this).off();\n\t\t\t\t$(this).unbind();\n\t\t\t});\n\n\t\t\t$node.off();\n\n\t\t\t// Remove KO subscriptions and references\n\t\t\tif (remove) {\n\t\t\t\tko.cleanNode($node[0]);\n\t\t\t\t$node.find('*').each(function() {\n\t\t\t\t\t$(this).remove();\n\t\t\t\t});\n\t\t\t\tko.removeNode($node);\n\t\t\t} else {\n\t\t\t\tko.cleanNode($node);\n\t\t\t\t$node.find('*').each(function() {\n\t\t\t\t\t$(this).remove();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n        compositeVersion: function (formMetadataURL) {\n            //'webforms/oracleinternalpcs~Mortgage_Underwriting!1*soa_1b4254aa-b094-4cc2-9ea7-29fd58919997~6f5740fb-a6d3-4f82-a022-49854f89accb~c3f48544-3ea0-4238-9d8c-a3e8cedec34c',\n            var version;\n            if (formMetadataURL){\n                try{\n                    var splitOnEsclamation = formMetadataURL.split('!');\n                    var splitOnStar = splitOnEsclamation[1].split('*');\n                    version = splitOnStar[0];\n                }\n                catch (err){\n                    loggerUtil.error('Error while getting version');\n                }\n\n            }\n            return version;\n        },\n\t\tapplicationName: function (formMetadataURL) {\n\t\t\t//'webforms/oracleinternalpcs~Mortgage_Underwriting!1*soa_1b4254aa-b094-4cc2-9ea7-29fd58919997~6f5740fb-a6d3-4f82-a022-49854f89accb~c3f48544-3ea0-4238-9d8c-a3e8cedec34c',\n\t\t\tvar applicationName;\n\t\t\tif (formMetadataURL){\n\t\t\t\ttry{\n\t\t\t\t\tvar splitOnTilde = formMetadataURL.split('~');\n\t\t\t\t\tvar splitOnEscalamation = splitOnTilde[1].split('*');\n\t\t\t\t\tapplicationName = splitOnEscalamation[0];\n\t\t\t\t}\n\t\t\t\tcatch (err){\n\t\t\t\t\tloggerUtil.error('Error while getting application Name');\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn applicationName;\n\t\t}\n    };\n});\n\n",
    "/*\n RequireJS i18n 2.0.2 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n Available via the MIT or new BSD license.\n see: http://github.com/requirejs/i18n for details\n*/\n(function(){function s(a,b,d,h,g,e){b[a]||(a=a.replace(/^zh-(Hans|Hant)-([^-]+)$/,\"zh-$2\"));return b[a]?(d.push(a),!0!==b[a]&&1!==b[a]||h.push(g+a+\"/\"+e),!0):!1}function B(a){var b=a.toLowerCase().split(/-|_/);a=[b[0]];var d=1,h;for(h=1;h<b.length;h++){var g=b[h],e=g.length;if(1==e)break;switch(d){case 1:if(d=2,4==e){a.push(g.charAt(0).toUpperCase()+g.slice(1));break}case 2:d=3;a.push(g.toUpperCase());break;default:a.push(g)}}if(!(\"zh\"!=a[0]||1<a.length&&4==a[1].length)){b=\"Hans\";d=1<a.length?a[1]:\nnull;if(\"TW\"===d||\"MO\"===d||\"HK\"===d)b=\"Hant\";a.splice(1,0,b)}return a}function w(a,b){for(var d in b)b.hasOwnProperty(d)&&(null==a[d]?a[d]=b[d]:\"object\"===typeof b[d]&&\"object\"===typeof a[d]&&w(a[d],b[d]))}var x=/(^.*(^|\\/)nls(\\/|$))([^\\/]*)\\/?([^\\/]*)/;define('ojL10n',[\"module\"],function(a){var b=a.config?a.config():{};return{version:\"2.0.1+\",load:function(a,h,g,e){e=e||{};e.locale&&(b.locale=e.locale);var c=x.exec(a),n=c[1],f,p=c[5],q,k=[],t={},y,r=\"\",z,A,l,u,v,m;c[5]?(n=c[1],a=n+p,f=c[4]):(p=c[4],f=b.locale,\n\"undefined\"!==typeof document?(f||(f=e.isBuild?\"root\":document.documentElement.lang)||(f=void 0===navigator?\"root\":navigator.language||navigator.userLanguage||\"root\"),b.locale=f):f=\"root\");q=B(f);z=b.noOverlay;A=b.defaultNoOverlayLocale;if(c=b.merge)if(l=c[n+p])c=x.exec(l),u=c[1],v=c[4];m=[];for(c=0;c<q.length;c++)y=q[c],r+=(r?\"-\":\"\")+y,m.push(r);e.isBuild?(k.push(a),l&&k.push(l),h(k,function(){g()})):(\"query\"==b.includeLocale&&(a=h.toUrl(a+\".js\"),a+=(-1===a.indexOf(\"?\")?\"?\":\"&\")+\"loc=\"+f),e=[a],\nl&&e.push(l),h(e,function(a,b){var d=[],c=function(a,b,c){for(var e=z||!0===a.__noOverlay,h=A||a.__defaultNoOverlayLocale,g=!1,f=m.length-1;0<=f&&(!g||!e);f--)g=s(m[f],a,d,k,b,c);f=1===m.length&&\"root\"===m[0];e&&(f||!g)&&h&&s(h,a,d,k,b,c);f||s(\"root\",a,d,k,b,c)};c(a,n,p);var e=d.length;b&&c(b,u,v);h(k,function(){var c=function(a,b,c,e,f){for(;b<c&&d[b];b++){var g=d[b],k=a[g];if(!0===k||1===k)k=h(e+g+\"/\"+f);w(t,k)}};c(b,e,d.length,u,v);c(a,0,e,n,p);t._ojLocale_=q.join(\"-\");g(t)})}))}}})})();\n\n",
    "define('pcs/resources/nls/dashboardResource',{root:!0,de:!0,es:!0,fr:!0,it:!0,ja:!0,ko:!0,pt:!0,\"zh-Hans\":!0,\"zh-Hant\":!0});\n",
    "\n",
    "\ndefine('text!pcs/charts/visualization/templates/pcs-visualization.html',[],function () { return '<div id=\"bpm-vis-mainContainer\">\\n\\t<div  class=\"oj-row bpm-vis-center-align\">\\n\\t\\t<div id=\"bpm-vis-loading-indicator\" class=\"bpm-vis-center-align bpm-vis-loading\"/>\\n\\t</div>\\n\\t<div class=\"oj-row\">\\n\\t\\t<div class=\"oj-xl-12 oj-lg-12 oj-md-12 oj-col\">\\n\\t\\t\\t<div id=\"visualizationContainer\" data-bind=\"ojModule: { name: \\'pcs/charts/visualization/viewModel/visualizationContainer\\', viewName: \\'pcs/charts/visualization/view/visualizationContainer\\',\\n\\t\\t\\t\\tparams: {parent: $data}}\"></div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 11/20/2015.\n */\n\n/**\n * Created by nisabhar on 6/30/2015.\n */\n\n\ndefine('pcs/charts/visualization/viewModel/util/visualizationUtil',['jquery', 'knockout', 'ojL10n!pcs/resources/nls/dashboardResource'], function ($, ko, bundle) {\n\n\n\tvar _columnAlias = function(data) {\n\t\tif (data.columnsInfo) {\n\t\t\tvar ret = {};\n\t\t\tvar i;\n\t\t\tfor (i = 0; i < data.columnsInfo.length; i++) {\n\t\t\t\tret[data.columnsInfo[i].columnName.replace(\"TASK\",\"PROCESS\")] = i;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n\n\tvar _adfProxyCall = function(url){\n\t\t// Let the container handle if container is willing to\n\t\tif (typeof doADFProxyCall == 'function') {\n\t\t\tdoADFProxyCall(url);\n\t\t}\n\t\t// else handle ourself\n\t\telse{\n\t\t\tif(url) {\n\t\t\t\twindow.location.assign(url);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar _errorHandler = function (jqXHR, customMsg){\n\t\t$(\"#bpm-dsb-error-dialog\").ojDialog(\"open\");\n\n\t\tvar msg = bundle.container.generic_error_msg;\n\n\t\tif(customMsg){\n\t\t\tmsg = customMsg;\n\t\t}\n\n\t\telse if (jqXHR && jqXHR.status === 401){\n\t\t\tmsg= bundle.container.access_error_msg;\n\t\t}\n\n\t\t$(\"#bpm-dsb-error-dialog-custom-text\").text(msg);\n\n\t};\n\n\n\tvar _constants ={\n\t\tqueries : {\n\t\t\t//Custom\n\t\t\tAPPLICATION_LIST : \"PROCESS_LABEL_LIST\"\n\t\t},\n\t\tdataType : {\n\t\t\tTIMESTAMP : 'TIMESTAMP',\n\t\t\tDATETIME : 'DATETIME',\n\t\t\tINT : 'INT'\n\t\t},\n\t\tmisc : {\n\t\t\tANY : 'ANY',\n\t\t\tALL : 'ALL',\n\t\t\tVALUE : 'value',\n\t\t\tVISIBLE : 'visible'\n\t\t},\n\t\tchartType :{\n\t\t\tBAR : 'bar',\n\t\t\tLINE:'line',\n\t\t\tAREA :'area',\n\t\t\tPIE:'pie',\n\t\t\tLINEWITHAREA:'lineWithArea',\n\t\t\tFUNNEL:'funnel',\n\t\t\tCOMBO :'combo'\n\t\t},\n\t\tcolumnTypes : {\n\t\t\tATTRIBUTE : 'ATTRIBUTE',\n\t\t\tDIMENSION : 'DIMENSION',\n\t\t\tMEASURE : 'MEASURE'\n\t\t},\n\t\tdataSource :{\n\t\t\tPROCESS :'PROCESS',\n\t\t\tACTIVITY:'ACTIVITY',\n\t\t\tTASK:'TASK',\n\t\t\tASSIGNMENT:'ASSIGNMENT'\n\t\t},\n\t\tfunctionList :{\n\t\t\tSUM:'SUM',\n\t\t\tCOUNT:'COUNT',\n\t\t\tAVG:'AVG',\n\t\t\tMIN:'MIN',\n\t\t\tMEDIAN:'MEDIAN',\n\t\t\tMAX:'MAX',\n\t\t\tSTDDEV:'STDDEV',\n\t\t\tCOUNTDISTINCT:'COUNTDISTINCT',\n\t\t\tVARIANCE:'VARIANCE'\n\t\t},\n\t\ttimeGroups : [\n\t\t\t'YEAR',\n\t\t\t'QUARTER',\n\t\t\t'MONTH',\n\t\t\t'WEEK',\n\t\t\t'DAYOFYEAR',\n\t\t\t'DAYOFMONTH',\n\t\t\t'DAYOFWEEK',\n\t\t\t'HOUR',\n\t\t\t'MINUTE',\n\t\t\t'SECOND'\n\t\t],\n\t\tlastNDays : {\n\t\t\t'7': '1WEEK',\n\t\t\t'30': '1MONTH',\n\t\t\t'60': '2MONTHS',\n\t\t\t'90': '3MONTHS',\n\t\t\t'180': '6MONTHS',\n\t\t\t'270': '9MONTHS',\n\t\t\t'365': '1YEAR'\n\t\t}\n\n\t};\n\n\treturn {\n\t\tcolumnAlias : _columnAlias,\n\t\tconstants : _constants,\n\t\tdrilldown : _adfProxyCall,\n\t\terrorHandler : _errorHandler,\n\t\trefreshAll : function(observableArray, fromArray){\n\t\t\t//push all the items from a array to an observable array and\n\t\t\t//notify the subscribers to the observableArray at the end\n\t\t\tobservableArray.valueWillMutate();\n\t\t\tobservableArray.removeAll();\n\t\t\tko.utils.arrayPushAll(observableArray, fromArray);\n\t\t\tobservableArray.valueHasMutated();\n\t\t},\n\t\taddAll : function (observableArray, fromArray){\n\t\t\t//Add all the items from a array to an observable array and\n\t\t\t//notify the subscribers to the observableArray at the end\n\t\t\tobservableArray.valueWillMutate();\n\t\t\tko.utils.arrayPushAll(observableArray, fromArray);\n\t\t\tobservableArray.valueHasMutated();\n\t\t},\n\t\tstartsWith : function(str, searchString, position){\n\t\t\tposition = position || 0;\n\t\t\treturn str.substr(position, searchString.length) === searchString;\n\t\t}\n\t};\n});\n\n\n",
    "\"use strict\";\n/**\n * Created by srayker on 12/10/2015.\n */\ndefine('pcs/charts/visualization/viewModel/services/DataServices',['jquery', 'pcs/charts/visualization/viewModel/util/visualizationUtil'],\n\tfunction($, utils){\n\t\tvar self = this;\n\t\t//Object for maintaining all service path information\n\t\tvar paths = {\n\t\t\t'applicationNameList' : 'ootbqueries/APPLICATION_NAME_LIST',\n\t\t\t'datasources' : 'businessquery-metadata/datasources',\n\t\t\t'columnsListByApp' : 'businessquery-metadata/datasources/{dataSource}/columns?applicationName={appName}',\n\t\t\t'processList' : 'ootbqueries/PROCESS_LABEL_LIST',\n\t\t\t'aggregateOperations' : 'businessquery-metadata/aggregateoperations',\n\t\t\t'comparisonOperators': 'businessquery-metadata/comparisonoperators',\n\t\t\t'businessQuery' : 'businessquery',\n\t\t\t'businessQueries' : 'businessquery-metadata/businessqueries',\n\t\t\t'businessQueryById' : 'businessquery-metadata/businessqueries/{businessQueryId}'\n\t\t};\n\n\t\tvar authInfo = \"\";\n\t\tvar baseRestURL = \"\";\n\n\t\t// Handle errors during a ajax call\n\t\tfunction ajaxErrorHandler(jqXHR){\n\t\t\tvar defaultErrMsg = oj.Translations.getTranslatedString('vis.error_msg.data_fetch_error');\n\t\t\tif(jqXHR.status === 400 || jqXHR.status === 500){\n\t\t\t\tvar respJSON = $.parseJSON(jqXHR.responseText);\n\t\t\t\tvar respMsg = respJSON && respJSON.detail ? respJSON.detail : defaultErrMsg;\n\t\t\t\tutils.errorHandler('', respMsg);\n\t\t\t} else if (jqXHR.status !== 403 && jqXHR.status !== 404 && jqXHR.status !== 204){\n\t\t\t\tutils.errorHandler('', defaultErrMsg);\n\t\t\t}\n\t\t}\n\n\t\t// wrapper function for HTTP GET\n\t\tvar doGet = function(url){\n\t\t\tutils.drilldown();\n\t\t\treturn doAjax(url, 'GET');\n\t\t};\n\n\t\t// wrapper function for HTTP POST\n\t\tvar doPost = function(url, payload){\n\t\t\tutils.drilldown();\n\t\t\treturn doAjax(url, 'POST', payload);\n\t\t};\n\n\t\t// wrapper function for HTTP PUT\n\t\tvar doPut = function(url, payload){\n\t\t\tutils.drilldown();\n\t\t\treturn doAjax(url, 'PUT', payload);\n\t\t};\n\n\t\t// wrapper function for HTTP DELETE\n\t\tvar doDelete = function(url, payload){\n\t\t\tutils.drilldown();\n\t\t\treturn doAjax(url, 'DELETE', payload);\n\t\t};\n\n\t\t//AJAX utility function\n\t\tvar doAjax = function(url, method, payload){\n\t\t\tvar promise =  $.ajax\n\t\t\t({\n\t\t\t\ttype: method,\n\t\t\t\turl: url,\n\t\t\t\tdata: payload,\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\txhr.setRequestHeader('Authorization', authInfo);\n\t\t\t\t},\n\t\t\t\txhrFields: {\n\t\t\t\t\twithCredentials: true\n\t\t\t\t},\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tdataType: 'json',\n\t\t\t\terror: function(jqXHR){\n\t\t\t\t\tajaxErrorHandler(jqXHR);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tvar replacePlaceHolders = function(str, paramsObj){\n\t\t\treturn  str.replace(/{\\w+}/g,\n\t\t\t\tfunction(placeHolder) {\n\t\t\t\t\treturn paramsObj[placeHolder];\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t//List of services\n\t\tvar services = {\n\t\t\tsetAuthInfo : function(data){\n\t\t\t\tauthInfo = data;\n\t\t\t},\n\t\t\tsetBaseRestURL : function(data){\n\t\t\t\tbaseRestURL = data\n\t\t\t},\n\t\t\tgetAppNameList : function(){\n\t\t\t\tvar serverPath = baseRestURL + paths.applicationNameList;\n\t\t\t\treturn doGet(serverPath);\n\t\t\t},\n\t\t\tgetDataSourceList : function(){\n\t\t\t\tvar serverPath = baseRestURL + paths.datasources;\n\t\t\t\treturn doGet(serverPath);\n\t\t\t},\n\t\t\tgetColumnListByApp : function(params){\n\t\t\t\tvar serverPath = baseRestURL + paths.columnsListByApp;\n\t\t\t\tserverPath = replacePlaceHolders(serverPath, params);\n\t\t\t\treturn doGet(serverPath);\n\t\t\t},\n\t\t\tgetProcessList : function(){\n\t\t\t\tvar serverPath = baseRestURL + paths.processList;\n\t\t\t\treturn doGet(serverPath);\n\t\t\t},\n\t\t\tgetAggregateOperations : function(){\n\t\t\t\tvar serverPath = baseRestURL + paths.aggregateOperations;\n\t\t\t\treturn doGet(serverPath);\n\t\t\t},\n\t\t\tgetComparisonOperators : function(){\n\t\t\t\tvar serverPath = baseRestURL + paths.comparisonOperators;\n\t\t\t\treturn doGet(serverPath);\n\t\t\t},\n\t\t\tgetChartData : function(payload){\n\t\t\t\tvar serverPath = baseRestURL + paths.businessQuery;\n\t\t\t\treturn doPost(serverPath, payload);\n\t\t\t},\n\t\t\tgetSavedQueries : function(){\n\t\t\t\tvar serverPath = baseRestURL + paths.businessQueries;\n\t\t\t\treturn doGet(serverPath);\n\t\t\t},\n\t\t\tsaveQuery : function(payload){\n\t\t\t\tvar serverPath = baseRestURL + paths.businessQueries;\n\t\t\t\treturn doPost(serverPath, payload);\n\t\t\t},\n\t\t\tupdateQuery : function(payload, params){\n\t\t\t\tvar serverPath = baseRestURL + paths.businessQueryById;\n\t\t\t\tserverPath = replacePlaceHolders(serverPath, params);\n\t\t\t\treturn doPut(serverPath, payload);\n\t\t\t},\n\t\t\tdeleteQuery : function(params){\n\t\t\t\tvar serverPath = baseRestURL + paths.businessQueryById;\n\t\t\t\tserverPath = replacePlaceHolders(serverPath, params);\n\t\t\t\treturn doDelete(serverPath);\n\t\t\t},\n\t\t\tgetQuery : function(params){\n\t\t\t\tvar serverPath = baseRestURL + paths.businessQueryById;\n\t\t\t\tserverPath = replacePlaceHolders(serverPath, params);\n\t\t\t\treturn doGet(serverPath);\n\t\t\t}\n\t\t};\n\n\t\treturn services;\n\t}\n);\n\n",
    "/**\n * Created by nisabhar on 11/19/2015.\n */\n\ndefine('pcs/charts/visualization/viewModel/custom/customDashboard',['ojs/ojcore', 'knockout', 'pcs/charts/visualization/viewModel/util/visualizationUtil', 'pcs/charts/visualization/viewModel/services/DataServices', 'ojs/ojradioset', 'ojs/ojdialog',\n\t'ojs/ojselectcombobox', 'ojs/ojbutton', 'ojs/ojchart', 'ojs/ojtoolbar', 'ojs/ojdatetimepicker', 'ojs/ojtable', 'ojL10n!pcs/resources/nls/dashboardResource',\n\t'ojs/ojknockout', 'promise', 'ojs/ojlistview', 'ojs/ojdatacollection-common'], function (oj, ko, util, services) {\n\t/**\n\t * The view model for the main content view template\n\t */\n\tfunction customDashboardContainerModel(params) {\n\n\t\tvar self = this;\n\t\tself.oj = oj;\n\n\t\tvar loggerUtil =  require('pcs/util/loggerUtil');\n\n\t\t//Set the resourcebundle\n\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\n\t\tself.parent = params.parent;\t// hold the instance of dashboardContainer\n\t\tservices.setAuthInfo(self.parent.authInfo); // Login credentials\n\t\tservices.setBaseRestURL(self.parent.baseRestUrl);\n\t\tself.rootElement = this.parent.rootElement;\n\t\tself.processList = ko.observableArray([]);\n\t\tself.columnDataList = ko.observableArray(['']);\n\t\tself.columnDataBIList = ko.observableArray(['']);\n\t\tself.measureList = ko.observableArray([{name: '', displayName: ''}]);\n\t\tself.measureBIList = ko.observableArray([{name: '', displayName: ''}]);\n\t\tself.dimensionList = ko.observableArray([{name: '', displayName: ''}]);\n\t\tself.dimensionBIList = ko.observableArray([{name: '', displayName: ''}]);\n\t\tself.attributeList = ko.observableArray([]);\n\t\tself.filterCriteriaList = ko.observableArray([]);\n\t\tself.functionList = ko.observableArray([{name: '', displayName: ''}]);\n\t\tself.allFunctionArr = [];\n\n\t\tself.chartTypeList = [\n\t\t\t{\n\t\t\t\tname: util.constants.chartType.BAR,\n\t\t\t\tdisplayName: self.bundle.vis.button.bar,\n\t\t\t\ticon: 'oj-fwk-icon btn-bar-chart'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: util.constants.chartType.LINE,\n\t\t\t\tdisplayName: self.bundle.vis.button.line,\n\t\t\t\ticon: 'oj-fwk-icon btn-line-chart'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: util.constants.chartType.AREA,\n\t\t\t\tdisplayName: self.bundle.vis.button.area,\n\t\t\t\ticon: 'oj-fwk-icon btn-area-chart'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: util.constants.chartType.LINEWITHAREA,\n\t\t\t\tdisplayName: self.bundle.vis.button.line_with_area,\n\t\t\t\ticon: 'oj-fwk-icon btn-linewitharea-chart'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: util.constants.chartType.COMBO,\n\t\t\t\tdisplayName: self.bundle.vis.button.combo,\n\t\t\t\ticon: 'oj-fwk-icon btn-combo-chart'\n\t\t\t}\n\t\t];\n\n\t\t//Create select data for Time Group field\n\t\tself.timeGroups = util.constants.timeGroups.map(function (item) {\n\t\t\treturn {\n\t\t\t\tid: item,\n\t\t\t\tlabel: self.bundle.vis.timeGroups[item]\n\t\t\t};\n\t\t});\n\t\t//Set default value for Time Group field\n\t\tself.selectedSrsTimeGroup = ko.observableArray([]);\n\t\tself.selectedGrpTimeGroup = ko.observableArray([]);\n\n\t\tself.selectedVisualizationName = ko.observable('');\n\t\tself.selectedDataSource = ko.observableArray(['']);\n\t\tself.selectedProcess = ko.observableArray([util.constants.misc.ANY]);\n\t\tself.selectedSeries = ko.observableArray(['']);\n\t\tself.selectedGroup = ko.observableArray(['']);\n\t\tself.selectedMeasure = ko.observableArray(['']);\n\t\tself.selectedFunction = ko.observableArray(['']);\n\t\tself.selectedFilterType = ko.observable(util.constants.misc.ALL);\n\t\tself.selectedAppName = ko.observableArray([util.constants.misc.ANY]);\n\t\tself.measureDisabled = ko.observable(false);\n\t\tself.queryName = ko.observable('');\n\t\tself.description = ko.observable('');\n\t\tself.savedQueries = ko.observableArray([]);\n\t\tself.queriesDS = new oj.ArrayTableDataSource(self.savedQueries, {idAttribute: \"id\"});\n\t\tself.selectedQuery = ko.observableArray([]);\n\t\tself.selectedQueryJSON = null;\n\t\tself.dataSourceList = ko.observableArray([{name: '', displayName: ''}]);\n\t\t//define appNameList variable\n\t\tself.appNameList = ko.observableArray(['']);\n\t\tself.formState = 'new';\n\t\tself.lastNDaysFilter = loadLastNDaysFilter();\n\t\tself.selectedLastDays = ko.observableArray(['30']);\n\n\n\t\tinitialize();\n\t\t//initialize and fetch data for the view\n\t\tfunction initialize() {\n\t\t\tloadSavedQueries();\n\t\t\tloadFormData();\n\t\t}\n\n\t\tfunction loadFormData() {\n\t\t\tservices.getDataSourceList().done(\n\t\t\t\tfunction (data) {\n\t\t\t\t\tutil.refreshAll(self.dataSourceList, formDSData(data));\n\t\t\t\t\tself.selectedDataSource([self.dataSourceList()[0].name]);\n\t\t\t\t\t//loggerUtil.log(\"datasource list \" +ko.toJSON(self.dataSourceList()[0]));\n\t\t\t\t\tloadFunctionList();\n\t\t\t\t\tloadAppList();\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tfunction formDSData(data) {\n\t\t\treturn data.map(function (item) {\n\t\t\t\treturn {name: item, displayName: self.bundle.vis.datasource[item]};\n\t\t\t});\n\t\t}\n\n\t\t// Function to determine display of Time Group field\n\t\tfunction displayTimeGroup(data, field) {\n\t\t\tvar filterCondition = function (item) {\n\t\t\t\treturn item.name === data.value[0];\n\t\t\t};\n\t\t\tif (data.option == util.constants.misc.VALUE) {\n\t\t\t\tvar selectedItem = self.dimensionList().filter(filterCondition);\n\t\t\t\tselectedItem = selectedItem.length === 0 ? self.dimensionBIList().filter(filterCondition) : selectedItem;\n\t\t\t\tif (selectedItem.length > 0 && selectedItem[0].dataType === util.constants.dataType.DATETIME) {\n\t\t\t\t\t$('#bpm-vis-' + field + '-timegroups').show();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$('#bpm-vis-' + field + '-timegroups').hide();\n\t\t\t\t\tif (field === 'srs') {\n\t\t\t\t\t\tself.selectedSrsTimeGroup([]);\n\t\t\t\t\t} else if (field === 'grp') {\n\t\t\t\t\t\tself.selectedGrpTimeGroup([]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction loadFunctionList() {\n\t\t\tservices.getAggregateOperations().done(\n\t\t\t\tfunction (data) {\n\t\t\t\t\tself.allFunctionArr = data;\n\t\t\t\t\tutil.refreshAll(self.functionList, formFunctionData(data));\n\t\t\t\t\tself.selectedFunction([self.functionList()[0].name]);\n\t\t\t\t\t//loggerUtil.log(\"getAggregateOperations \" +ko.toJSON(data));\n\t\t\t\t\t// Remove overlays for loading\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tfunction formFunctionData(data) {\n\t\t\tvar arr = data.map(function (item) {\n\t\t\t\treturn {name: item, displayName: self.bundle.vis.functions[item]};\n\t\t\t});\n\t\t\treturn arr;\n\t\t}\n\n\t\t// On change of Measure update the corresponding Aggregation or Function List\n\t\tfunction refreshAggregations(item, selectedValue) {\n\t\t\tif (item.name === selectedValue) {\n\t\t\t\tvar functionObjData;\n\t\t\t\tif (item.supportedAggregations && item.supportedAggregations.length > 0) {\n\t\t\t\t\tfunctionObjData = formFunctionData(item.supportedAggregations);\n\t\t\t\t\tself.selectedFunction([functionObjData[0].name]);\n\t\t\t\t} else {\n\t\t\t\t\tfunctionObjData = formFunctionData(self.allFunctionArr);\n\t\t\t\t}\n\t\t\t\tutil.refreshAll(self.functionList, functionObjData);\n\t\t\t}\n\t\t}\n\n\n\t\tfunction formatData(rows) {\n\t\t\tif (rows) {\n\t\t\t\trows = rows.map(function (item) {\n\t\t\t\t\treturn {'name': item.values[0], 'displayName': item.values[1]};\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn rows;\n\t\t}\n\n\t\tfunction loadAppList() {\n\t\t\t//trigger service to fetch data for appNameList\n\t\t\tservices.getAppNameList().done(\n\t\t\t\tfunction (data) {\n\t\t\t\t\tutil.refreshAll(self.appNameList, formatData(data.rows));\n\t\t\t\t\tself.selectedAppName([util.constants.misc.ANY]);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\n\t\tfunction loadColumnData(dataSource, appName) {\n\t\t\tvar params;\n\t\t\tif (appName == util.constants.misc.ANY) {\n\t\t\t\tparams = {'{dataSource}': dataSource, '{appName}': ''};\n\t\t\t} else {\n\t\t\t\t//params to fetch data for selected app name\n\t\t\t\tparams = {'{dataSource}': dataSource, '{appName}': appName};\n\t\t\t}\n\n\t\t\tservices.getColumnListByApp(params).done(\n\t\t\t\tfunction (response) {\n\t\t\t\t\tpopulateColumnData(response);\n\t\t\t\t\t//loggerUtil.log(ko.toJSON(data));\n\t\t\t\t\t// Remove overlays for loading\n\t\t\t\t\t$('#bpm-vis-cust-query-overlay', self.rootElement).removeClass('bpm-vis-load-overlay');\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tfunction populateColumnData(data) {\n\t\t\tvar attributeArr = [];\n\t\t\tvar dimensionArr = [];\n\t\t\tvar dimensionBIArr = [];\n\t\t\tvar measureArr = [];\n\t\t\tvar measureBIArr = [];\n\t\t\tvar allChartAttribs = [];\n\t\t\tvar allChartBIAttribs = [];\n\t\t\tdata.map(\n\t\t\t\tfunction (item) {\n\t\t\t\t\tswitch (item.type) {\n\t\t\t\t\t\tcase util.constants.columnTypes.ATTRIBUTE:\n\t\t\t\t\t\t\tupdateList(attributeArr, item);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase util.constants.columnTypes.DIMENSION:\n\t\t\t\t\t\t\tif (util.startsWith(item.name, 'B_') || util.startsWith(item.name, 'R_')) {\n\t\t\t\t\t\t\t\tupdateList(dimensionBIArr, item);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tupdateList(dimensionArr, item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase util.constants.columnTypes.MEASURE:\n\t\t\t\t\t\t\tif (util.startsWith(item.name, 'B_') || util.startsWith(item.name, 'R_')) {\n\t\t\t\t\t\t\t\tupdateList(measureBIArr, item);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tupdateList(measureArr, item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tloggerUtil.log('missing type info' + ko.toJSON(item));\n\n\t\t\t\t\t}\n\t\t\t\t\tif (util.startsWith(item.name, 'B_') || util.startsWith(item.name, 'R_')) {\n\t\t\t\t\t\tupdateList(allChartBIAttribs, item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdateList(allChartAttribs, item);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t);\n\t\t\tutil.refreshAll(self.columnDataList, allChartAttribs);\n\t\t\tutil.refreshAll(self.columnDataBIList, allChartBIAttribs);\n\t\t\tutil.refreshAll(self.measureList, measureArr);\n\t\t\tutil.refreshAll(self.measureBIList, measureBIArr);\n\t\t\tutil.refreshAll(self.dimensionList, dimensionArr);\n\t\t\tutil.refreshAll(self.dimensionBIList, dimensionBIArr);\n\t\t\tutil.refreshAll(self.attributeList, attributeArr);\n\t\t\tsetSelectBoxValues();\n\t\t}\n\n\t\t//Set the select box selection values based of state\n\t\tfunction setSelectBoxValues() {\n\t\t\tif (self.formState === 'reload' && self.selectedQueryJSON) {\n\t\t\t\tvar selectedSrs = self.selectedQueryJSON.legend;\n\t\t\t\tself.selectedSeries([selectedSrs]);\n\t\t\t\tvar selectedGrp = self.selectedQueryJSON.groups[0];\n\t\t\t\tself.selectedGroup([selectedGrp]);\n\t\t\t\tself.selectedFunction([self.selectedQueryJSON.dataSeries[0].aggregateOperation]);\n\t\t\t\tself.selectedMeasure([self.selectedQueryJSON.dataSeries[0].measureColumn]);\n\t\t\t\tif (self.selectedQueryJSON.lastNDays) {\n\t\t\t\t\tself.selectedLastDays([self.selectedQueryJSON.lastNDays.toString()]);\n\t\t\t\t}\n\t\t\t\tif (self.selectedQueryJSON.timeGroupings) {\n\t\t\t\t\tif (self.selectedQueryJSON.timeGroupings[selectedSrs]) {\n\t\t\t\t\t\tself.selectedSrsTimeGroup([self.selectedQueryJSON.timeGroupings[selectedSrs].timeGroupingUnits[0]]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (self.selectedQueryJSON.timeGroupings[selectedGrp]) {\n\t\t\t\t\t\tself.selectedGrpTimeGroup([self.selectedQueryJSON.timeGroupings[selectedGrp].timeGroupingUnits[0]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (self.selectedQueryJSON.filter) {\n\t\t\t\t\tself.selectedFilterType(self.selectedQueryJSON.filter.filterType);\n\t\t\t\t\tvar filters = [];\n\t\t\t\t\tself.selectedQueryJSON.filter.filterEntries.map(function (item) {\n\t\t\t\t\t\tvar filter = new FilterModel();\n\t\t\t\t\t\tfilter.columnDataValue([item.columnName]);\n\t\t\t\t\t\tfilter.operatorValue([item.operator]);\n\t\t\t\t\t\tfilter.dataType(item.columnDataType);\n\t\t\t\t\t\tfilters.push(filter);\n\t\t\t\t\t});\n\t\t\t\t\tutil.refreshAll(self.filterCriteriaList, filters);\n\t\t\t\t\tself.selectedQueryJSON.filter.filterEntries.map(function (entry) {\n\t\t\t\t\t\tself.filterCriteriaList().map(function (criteria) {\n\t\t\t\t\t\t\tif (entry.columnName === criteria.columnDataValue()[0]) {\n\t\t\t\t\t\t\t\tif (criteria.dataType() === util.constants.dataType.DATETIME && entry.value && entry.value !== '') {\n\t\t\t\t\t\t\t\t\tvar date = new Date(parseInt(entry.value));\n\t\t\t\t\t\t\t\t\tvar iso = self.oj.IntlConverterUtils.dateToLocalIso(date);\n\t\t\t\t\t\t\t\t\tcriteria.selectedValue(iso);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcriteria.selectedValue(entry.value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (self.selectedQueryJSON.properties) {\n\t\t\t\t\tself.selectedQueryJSON.properties.map(function (item) {\n\t\t\t\t\t\tif (item.name && item.name === 'chartType') {\n\t\t\t\t\t\t\tself.selectedChartType(item.value ? item.value : util.constants.chartType.BAR);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tself.selectedChartType(util.constants.chartType.BAR);\n\t\t\t\t}\n\t\t\t} else if (self.formState === 'new') {\n\t\t\t\tself.selectedFilterType(util.constants.misc.ALL);\n\t\t\t\tself.selectedLastDays(['30']);\n\t\t\t\tself.selectedSeries([self.dimensionList()[0].name]);\n\t\t\t\tself.selectedGroup([self.dimensionList()[1].name]);\n\t\t\t\tif (self.selectedFunction()[0] !== util.constants.functionList.COUNT) {\n\t\t\t\t\tself.selectedMeasure([self.measureList()[0].name]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//function to create data object for option item\n\t\tvar updateList = function (arr, item) {\n\t\t\tarr.push({\n\t\t\t\tname: item.name,\n\t\t\t\tdisplayName: item.displayName,\n\t\t\t\tdataType: item.dataType,\n\t\t\t\tsupportedAggregations: item.supportedAggregations\n\t\t\t});\n\t\t};\n\n\t\tfunction loadChartData(oj, payload) {\n\t\t\t//self.load(query,self.populateChartData);\n\t\t\tvar payloadData = payload ? payload : getPayloadForChartData(oj);\n\t\t\tself.groupKey = payloadData.groups[0];\n\t\t\tself.seriesKey = payloadData.legend;\n\t\t\t//If Count is selected then replace with X as backend passes same\n\t\t\tvar measrClmn = payloadData.dataSeries[0].measureColumn === '*' ? 'X' : payloadData.dataSeries[0].measureColumn;\n\t\t\tself.measureKey = payloadData.dataSeries[0].aggregateOperation + measrClmn;\n\n\t\t\t//Call the rest service to fetch chart data\n\t\t\tservices.getChartData(JSON.stringify(payloadData)).done(\n\t\t\t\tfunction (data) {\n\t\t\t\t\tself.populateChartData(data);\n\t\t\t\t}\n\t\t\t).fail(\n\t\t\t\tfunction () {\n\t\t\t\t\t$('#bpm-vis-cust-chart-overlay', self.rootElement).removeClass('bpm-vis-load-overlay');\n\t\t\t\t\tutil.errorHandler('', self.bundle.vis.error_msg.data_fetch_error);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tfunction getPayloadForChartData(oj) {\n\t\t\tvar filtersObj = {filterType: self.selectedFilterType(), filterEntries: []};\n\t\t\tself.filterCriteriaList().map(function (item) {\n\t\t\t\tvar value = item.selectedValue() instanceof Array ? item.selectedValue()[0] : item.selectedValue();\n\t\t\t\tvar dataType = item.dataType();\n\t\t\t\t//Date to be in long format as per Service requirements\n\t\t\t\tif (dataType === util.constants.dataType.DATETIME && value && value !== '') {\n\t\t\t\t\tvalue = oj.IntlConverterUtils.isoToLocalDate(value).getTime();\n\t\t\t\t} else if (dataType === util.constants.dataType.INT && value !== '') {\n\t\t\t\t\tvalue = parseInt(value);\n\t\t\t\t}\n\n\t\t\t\tfiltersObj.filterEntries.push({\n\t\t\t\t\t'columnName': item.columnDataValue()[0],\n\t\t\t\t\t'operator': item.operatorValue()[0],\n\t\t\t\t\t'value': value,\n\t\t\t\t\t'columnDataType': dataType\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tvar obj = {\n\t\t\t\t'id': self.selectedQueryJSON ? self.selectedQueryJSON.id : '',\n\t\t\t\t'title': self.queryName(),\n\t\t\t\t'description': self.description(),\n\t\t\t\t'dataSource': self.selectedDataSource()[0],\n\t\t\t\t'applicationName': self.selectedAppName()[0] === util.constants.misc.ANY ? null : self.selectedAppName()[0],\n\t\t\t\t'queryType': 'GROUP',\n\t\t\t\t'dataSeries': [{\n\t\t\t\t\tmeasureColumn: self.selectedMeasure()[0],\n\t\t\t\t\taggregateOperation: self.selectedFunction()[0]\n\t\t\t\t}],\n\t\t\t\t'groups': [self.selectedGroup()[0] === util.constants.misc.ANY ? '*' : self.selectedGroup()[0]],\n\t\t\t\t'legend': self.selectedSeries()[0] === util.constants.misc.ANY ? '*' : self.selectedSeries()[0],\n\t\t\t\t'filter': filtersObj,\n\t\t\t\t'topN': null,\n\t\t\t\t'sortEntries': null,\n\t\t\t\t'lastNDays': self.selectedLastDays()[0],\n\t\t\t\t'properties': [{'name': 'chartType', 'value': self.selectedChartType()}]\n\t\t\t};\n\t\t\tobj.timeGroupings = {};\n\t\t\t//add time group section if a time group was selected\n\t\t\tif (self.selectedSrsTimeGroup().length > 0) {\n\t\t\t\tobj.timeGroupings[self.selectedSeries()[0]] = {\n\t\t\t\t\t\"timeGroupingUnits\": [self.selectedSrsTimeGroup()[0]]\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (self.selectedGrpTimeGroup().length > 0) {\n\t\t\t\tobj.timeGroupings[self.selectedGroup()[0]] = {\n\t\t\t\t\t\"timeGroupingUnits\": [self.selectedGrpTimeGroup()[0]]\n\t\t\t\t}\n\t\t\t}\n\t\t\t//loggerUtil.log(\"Payload data : \"+ko.toJSON(obj));\n\t\t\treturn obj;\n\t\t}\n\n\t\t/*\n\t\t Extract data returned from the rest api, massage it as per Graph data format\n\t\t and update the graph data objects\n\t\t */\n\t\tself.populateChartData = function (data) {\n\t\t\tself.groupsArray = [];\n\t\t\tself.seriesArray = [];\n\t\t\tvar options = {formatType: 'date', pattern: 'M/d/y h:mm'};\n\t\t\tvar converter = self.oj.Validation.converterFactory(\"datetime\").createConverter(options);\n\t\t\t//get the index of Group, series and measure data from columnsInfo\n\t\t\tdata.columnsInfo.map(function (item, index) {\n\t\t\t\tif (item.columnName.indexOf(self.groupKey) >= 0) {\n\t\t\t\t\tself.groupIndex = index;\n\t\t\t\t\tself.groupType = item.type;\n\t\t\t\t} else if (item.columnName.indexOf(self.seriesKey) >= 0) {\n\t\t\t\t\tself.seriesIndex = index;\n\t\t\t\t\tself.seriesType = item.type;\n\t\t\t\t} else if (item.columnName === self.measureKey) {\n\t\t\t\t\tself.measureIndex = index;\n\t\t\t\t\tself.measureType = item.type;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//Create a group and series array from row data\n\t\t\tdata.rows.map(function (rowItem) {\n\t\t\t\tvar grp = rowItem.values[self.groupIndex] === null ? '' : rowItem.values[self.groupIndex];\n\t\t\t\tvar srs = rowItem.values[self.seriesIndex] === null ? '' : rowItem.values[self.seriesIndex];\n\n\t\t\t\tgrp = self.groupType === util.constants.dataType.TIMESTAMP && grp !== '' ? converter.format(self.oj.IntlConverterUtils.dateToLocalIso(new Date(grp))) : grp;\n\t\t\t\tsrs = self.seriesType === util.constants.dataType.TIMESTAMP && srs !== '' ? converter.format(self.oj.IntlConverterUtils.dateToLocalIso(new Date(srs))) : srs;\n\n\t\t\t\tif (!self.groupsArray[grp]) {\n\t\t\t\t\tself.groupsArray[grp] = 0;\n\t\t\t\t}\n\n\t\t\t\tif (!self.seriesArray[srs]) {\n\t\t\t\t\tself.seriesArray[srs] = [];\n\t\t\t\t}\n\n\t\t\t\trowItem.values[self.groupIndex] = grp;\n\t\t\t\trowItem.values[self.seriesIndex] = srs;\n\t\t\t});\n\n\t\t\t//populate series array elements with cloned group array\n\t\t\tObject.keys(self.seriesArray).forEach(function (key) {\n\t\t\t\tvar copy_arr = $.extend({}, self.groupsArray);\n\t\t\t\tthis[key] = copy_arr;\n\t\t\t}, self.seriesArray);\n\n\n\t\t\tsetChartGridData(data);\n\n\t\t\t//prepare data for charts as a bidimensional arraycloseErrorDialog\n\t\t\tdata.rows.map(function (rowItem) {\n\t\t\t\tvar grp = rowItem.values[self.groupIndex] === null ? '' : rowItem.values[self.groupIndex];\n\t\t\t\tvar srs = rowItem.values[self.seriesIndex] === null ? '' : rowItem.values[self.seriesIndex];\n\t\t\t\tvar measr = rowItem.values[self.measureIndex];\n\n\t\t\t\tself.seriesArray[srs][grp] = measr;\n\t\t\t});\n\n\n\t\t\t//reset the chart data\n\t\t\tchartSeries = [];\n\t\t\tchartGroups = [];\n\t\t\t//Generate chart data\n\t\t\t//Since it is a associative array, using Object.keys to iterate\n\t\t\tObject.keys(self.seriesArray).forEach(function (key) {\n\t\t\t\tvar obj = {};\n\t\t\t\tobj.name = self.selectedSrsTimeGroup().length > 0 ? key + ' ' + self.bundle.vis.timeGroups[self.selectedSrsTimeGroup()[0]] : key;\n\t\t\t\tobj.items = [];\n\t\t\t\tvar grpDtaArr = this[key];\n\t\t\t\tObject.keys(grpDtaArr).forEach(function (key) {\n\t\t\t\t\tobj.items.push(this[key]);\n\t\t\t\t}, grpDtaArr);\n\t\t\t\tchartSeries.push(obj);\n\t\t\t}, self.seriesArray);\n\n\t\t\tObject.keys(self.groupsArray).forEach(function (key) {\n\t\t\t\tkey = self.selectedGrpTimeGroup().length > 0 ? key + ' ' + self.bundle.vis.timeGroups[self.selectedGrpTimeGroup()[0]] : key;\n\t\t\t\tchartGroups.push(key);\n\t\t\t}, self.groupsArray);\n\n\t\t\tself.barSeriesValue(chartSeries);\n\t\t\tself.barGroupsValue(chartGroups);\n\n\t\t\t// remove overlays for loading\n\t\t\t$('#bpm-vis-cust-chart-overlay', self.rootElement).removeClass('bpm-vis-load-overlay');\n\t\t};\n\n\t\t/**\n\t\t Prepare the chart grid data and set it to the grid\n\t\t */\n\t\tfunction setChartGridData(data) {\n\t\t\tvar dataArray = [];\n\t\t\tself.csvGridData = self.groupKey + ', ' + self.seriesKey + ', ' + self.measureKey;\n\n\t\t\t//prepare coma seperated data for chart grid\n\t\t\tdata.rows.map(function (rowItem) {\n\t\t\t\tvar grp = rowItem.values[self.groupIndex];\n\t\t\t\tvar srs = rowItem.values[self.seriesIndex];\n\t\t\t\tvar measr = rowItem.values[self.measureIndex];\n\n\t\t\t\tvar obj = {};\n\t\t\t\tobj[self.groupKey] = grp;\n\t\t\t\tobj[self.seriesKey] = srs;\n\t\t\t\tobj[self.measureKey] = measr;\n\t\t\t\tdataArray.push(obj);\n\n\t\t\t\tself.csvGridData += '\\n' + grp + ', ' + srs + ', ' + measr;\n\t\t\t});\n\n\t\t\tvar grpHeaderTxt = '';\n\t\t\tvar srsHeaderTxt = '';\n\t\t\tvar measrHeaderTxt = 'Count';\n\n\t\t\t//Chart Result data does not contain label info, hence extract it from columns info\n\t\t\tself.columnDataList().map(function (item) {\n\t\t\t\tswitch (item.name) {\n\t\t\t\t\tcase self.groupKey:\n\t\t\t\t\t\tgrpHeaderTxt = item.displayName;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase self.seriesKey:\n\t\t\t\t\t\tsrsHeaderTxt = item.displayName;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t\t//Chart Result data does not contain label info, hence extract it from columns info\n\t\t\tself.columnDataBIList().map(function (item) {\n\t\t\t\tswitch (item.name) {\n\t\t\t\t\tcase self.groupKey:\n\t\t\t\t\t\tgrpHeaderTxt = item.displayName;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase self.seriesKey:\n\t\t\t\t\t\tsrsHeaderTxt = item.displayName;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t\t//Chart Result data does not contain label info, hence extract it from columns info\n\t\t\tself.measureList().map(function (item) {\n\t\t\t\tvar measrName = self.selectedFunction()[0] + item.name;\n\t\t\t\tif (measrName === self.measureKey) {\n\t\t\t\t\tmeasrHeaderTxt = item.displayName;\n\t\t\t\t}\n\t\t\t});\n\t\t\t//Chart Result data does not contain label info, hence extract it from columns info\n\t\t\tself.measureBIList().map(function (item) {\n\t\t\t\tvar measrName = self.selectedFunction()[0] + item.name;\n\t\t\t\tif (measrName === self.measureKey) {\n\t\t\t\t\tmeasrHeaderTxt = item.displayName;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//Set Graph labels\n\t\t\tself.xLabel(grpHeaderTxt);\n\t\t\tself.yLabel(measrHeaderTxt);\n\n\t\t\t//prepare header data for the chart grid\n\t\t\tvar headerArr = [{headerText: grpHeaderTxt, field: self.groupKey},\n\t\t\t\t{headerText: srsHeaderTxt, field: self.seriesKey},\n\t\t\t\t{headerText: measrHeaderTxt, field: self.measureKey}];\n\n\t\t\t//reset header info\n\t\t\tutil.refreshAll(self.headerTextArr, headerArr);\n\t\t\t//reset Grid datasource\n\t\t\tself.gridDataSource.reset(dataArray);\n\t\t}\n\n\t\t//Creates the data object for last N days filter\n\t\tfunction loadLastNDaysFilter() {\n\t\t\tvar arr = [];\n\t\t\tfor (var key in util.constants.lastNDays) {\n\t\t\t\tvar obj = {};\n\t\t\t\tobj.id = key;\n\t\t\t\tobj.label = self.bundle.vis.lastNDays[util.constants.lastNDays[key]];\n\t\t\t\tarr.push(obj);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\t// Load the saved queries in the Saved Query list\n\t\t// selectedQuery: Query ID to be selected after loading queries\n\t\tfunction loadSavedQueries(selectedQuery) {\n\t\t\tservices.getSavedQueries().done(function (data) {\n\t\t\t\tutil.refreshAll(self.savedQueries, processQueryAPIData(data));\n\t\t\t\tif (selectedQuery) {\n\t\t\t\t\tself.selectedQuery([selectedQuery]);\n\t\t\t\t} else {\n\t\t\t\t\tvar queryIdArr = self.savedQueries().length > 0 ? [self.savedQueries()[0].id] : [];\n\t\t\t\t\tself.selectedQuery(queryIdArr);\n\t\t\t\t}\n\t\t\t\t//refresh the select UI to handle rename of query\n\t\t\t\t$(\"#bpm-vis-query-listview\").ojListView(\"refresh\");\n\t\t\t\tshowSplashScreenOnStart();\n\t\t\t})\n\t\t}\n\n\t\t//Display splash screen if there are no saved queries to prompt user to create a query\n\t\tfunction showSplashScreenOnStart() {\n\t\t\tif (self.savedQueries().length <= 0) {\n\t\t\t\tif($('#bpm-vis-popup1').ojPopup('isOpen')){\n\t\t\t\t\t$('#bpm-vis-popup1').ojPopup('close', '#bpm-vis-querybtn');\n\t\t\t\t}\n\n\t\t\t\t$('#bpm-vis-business-analytics').hide();\n\t\t\t\t$('#bpm-vis-main-splash').show();\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t$('#bpm-vis-main-splash').hide();\n\t\t\t\t$('#bpm-vis-business-analytics').show();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t//Process the saved queries api result data for UI consumption\n\t\tfunction processQueryAPIData(data) {\n\t\t\treturn data.map(function (item) {\n\t\t\t\tvar queryIdIndex = item.href.lastIndexOf('/');\n\t\t\t\treturn {id: item.href.slice(++queryIdIndex), label: item.title};\n\t\t\t});\n\t\t}\n\n\t\t//update the form fields with query JSON data\n\t\tfunction setFormFieldsFromJSON() {\n\t\t\tself.selectedSrsTimeGroup([]);\n\t\t\tself.selectedGrpTimeGroup([]);\n\t\t\tself.queryName(self.selectedQueryJSON.title);\n\t\t\tself.description(self.selectedQueryJSON.description);\n\n\t\t\tvar appName = self.selectedQueryJSON.applicationName ? self.selectedQueryJSON.applicationName : util.constants.misc.ANY;\n\t\t\tself.selectedAppName([appName]);\n\t\t\tself.selectedDataSource([self.selectedQueryJSON.dataSource]);\n\t\t}\n\n\t\tfunction displayCharts(oj, payload){\n\t\t\t$('#bpm-vis-cust-splash').hide();\n\t\t\t$('#bpm-vis-chart-tools').show();\n\t\t\t$('#bpm-vis-chart-row1').show();\n\t\t\t$('#bpm-vis-chart-row2').show();\n\n\t\t\t// Add overlays for loading\n\t\t\t$('#bpm-vis-cust-chart-overlay', self.rootElement).addClass('bpm-vis-load-overlay');\n\t\t\tloadChartData(oj, payload);\n\t\t\t$('#bpm-vis-cust-chart-container').show();\n\t\t}\n\n\t\t//reset the fields and initialise the query fields, chart view\n\t\tfunction resetAndInitialize() {\n\t\t\tself.selectedQueryJSON = null;\n\t\t\tself.queryName('');\n\t\t\tself.description('');\n\t\t\tself.selectedDataSource.removeAll();\n\t\t\tself.selectedAppName([util.constants.misc.ANY]);\n\t\t\tloadFormData();\n\t\t\tself.formState = 'new';\n\t\t\t$('#bpm-vis-cust-saved-queries').ojSelect('refresh');\n\t\t\t$('#bpm-vis-cust-splash').show();\n\t\t\t$('#bpm-vis-cust-chart-container').hide();\n\t\t\t$('#bpm-vis-chart-tools').hide();\n\t\t\t$('#bpm-vis-chart-row1').hide();\n\t\t\t$('#bpm-vis-chart-row2').hide();\n\t\t}\n\n\t\t//--------------Click / Select Handlers ---------------------\n\t\t//Save the query\n\t\tself.saveQuery = function (event, data) {\n\t\t\tif (self.queryName().trim() === '') {\n\t\t\t\t$('#bpm-dsb-warning-dialog').ojDialog('open');\n\t\t\t\tvar msg = self.bundle.vis.error_msg.enter_query_name;\n\t\t\t\t$(\"#bpm-vis-warning-dialog-text\").text(msg);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//Validation to check if same series and group fields have been selected\n\t\t\tif (self.selectedSeries()[0] === self.selectedGroup()[0]) {\n\t\t\t\tutil.errorHandler('', self.bundle.vis.error_msg.fields_cant_be_same);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar payload = getPayloadForChartData(event.oj);\n\t\t\t//If JSON object exists for selected query, then update otherwise save new\n\t\t\tif (self.selectedQueryJSON) {\n\t\t\t\tvar selectedQueryId = self.selectedQuery()[0];\n\t\t\t\tservices.updateQuery(JSON.stringify(payload), {'{businessQueryId}': selectedQueryId}).done(function (data) {\n\t\t\t\t\tloadSavedQueries(selectedQueryId);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tservices.saveQuery(JSON.stringify(payload)).done(function (data) {\n\t\t\t\t\tvar queryId;\n\t\t\t\t\t//extract the queryId of the saved query\n\t\t\t\t\tif (data.href) {\n\t\t\t\t\t\tvar queryIdIndex = data.href.lastIndexOf('/');\n\t\t\t\t\t\tqueryId = data.href.slice(++queryIdIndex);\n\t\t\t\t\t}\n\t\t\t\t\tloadSavedQueries(queryId);\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\t\tself.deleteConfirm = function () {\n\t\t\tif (self.selectedQueryJSON) {\n\t\t\t\t$('#bpm-dsb-confirm-dialog').ojDialog('open');\n\t\t\t\tvar msg = self.bundle.vis.error_msg.delete_confirm;\n\t\t\t\t$('#bpm-vis-confirm-dialog-text').text(msg);\n\t\t\t} else {\n\t\t\t\t$('#bpm-dsb-warning-dialog').ojDialog('open');\n\t\t\t\tvar msg1 = self.bundle.vis.error_msg.no_query_selected;\n\t\t\t\t$('#bpm-vis-warning-dialog-text').text(msg1);\n\t\t\t}\n\t\t};\n\t\t//Delete a saved query\n\t\tself.deleteQuery = function (event, data) {\n\t\t\tif($('#bpm-vis-popup1').ojPopup('isOpen')){\n\t\t\t\t$('#bpm-vis-popup1').ojPopup('close', '#bpm-vis-querybtn');\n\t\t\t}\n\t\t\t$('#bpm-dsb-confirm-dialog').ojDialog('close');\n\t\t\tservices.deleteQuery({'{businessQueryId}': self.selectedQuery()[0]}).done(function (data) {\n\t\t\t\tloadSavedQueries();\n\t\t\t\tresetAndInitialize();\n\t\t\t});\n\t\t\tif ($('#bpm-vis-delete-app').ojDialog('isOpen')) {\n\t\t\t\t$('#bpm-vis-delete-app').ojDialog('close');\n\t\t\t}\n\t\t};\n\t\t//Handler for New Query action\n\t\tself.newQuery = function (event, data) {\n\t\t\tresetAndInitialize();\n\n\t\t\tself.queryName(self.bundle.vis.formlbl.default_query_name);\n\t\t\t$('#bpm-vis-chart-row1').show();\n\t\t\t$('#bpm-vis-chart-row2').show();\n\t\t\tself.selectedQuery([]);\n\t\t\tself.selectedQueryBtn([util.constants.misc.VISIBLE]);\n\n\t\t\tself.selectedQuery.removeAll();\n\t\t\tif ($('#bpm-vis-delete-app').ojDialog('isOpen')) {\n\t\t\t\t$('#bpm-vis-delete-app').ojDialog('close');\n\t\t\t}\n\t\t};\n\t\t//Handler for Copy Query action\n\t\tself.copyQuery = function (event, data) {\n\t\t\tif (self.selectedQueryJSON) {\n\t\t\t\tself.selectedQueryJSON = null;\n\t\t\t\tself.selectedQuery.removeAll();\n\t\t\t\tself.selectedQueryBtn([util.constants.misc.VISIBLE]);\n\t\t\t\tvar queryName = self.bundle.vis.formlbl.copy_of + ' ' + self.queryName();\n\t\t\t\tself.queryName(queryName);\n\t\t\t}\n\t\t};\n\t\t//Handler for change in selection of Saved Query\n\t\tself.queryChangeHandler = function (event, data) {\n\t\t\tif (data.option == util.constants.misc.VALUE) {\n\t\t\t\tvar currentVal = data.value[0];\n\t\t\t\tif (currentVal) {\n\t\t\t\t\t$('#bpm-vis-cust-query-overlay', self.rootElement).addClass('bpm-vis-load-overlay');\n\t\t\t\t\tservices.getQuery({'{businessQueryId}': currentVal}).done(function (data) {\n\t\t\t\t\t\tself.formState = 'reload';\n\t\t\t\t\t\tself.selectedQueryJSON = data;\n\t\t\t\t\t\tsetFormFieldsFromJSON();\n\t\t\t\t\t\tdisplayCharts(self.oj, self.selectedQueryJSON);\n\t\t\t\t\t}).fail(\n\t\t\t\t\t\tfunction (jqXHR) {\n\t\t\t\t\t\t\t$('#bpm-vis-cust-query-overlay', self.rootElement).removeClass('bpm-vis-load-overlay');\n\t\t\t\t\t\t\tif (jqXHR.status === 403) {\n\t\t\t\t\t\t\t\tvar respJSON = $.parseJSON(jqXHR.responseText);\n\t\t\t\t\t\t\t\tvar respMsg = respJSON && respJSON.message ? respJSON.message : '';\n\t\t\t\t\t\t\t\t$('#bpm-vis-delete-app').ojDialog('open');\n\t\t\t\t\t\t\t\t$(\"#bpm-vis-delete-app-text\").text(respMsg);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!currentVal && self.savedQueries().length > 0 && data.optionMetadata.writeback === 'shouldWrite') {\n\t\t\t\t\t$('#bpm-vis-cust-query-overlay', self.rootElement).addClass('bpm-vis-load-overlay');\n\t\t\t\t\tresetAndInitialize();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t//Handler for reset action\n\t\tself.resetQuery = function (event, data) {\n\t\t\tself.formState = 'reload';\n\t\t\tif (self.selectedQueryJSON) {\n\t\t\t\tsetFormFieldsFromJSON();\n\t\t\t\tdisplayCharts(self.oj, self.selectedQueryJSON);\n\t\t\t} else {\n\t\t\t\tself.selectedQueryJSON = null;\n\t\t\t\tself.selectedDataSource.removeAll();\n\t\t\t\tself.selectedAppName([util.constants.misc.ANY]);\n\t\t\t\tloadFormData();\n\t\t\t\tself.formState = 'new';\n\t\t\t\t$('#bpm-vis-cust-splash').show();\n\t\t\t\t$('#bpm-vis-cust-chart-container').hide();\n\t\t\t\tself.selectedQuery.removeAll();\n\t\t\t}\n\t\t};\n\n\t\tself.dataSourceChangeHandler = function (event, data) {\n\t\t\t// Add overlays for loading\n\t\t\t$('#bpm-vis-cust-query-overlay', self.rootElement).addClass('bpm-vis-load-overlay');\n\n\t\t\tif (data.option == util.constants.misc.VALUE) {\n\t\t\t\tif (data.optionMetadata.writeback === 'shouldWrite') {\n\t\t\t\t\tself.formState = 'new';\n\t\t\t\t}\n\t\t\t\tloadColumnData(self.selectedDataSource()[0], self.selectedAppName()[0]);\n\t\t\t\tself.filterCriteriaList.removeAll();\n\t\t\t}\n\t\t};\n\t\t//define the handler on select of item in appNameList\n\t\tself.appNameChangeHandler = function (event, data) {\n\t\t\tif (data.option == util.constants.misc.VALUE) {\n\t\t\t\tif (data.optionMetadata.writeback === 'shouldWrite') {\n\t\t\t\t\tself.formState = 'new';\n\t\t\t\t\tvar selectedValue = self.selectedAppName()[0];\n\t\t\t\t\t// Add overlays for loading\n\t\t\t\t\t$('#bpm-vis-cust-query-overlay', self.rootElement).addClass('bpm-vis-load-overlay');\n\t\t\t\t\tloadColumnData(self.selectedDataSource()[0], selectedValue);\n\t\t\t\t}\n\t\t\t\tself.filterCriteriaList.removeAll();\n\t\t\t}\n\t\t};\n\n\t\t// Handle on change event for series field\n\t\tself.seriesChangeHandler = function (event, data) {\n\t\t\tdisplayTimeGroup(data, 'srs');\n\t\t};\n\t\t// Handle on change event for group  field\n\t\tself.groupChangeHandler = function (event, data) {\n\t\t\tdisplayTimeGroup(data, 'grp');\n\t\t};\n\n\t\tself.functionChangeHandler = function (event, data) {\n\t\t\tif (data.option == util.constants.misc.VALUE) {\n\t\t\t\tvar selectedValue = data.value[0];\n\t\t\t\t// If count is selected, then disable measure field\n\t\t\t\tif (selectedValue === util.constants.functionList.COUNT && !self.measureDisabled()) {\n\t\t\t\t\tself.measureDisabled(true);\n\t\t\t\t\tself.selectedMeasure(['*']);\n\t\t\t\t} else if (selectedValue !== util.constants.functionList.COUNT && self.measureDisabled()) {\n\t\t\t\t\tself.measureDisabled(false);\n\t\t\t\t\tif (self.selectedMeasure().length < 1 || self.selectedMeasure()[0] === '*') {\n\t\t\t\t\t\tself.selectedMeasure([self.measureList()[0].name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tself.measureChangeHandler = function (event, data) {\n\t\t\tif (data.option == util.constants.misc.VALUE) {\n\t\t\t\tvar selectedValue = data.value[0];\n\n\t\t\t\tself.measureList().map(function (item) {\n\t\t\t\t\trefreshAggregations(item, selectedValue);\n\t\t\t\t});\n\n\t\t\t\tself.measureBIList().map(function (item) {\n\t\t\t\t\trefreshAggregations(item, selectedValue);\n\t\t\t\t});\n\n\t\t\t}\n\t\t};\n\n\n\t\t// Handler for change in Last N Days selection\n\t\tself.handleLastNDaySelect = function (event, data) {\n\t\t\tif (data.option == util.constants.misc.VALUE && data.optionMetadata.writeback === 'shouldWrite') {\n\t\t\t\tself.runQuery(event, data);\n\t\t\t}\n\t\t};\n\n\t\t// Handler for click of Visualize button\n\t\tself.visualize = function (event, data) {\n\t\t\tself.selectedChartType(util.constants.chartType.BAR);\n\t\t\tself.runQuery(event, data);\n\t\t};\n\n\t\t//Run the query and display the charts\n\t\tself.runQuery = function(event, data){\n\t\t\t//Validation to check if same series and group fields have been selected\n\t\t\tif (self.selectedSeries()[0] === self.selectedGroup()[0]) {\n\t\t\t\tutil.errorHandler('', self.bundle.vis.error_msg.fields_cant_be_same);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tself.closePopup();\n\t\t\tdisplayCharts(event.oj);\n\t\t};\n\n\t\t// Handler for click of Start button\n\t\tself.handleStartClick = function (event, data) {\n\t\t\t$('#bpm-vis-main-splash').hide();\n\t\t\t$('#bpm-vis-business-analytics').show();\n\t\t\t$(\"#bpm-vis-chart-row1\").show();\n\t\t\t$(\"#bpm-vis-chart-row2\").show();\n\t\t\tself.queryName(self.bundle.vis.formlbl.default_query_name);\n\t\t\tself.selectedQuery([]);\n\t\t\tself.selectedQueryBtn([util.constants.misc.VISIBLE]);\n\t\t};\n\n\t\tself.addFilter = function () {\n\t\t\tvar filter = new FilterModel();\n\t\t\tself.filterCriteriaList.push(filter);\n\t\t};\n\n\t\tself.removeFilter = function (filter) {\n\t\t\tself.filterCriteriaList.remove(filter);\n\t\t};\n\n\t\tself.handleSnapBtnClick = function (event, data) {\n\t\t\tvar isPopupOpen = false;\n\t\t\tvar toggleOptions = {\n\t\t\t\tduration: 'slide',\n\t\t\t\tstart: function () {\n\t\t\t\t\t$(\"#bpm-vis-chart\").hide();\n\t\t\t\t\tisPopupOpen = $('#bpm-vis-popup1').ojPopup('isOpen');\n\t\t\t\t\t$('#bpm-vis-popup1').ojPopup('close', '#bpm-vis-querybtn');\n\t\t\t\t},\n\t\t\t\tcomplete: function () {\n\t\t\t\t\t$(\"#bpm-vis-chart\").show().toggleClass(\"oj-lg-11\");\n\t\t\t\t\tif(isPopupOpen){\n\t\t\t\t\t\t$('#bpm-vis-popup1').ojPopup('open', '#bpm-vis-querybtn');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t$(\"#bpm-vis-cust-drawer\").toggle(toggleOptions).toggleClass('closed');\n\n\n\t\t\tif ($(\"#bpm-vis-cust-drawer\").is(\".closed\")) {\n\t\t\t\t$(\"#show-hide-navigation\").toggleClass(\"bpm-vis-show-navlist\");\n\t\t\t} else {\n\t\t\t\t$(\"#show-hide-navigation\").toggleClass(\"bpm-vis-show-navlist\");\n\t\t\t}\n\n\t\t};\n\n\t\tself.selectedQuery.subscribe(function (newValue) {\n\t\t\tif (newValue.length > 0) {\n\t\t\t\t$(\"#bpm-vis-copy\").ojButton({\"disabled\": false});\n\t\t\t\t$(\"#bpm-vis-delete\").ojButton({\"disabled\": false});\n\t\t\t} else {\n\t\t\t\t$(\"#bpm-vis-copy\").ojButton({\"disabled\": true});\n\t\t\t\t$(\"#bpm-vis-delete\").ojButton({\"disabled\": true});\n\t\t\t}\n\n\t\t\tif (newValue.length > 0) {\n\t\t\t\tvar currentVal = newValue;\n\t\t\t\tif (currentVal) {\n\t\t\t\t\tservices.getQuery({'{businessQueryId}': currentVal}).done(function (data) {\n\t\t\t\t\t\tself.formState = 'reload';\n\t\t\t\t\t\tself.selectedQueryJSON = data;\n\t\t\t\t\t\tsetFormFieldsFromJSON();\n\t\t\t\t\t\tdisplayCharts(self.oj, self.selectedQueryJSON);\n\t\t\t\t\t}).fail(\n\t\t\t\t\t\tfunction (jqXHR) {\n\t\t\t\t\t\t\t$('#bpm-vis-cust-query-overlay', self.rootElement).removeClass('bpm-vis-load-overlay');\n\t\t\t\t\t\t\tif (jqXHR.status === 403) {\n\t\t\t\t\t\t\t\tvar respJSON = $.parseJSON(jqXHR.responseText);\n\t\t\t\t\t\t\t\tvar respMsg = respJSON && respJSON.message ? respJSON.message : '';\n\t\t\t\t\t\t\t\t$('#bpm-vis-delete-app').ojDialog('open');\n\t\t\t\t\t\t\t\t$(\"#bpm-vis-delete-app-text\").text(respMsg);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tself.selectedQueryBtn = ko.observableArray([]);\n\n\t\t//Handle on click of Query Button\n\t\tself.selectedQueryBtn.subscribe(function (newValue) {\n\t\t\tif(util.constants.misc.VISIBLE === newValue[0]){\n\t\t\t\t$('#bpm-vis-popup1').ojPopup( { \"position\": { \"my\": \"start top\",\"at\": \"start bottom\", \"of\": \"#bpm-vis-querybtn\"} } );\n\t\t\t\t$('#bpm-vis-popup1').ojPopup('open', '#bpm-vis-querybtn');\n\t\t\t} else {\n\t\t\t\t$('#bpm-vis-popup1').ojPopup('close', '#bpm-vis-querybtn');\n\t\t\t}\n\t\t});\n\n\t\tself.closePopup = function(){\n\t\t\tself.selectedQueryBtn([]);\n\t\t};\n\n\t\t$('#bpm-unifiedCharts-tabs').ojTabs({\n\t\t\t\"deselect\": function( event, ui ) {\n\t\t\t\tif($('#bpm-vis-popup1').ojPopup('isOpen')){\n\t\t\t\t\t$('#bpm-vis-popup1').ojPopup('close', '#bpm-vis-querybtn');\n\t\t\t\t\tself.selectedQueryBtn([]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\n\t\t// ------------------Chart related Code ----\n\t\tvar converterFactory = oj.Validation.converterFactory('number');\n\t\t/* toggle button variables */\n\t\tself.stackValue = ko.observable('off');\n\t\tself.orientationValue = ko.observable('vertical');\n\t\tself.selectedChartType = ko.observable(util.constants.chartType.BAR);\n\t\tself.xLabel = ko.observable('');\n\t\tself.yLabel = ko.observable('');\n\n\t\t/* chart data */\n\t\tvar chartSeries = [];\n\t\tvar chartGroups = [];\n\t\tvar decimalConverter = converterFactory.createConverter({minimumFractionDigits: 0, maximumFractionDigits: 3});\n\n\t\tself.barSeriesValue = ko.observableArray(chartSeries);\n\t\tself.barGroupsValue = ko.observableArray(chartGroups);\n\t\tself.yAxisConverter = ko.observable(decimalConverter);\n\n\t\t/* toggle buttons*/\n\t\tself.stackOptions = [\n\t\t\t{\n\t\t\t\tid: 'unstacked',\n\t\t\t\tlabel: self.bundle.vis.chart.unstacked,\n\t\t\t\tvalue: 'off',\n\t\t\t\ticon: 'oj-icon demo-bar-unstack'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'stacked',\n\t\t\t\tlabel: self.bundle.vis.chart.stacked,\n\t\t\t\tvalue: 'on',\n\t\t\t\ticon: 'oj-icon demo-bar-stack'\n\t\t\t}\n\t\t];\n\t\tself.orientationOptions = [\n\t\t\t{\n\t\t\t\tid: 'vertical',\n\t\t\t\tlabel: self.bundle.vis.chart.vertical,\n\t\t\t\tvalue: 'vertical',\n\t\t\t\ticon: 'oj-icon demo-bar-vert'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'horizontal',\n\t\t\t\tlabel: self.bundle.vis.chart.horizontal,\n\t\t\t\tvalue: 'horizontal',\n\t\t\t\ticon: 'oj-icon demo-bar-horiz'\n\t\t\t}\n\t\t];\n\n\t\tself.selectedGridToggle = ko.observableArray([]);\n\t\tvar lastSelectedChartType;\n\n\t\tself.selectedGridToggle.subscribe(function (newValue) {\n\t\t\tif (newValue.length > 0) {\n\t\t\t\t$('#bpm-vis-cust-chart').hide();\n\t\t\t\t$('#bpm-vis-cust-grid-data').show();\n\t\t\t\t$('#bpm-vis-cust-table').ojTable('refresh');\n\t\t\t\tif (self.selectedChartType() !== null) {\n\t\t\t\t\tlastSelectedChartType = self.selectedChartType();\n\t\t\t\t\tself.selectedChartType(null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.selectedChartType(lastSelectedChartType);\n\t\t\t\t$('#bpm-vis-cust-chart').show();\n\t\t\t\t$('#bpm-vis-cust-chart').ojChart('refresh');\n\t\t\t\t$('#bpm-vis-cust-grid-data').hide();\n\t\t\t}\n\n\t\t});\n\n\t\tself.selectedChartType.subscribe(function (newValue) {\n\t\t\tif (newValue !== null) {\n\t\t\t\tlastSelectedChartType = newValue;\n\t\t\t\tself.selectedGridToggle([]);\n\t\t\t}\n\t\t});\n\n\t\t//------------------ Graph Data Grid Code --------------\n\n\t\tself.downloadCsv = function (data) {\n\t\t\tvar filename, link, csv;\n\n\t\t\tfilename = 'export.csv';\n\n\t\t\tcsv = data.csvGridData;\n\t\t\tcsv = 'data:text/csv;charset=utf-8,' + csv;\n\t\t\tdata = encodeURI(csv);\n\n\t\t\tlink = document.createElement('a');\n\t\t\tlink.style = \"visibility:hidden\";\n\t\t\tlink.setAttribute('href', data);\n\t\t\tlink.setAttribute('download', filename);\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\t\t};\n\n\t\tself.csvGridData = '';\n\t\tself.headerTextArr = ko.observableArray([]);\n\t\tself.graphGridDataArray = ko.observableArray([]);\n\n\n\t\tself.gridDataSource = new oj.ArrayTableDataSource(self.graphGridDataArray(), {});\n\n\n\t\t// ------ Loading Mechanism -------------------\n\n\n\t\tfunction FilterModel() {\n\t\t\tvar filter = this;\n\t\t\tfilter.columnDataValue = ko.observableArray([self.columnDataList()[0].name]);\n\t\t\tfilter.operatorValue = ko.observableArray(['EQ']);\n\t\t\tfilter.selectedValue = ko.observableArray(['']);\n\t\t\tfilter.dataType = ko.observable(self.columnDataList()[0].dataType);\n\n\t\t\tfilter.columnDataValueChangeHandler = function (event, data) {\n\t\t\t\tfilter.selectedValue('');\n\t\t\t\tif (data.option == \"value\") {\n\t\t\t\t\tvar columnName = data.value[0];\n\t\t\t\t\t//loggerUtil.log(\"New Type of Chart-\" +columnName);\n\t\t\t\t\tfor (var i = 0; i < self.columnDataList().length; i++) {\n\t\t\t\t\t\tvar name = self.columnDataList()[i].name;\n\t\t\t\t\t\tif (name === columnName) {\n\t\t\t\t\t\t\tvar type = self.columnDataList()[i].dataType;\n\t\t\t\t\t\t\t//loggerUtil.log(\"tyep is - \" + type );\n\t\t\t\t\t\t\tfilter.dataType(type);\n\t\t\t\t\t\t\tfilter.operatorValue(['EQ']);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//loggerUtil.log(\"New Type of Chart-\" +columnName);\n\t\t\t\t\tfor (var j = 0; j < self.columnDataBIList().length; j++) {\n\t\t\t\t\t\tvar name1 = self.columnDataBIList()[j].name;\n\t\t\t\t\t\tif (name1 === columnName) {\n\t\t\t\t\t\t\tvar type1 = self.columnDataBIList()[j].dataType;\n\t\t\t\t\t\t\t//loggerUtil.log(\"tyep is - \" + type1 );\n\t\t\t\t\t\t\tfilter.dataType(type1);\n\t\t\t\t\t\t\tfilter.operatorValue(['EQ']);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n\t\tself.closeErrorDialog = function (event, data) {\n\t\t\t$(\"#bpm-dsb-warning-dialog\").ojDialog(\"close\");\n\t\t};\n\n\t}\n\n\treturn customDashboardContainerModel;\n});\n\n",
    "\ndefine('text!pcs/charts/visualization/view/custom/businessAnalytics.html',[],function () { return '<div class=\"bpm-vis-panel\">\\n\\t<div id=\"bpm-vis-business-analytics\" class=\"demo-grid-sizes demo-grid-display\">\\n\\t\\t<div class=\"oj-flex\">\\n\\t\\t\\t<div id=\"bpm-vis-cust-drawer\" class=\"oj-flex-item oj-xl-3 oj-lg-3 oj-md-3 oj-sm-12  oj-panel bpm-vis-query-style\">\\n\\t\\t\\t\\t<div id=\"bpm-vis-cust-querytoolbar\" class=\"bpm-vis-querytoolbar\">\\n\\t\\t\\t\\t\\t<div aria-label=\"Query Toolbar\">\\n\\t\\t\\t\\t\\t\\t<span id=\"bpm-vis-left-headericon\">\\n\\t\\t                </span>\\n\\t\\t\\t\\t\\t\\t<span id=\"reportsHeader\" data-bind=\"text:bundle.vis.formlbl.reports\"></span>\\n\\t\\t\\t\\t\\t\\t<button id=\"bpm-vis-delete\" class=\"bpm-vis-floatright\"\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"click:deleteConfirm, ojComponent: {\\n\\t\\t\\t\\t                    component:\\'ojButton\\', label: bundle.vis.button.delete, display: \\'icons\\',  disabled: \\'true\\', chroming: \\'half\\',\\n\\t\\t\\t\\t                    icons: {start:\\'oj-fwk-icon bpm-vis-trash-icon\\'}\\n\\t\\t\\t\\t                }\">\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<button id=\"bpm-vis-copy\" class=\"bpm-vis-floatright\"\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"click: copyQuery, ojComponent: {\\n\\t\\t\\t\\t                    component:\\'ojButton\\', label: bundle.vis.button.copy, display: \\'icons\\', disabled: \\'true\\', chroming: \\'half\\',\\n\\t\\t\\t\\t                    icons: {start:\\'oj-fwk-icon bpm-vis-copy-icon\\'}\\n\\t\\t\\t\\t                }\">\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<button id=\"bpm-vis-new\" class=\"bpm-vis-floatright\"\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"click: newQuery, ojComponent: {\\n\\t\\t\\t\\t                    component:\\'ojButton\\', label: bundle.vis.button.new, display: \\'icons\\', chroming: \\'half\\',\\n\\t\\t\\t\\t                    icons: {start:\\'oj-fwk-icon bpm-vis-new-icon\\'}\\n\\t\\t\\t\\t                }\">\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<ul id=\"bpm-vis-query-listview\"\\n\\t\\t\\t\\t\\tdata-bind=\"ojComponent: {\\n\\t\\t\\t\\t       \\t\\tcomponent: \\'ojListView\\',\\n\\t\\t\\t\\t       \\t\\tdata: queriesDS,\\n\\t\\t\\t\\t       \\t\\tselection: selectedQuery,\\n\\t\\t\\t\\t       \\t\\tselectionMode: \\'single\\',\\n\\t\\t\\t\\t       \\t\\titem: {\\n\\t\\t\\t\\t       \\t\\t\\t\\ttemplate: \\'bpm-vis-listTemplate\\'\\n\\t\\t\\t\\t\\t            }\\n\\t\\t\\t\\t       \\t\\t},\\n\\t\\t\\t\\t       \\t\\ttranslations : { msgNoData  : bundle.vis.chart.no_saved_queries},\\n\\t\\t\\t\\t       \\t\\t\">\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t<script type=\"text/html\" id=\"bpm-vis-listTemplate\">\\n\\t\\t\\t\\t\\t<li class=\"bpm-vis-queryItem\">\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"\">\\n\\t\\t\\t\\t                <span class=\\'bpm-vis-listitem clipped\\' data-bind=\"text:label, attr:{title:label}\">\\n\\t\\t\\t\\t                </span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</script>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"oj-flex-item oj-lg-1 oj-md-1 oj-sm-12  bpm-vis-snap-out\">\\n\\t\\t\\t\\t<div class=\"bpm-vis-snap-middle\">\\n\\t\\t\\t\\t\\t<div id=\"show-hide-navigation\" class=\"bpm-vis-hide-navlist\"\\n\\t\\t\\t\\t\\t\\t data-bind=\"click: handleSnapBtnClick\"></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div id=\"bpm-vis-chart\" class=\"oj-flex-item oj-lg-8 oj-md-8 oj-sm-12 \">\\n\\t\\t\\t\\t<div class=\"bpm-vis-hidden box-shadow\" id=\"bpm-vis-chart-row1\">\\n\\t\\t\\t\\t\\t<div id=\"bpm-vis-title-area\">\\n\\t\\t\\t\\t\\t\\t<input id=\"bpm-vis-chartname-input\"  type=\"text\" aria-label=\"Query Name\"\\n\\t\\t\\t\\t\\t\\t\\t   data-bind=\"ojComponent: {component: \\'ojInputText\\', value: queryName, rootAttributes:{style: \\'margin-bottom:2px;\\'}}\"/>\\n\\t\\t\\t\\t\\t\\t<input id=\"bpm-vis-chartname-desc\"  type=\"text\" aria-label=\"Query Description\"\\n\\t\\t\\t\\t\\t\\t\\t   data-bind=\"ojComponent: {component: \\'ojInputText\\', value: description, placeholder:bundle.vis.formlbl.description}\"/>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<span id=\"bpm-vis-btnset\">\\n\\t\\t\\t\\t\\t    <a id=\"bpm-vis-cust-download-btn\" href=\"#\" class=\"bpm-vis-floatright\"\\n\\t\\t\\t\\t\\t\\t   data-bind=\"click: downloadCsv, attr: {title: bundle.vis.button.download_csv},\\n\\t\\t\\t                                   ojComponent: {component:\\'ojButton\\',\\n\\t\\t\\t                                   label: bundle.vis.button.download_csv,\\n\\t\\t\\t                                   display: \\'icons\\', chroming: \\'half\\',\\n\\t\\t\\t                                   icons: {start: \\'bpm-vis-download-icon oj-fwk-icon\\'}\\n\\t\\t\\t                        }\">\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t<button id=\"bpm-vis-save\" class=\"bpm-vis-floatright\"\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"click: saveQuery, ojComponent: {\\n\\t\\t\\t\\t\\t                    component:\\'ojButton\\', chroming: \\'half\\', label: bundle.vis.button.save, display: \\'icons\\',\\n\\t\\t\\t\\t\\t                    icons: {start:\\'oj-fwk-icon bpm-vis-save-icon\\'}\\n\\t\\t\\t\\t\\t                }\">\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<button id=\"bpm-vis-refresh\" class=\"bpm-vis-floatright\"\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"click: resetQuery, ojComponent: {\\n\\t\\t\\t\\t\\t                    component:\\'ojButton\\', chroming: \\'half\\', label: bundle.vis.button.reset, display: \\'icons\\',\\n\\t\\t\\t\\t\\t                    icons: {start:\\'oj-fwk-icon bpm-vis-refresh-icon\\'}\\n\\t\\t\\t\\t\\t                }\">\\n\\t\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t</span>\\n\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\"bpm-vis-hidden bpm-vis-chart-row2\" id=\"bpm-vis-chart-row2\">\\n\\t\\t\\t\\t\\t<!--<button id=\"bpm-vis-querybtn\" data-bind=\"ojComponent: {component: \\'ojButton\\',-->\\n\\t\\t\\t\\t\\t<!--label: bundle.vis.button.query,-->\\n\\t\\t\\t\\t\\t<!--icons:{end:\\'oj-fwk-icon-arrow02-s oj-fwk-icon\\'},-->\\n\\t\\t\\t\\t\\t<!--chroming: \\'outlined\\'},-->\\n\\t\\t\\t\\t\\t<!--click: handleQueryBtn\">-->\\n\\t\\t\\t\\t\\t<!--</button>-->\\n\\t\\t\\t\\t\\t<span id=\"bpm-vis-querybtn\" data-bind=\"ojComponent: {component: \\'ojButtonset\\', checked: selectedQueryBtn}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-querybtn\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\"checkbox\" id=\"bpm-vis-cust-querybtn\" value=\"visible\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"attr:{title:bundle.vis.button.query},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tojComponent: { component: \\'ojButton\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: bundle.vis.button.query,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchroming: \\'outlined\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ticons:{end:\\'oj-fwk-icon-arrow02-s oj-fwk-icon\\'},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trootAttributes: {style:\\'font-weight: bold;\\'}}\"/>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t<span id=\"bpm-vis-chart-tools\">\\n\\t\\t\\t\\t\\t\\t<span id=\\'bpm-vis-cust-chart-selection\\'>\\n\\t\\t\\t\\t\\t\\t\\t<!-- Grid Toggle button -->\\n\\t\\t                    <span id=\"bpm-vis-cust-chart-icons\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  data-bind=\"ojComponent: {component: \\'ojButtonset\\', checked: selectedChartType, chroming: \\'outlined\\'}\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  aria-label=\"Select chart type.\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: chartTypeList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label data-bind=\"attr: {for: name}\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\"radio\" name=\"chart-types\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"value: name, attr: {id: name},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tojComponent: { component: \\'ojButton\\', label: displayName, icons: {start: icon}, display: \\'icons\\'}\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t                    </span>\\n\\t\\t                    <span id=\"bpm-vis-cust-grid-toggle\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  data-bind=\"ojComponent: {component: \\'ojButtonset\\', checked: selectedGridToggle}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-data-grid\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\"checkbox\" id=\"bpm-vis-cust-data-grid\" value=\"dataGrid\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"attr:{title:bundle.vis.button.graph_data},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tojComponent: { component: \\'ojButton\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: bundle.vis.button.graph_data,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdisplay: \\'icons\\', chroming: \\'outlined\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ticons: {start: \\'bpm-vis-table-icon oj-fwk-icon\\'}}\"/>\\n\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t                </span>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t<div id=\"bpm-vis-lastNDays\" class=\"bpm-vis-floatright\">\\n\\t\\t\\t\\t\\t\\t<select id=\"bpm-vis-lastNDaySelect\" aria-label=\"Data for last\" data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n                                                    value: selectedLastDays,\\n                                                    optionChange: handleLastNDaySelect,\\n                                                    rootAttributes: {style:\\'max-width:6em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: lastNDaysFilter -->\\n\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:id, text:label ,title:label\"></option>\\n\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div id=\"bpm-vis-ndaystxt\" class=\"bpm-vis-floatright\"><span id=\"bpm-vis-ndaysspan\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text: bundle.vis.formlbl.data_last\"></span>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\"oj-lg-12 oj-md-12 oj-sm-12 bpm-vis-hidden\" id=\"bpm-vis-popup1\"\\n\\t\\t\\t\\t\\t\\t data-bind=\"ojComponent:{component: \\'ojPopup\\', initialFocus: \\'none\\', autoDismiss : \\'none\\', rootAttributes: {style:\\'margin-top:40px\\'}}\">\\n\\t\\t\\t\\t\\t\\t<!-- <div id=\"bpm-vis-pop-container\" data-bind=\"ojModule: {viewName: \\'custom/queryForm\\'\" ></div> -->\\n\\t\\t\\t\\t\\t\\t<div class=\"\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-form oj-md-odd-cols-4 oj-md-labels-inline\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div  class=\" oj-md-labels-inline \">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex oj-sm-justify-content-flex-end\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button id=\"bpm-vis-close-popup\" class=\"bpm-vis-floatright\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"click: closePopup, ojComponent: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcomponent:\\'ojButton\\', label: bundle.vis.button.close, display: \\'icons\\', chroming: \\'half\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ticons: {start:\\'oj-fwk-icon oj-fwk-icon-cross\\'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"bpm-vis-cust-ds-div\" class=\"oj-flex oj-md-labels-inline\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-data-source-list\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.data_source_type\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\"bpm-vis-cust-data-source-list\" data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: selectedDataSource, optionChange: dataSourceChangeHandler,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trootAttributes: {style:\\'max-width:20em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: dataSourceList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName, title:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"bpm-vis-cust-app-div\" class=\"oj-flex oj-md-labels-inline\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-app-list\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.select_application\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\"bpm-vis-cust-app-list\" data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: selectedAppName, optionChange: appNameChangeHandler,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trootAttributes: {style:\\'max-width:20em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"ANY\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text: bundle.vis.formlbl.select_application_opt1\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: appNameList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"text:name, title:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<fieldset class=\"oj-form oj-md-odd-cols-4 oj-md-labels-inline\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<legend class=\"bold-txt\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text: bundle.vis.formlbl.x_axis\"></legend>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-series-list\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.series\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\"bpm-vis-cust-series-list\" data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: selectedSeries, optionChange : seriesChangeHandler,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trootAttributes: {style:\\'max-width:20em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<optgroup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"attr:{label: bundle.vis.formlbl.business_indicators}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: dimensionBIList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<optgroup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"attr:{label: bundle.vis.formlbl.system_indicators}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: dimensionList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"bpm-vis-srs-timegroups\" class=\"oj-flex bpm-vis-timegroups\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-timegroups-series\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.timegroups\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\"bpm-vis-cust-timegroups-series\" data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: selectedSrsTimeGroup, placeholder: bundle.vis.formlbl.select_none, rootAttributes: {style:\\'max-width:20em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: timeGroups -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:id, text:label\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-group-list\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.group\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\"bpm-vis-cust-group-list\" data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: selectedGroup, optionChange : groupChangeHandler, rootAttributes: {style:\\'max-width:20em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<optgroup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"attr:{label: bundle.vis.formlbl.business_indicators}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: dimensionBIList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<optgroup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"attr:{label: bundle.vis.formlbl.system_indicators}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: dimensionList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"bpm-vis-grp-timegroups\" class=\"oj-flex bpm-vis-timegroups\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-timegroups-group\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.timegroups\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\"bpm-vis-cust-timegroups-group\" data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: selectedGrpTimeGroup, placeholder: bundle.vis.formlbl.select_none, rootAttributes: {style:\\'max-width:20em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: timeGroups -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:id, text:label\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</fieldset>\\n\\t\\t\\t\\t\\t\\t\\t\\t<fieldset class=\"oj-form oj-md-odd-cols-4 oj-md-labels-inline\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<legend class=\"bold-txt\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text: bundle.vis.formlbl.y_axis\"></legend>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-measure-list\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.measure\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\"bpm-vis-cust-measure-list\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"ojComponent: {component: \\'ojSelect\\', disabled:measureDisabled, value: selectedMeasure, optionChange: measureChangeHandler, rootAttributes: {style:\\'max-width:20em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\'*\\' disabled\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text: bundle.vis.formlbl.select_none\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<optgroup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"attr:{label: bundle.vis.formlbl.business_indicators}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: measureBIList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<optgroup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"attr:{label: bundle.vis.formlbl.system_indicators}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: measureList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-function-list\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.function\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\"bpm-vis-cust-function-list\" data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: selectedFunction, optionChange: functionChangeHandler,rootAttributes: {style:\\'max-width:20em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: functionList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</fieldset>\\n\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-label-inline\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label id=\"bpm-vis-cust-match\" class=\"oj-label-inline\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.match\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div data-bind=\"ojComponent: {component: \\'ojRadioset\\' ,value :selectedFilterType}\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t aria-labelledby=\"bpm-vis-cust-match\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"oj-choice-row-inline\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"bpm-vis-cust-match-all\" type=\"radio\" name=\"filterType\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   value=\"ALL\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-match-all\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.all\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"oj-choice-row-inline\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"bpm-vis-cust-match-any\" type=\"radio\" name=\"filterType\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   value=\"ANY\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\"bpm-vis-cust-match-any\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"text: bundle.vis.formlbl.any\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"bpm-vis-floatright\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button data-bind=\"click: addFilter, attr: {title: bundle.vis.button.add_filter},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   ojComponent: {component:\\'ojButton\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   label: bundle.vis.button.add_filter,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   icons: {start: \\'bpm-vis-add-filter-icon oj-fwk-icon\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<hr/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\" oj-cols-nopad\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: filterCriteriaList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex oj-cols-nopad bpm-vis-filters-style\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item oj-lg-4 oj-md-8 oj-sm-12 \">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: columnDataValue, optionChange: columnDataValueChangeHandler}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<optgroup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"attr:{label: $parent.bundle.vis.formlbl.business_indicators}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: $parent.columnDataBIList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName ,title:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<optgroup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"attr:{label: $parent.bundle.vis.formlbl.system_indicators}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko foreach: $parent.columnDataList -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option data-bind=\"value:name, text:displayName ,title:displayName\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</optgroup>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item oj-lg-4 oj-md-8 oj-sm-12 \">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: operatorValue}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"EQ\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filter.equal\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"NE\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filter.not_equal\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"NULL\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filter.null\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"NOTNULL\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filter.not_null\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko ifnot: dataType() == \\'VARCHAR\\' || dataType() == \\'BOOLEAN\\'-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"LT\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filter.lesser\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"LE\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filter.lesser_equal, attr:{title:$parent.bundle.vis.filter.lesser_equal}\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"GT\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filter.greater\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"GE\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filter.greater_equal\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: dataType() == \\'VARCHAR\\' -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"LIKE\" data-bind=\"text:$parent.bundle.vis.filter.like\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"NOTLIKE\" data-bind=\"text:$parent.bundle.vis.filter.not_like\" ></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex-item oj-lg-4 oj-md-8 oj-sm-12 \">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko ifnot: operatorValue()== \\'NULL\\' || operatorValue()== \\'NOTNULL\\'-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: dataType()== \\'BOOLEAN\\' -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select data-bind=\"ojComponent: {component: \\'ojSelect\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: selectedValue}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"TRUE\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filterValues.true\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tselected=\"selected\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\"FALSE\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"text:$parent.bundle.vis.filterValues.false\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: dataType()== \\'VARCHAR\\'-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input data-bind=\"ojComponent: {component: \\'ojInputText\\',validators : [{type: \\'regExp\\', options : {pattern: \\'[a-zA-Z0-9. _-]{1,}\\',hint: $parent.bundle.vis.error_msg.hintAlphanumeric, messageSummary: \\'Value \\\\\\'{value}\\\\\\' Invalid\\',messageDetail: $parent.bundle.vis.error_msg.msgAlphanumeric}}], value:selectedValue, rootAttributes: {style:\\'max-width:16em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: dataType()== \\'INT\\' || dataType()== \\'DECIMAL\\'-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input data-bind=\"ojComponent: {component: \\'ojInputText\\', validators : [{type: \\'regExp\\', options : {pattern: \\'[0-9.]{1,}\\',hint: $parent.bundle.vis.error_msg.hintNumber, messageSummary: \\'Value \\\\\\'{value}\\\\\\' Invalid\\',messageDetail: $parent.bundle.vis.error_msg.msgNumber}}], value:selectedValue, rootAttributes: {style:\\'max-width:16em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- ko if: dataType()== \\'DATETIME\\' -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input data-bind=\"ojComponent: {component: \\'ojInputDateTime\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: selectedValue, rootAttributes: {style:\\'max-width:16em\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button id=\"bpm-vis-delete-row\" class=\"bpm-vis-floatright\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-bind=\"click:$parent.removeFilter, ojComponent: {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcomponent:\\'ojButton\\', label: $parent.bundle.vis.button.delete, display: \\'icons\\', chroming: \\'half\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ticons: {start:\\'oj-fwk-icon oj-fwk-icon-cross02\\'}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"oj-flex oj-sm-justify-content-center \">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button id=\"bpm-vis-visualize-btn\" class=\"oj-button-primary\" data-bind=\"click: visualize,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tattr: {title: bundle.vis.button.visualize},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tojComponent: {component:\\'ojButton\\', label: bundle.vis.button.visualize}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\"\">\\n\\t\\t\\t\\t\\t<div id=\"bpm-vis-cust-main\" class=\"oj-lg-12 oj-md-12 oj-sm-12 \">\\n\\t\\t\\t\\t\\t\\t<div class=\"\">\\n\\t\\t\\t\\t\\t\\t\\t<div id=\"bpm-vis-cust-splash\" class=\"bpm-vis-splash-style\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"bpm-vis-chart-msg\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  data-bind=\"text:bundle.vis.chart.blank_chart_header\"></span><br><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"bpm-vis-chart-msgdtl\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  data-bind=\"text:bundle.vis.chart.blank_chart_details\"></span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div id=\"bpm-vis-cust-chart-container\" class=\"  bpm-vis-center-align bpm-vis-hidden\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"bpm-vis-cust-chart\" class=\"bpm-vis-center-align bpm-vis-chart-style\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t data-bind=\"ojComponent: {\\n\\t\\t                                    component: \\'ojChart\\',\\n\\t\\t                                    type: selectedChartType,\\n\\t\\t                                    orientation: orientationValue,\\n\\t\\t                                    stack: stackValue,\\n\\t\\t                                    animationOnDisplay: \\'auto\\',\\n\\t\\t                                    animationOnDataChange: \\'auto\\',\\n\\t\\t\\t\\t\\t\\t\\t                hoverBehavior: \\'dim\\',\\n\\t\\t\\t\\t\\t\\t\\t                zoomAndScroll: \\'live\\',\\n\\t\\t\\t\\t\\t\\t\\t                overview: {rendered: \\'on\\', height: \\'65px\\'},\\n\\t\\t                                    yAxis: {title: yLabel()},\\n\\t\\t                                    xAxis: {title: xLabel()},\\n\\t\\t                                    legend: {position: \\'end\\'},\\n\\t\\t\\t\\t\\t\\t\\t                translations : { labelNoData : bundle.vis.chart.no_chart_data},\\n\\t\\t\\t\\t\\t\\t\\t                title : {text :  selectedVisualizationName() , halign : \\'plotAreaCenter\\' },\\n\\t\\t\\t\\t\\t\\t\\t                hideAndShowBehavior: \\'withRescale\\',\\n\\t\\t                                    series: barSeriesValue,\\n\\t\\t                                    groups: barGroupsValue,\\n\\t\\t                                }\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"bpm-vis-cust-grid-data\" class=\"bpm-vis-center-align bpm-vis-hidden\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table id=\"bpm-vis-cust-table\" summary=\"Chart Data Table\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   aria-label=\"Chart Data Table\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"ojComponent: {component: \\'ojTable\\',\\n\\t\\t                                                            data: gridDataSource,\\n\\t\\t                                                            display: \\'grid\\',\\n\\t\\t                                                            translations: {msgNoData : bundle.vis.chart.no_chart_data},\\n\\t\\t                                                            columnsDefault: {sortable: \\'none\\'},\\n\\t\\t                                                            columns: headerTextArr,\\n\\t\\t                                                            rootAttributes: {\\'style\\':\\'width: 600px; height: 600px;margin-top:20px;\\'}}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"bpm-vis-cust-chart-overlay\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"bpm-vis-center-align bpm-vis-tool-style oj-flex oj-sm-justify-content-center\" id=\"bpm-vis-cust-toolbar\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t aria-label=\"Chart Display Options Toolbar\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t data-bind=\"ojComponent: {component:\\'ojToolbar\\'}\">\\n\\t\\t                            <span id=\"bpm-vis-cust-graph-tools\" class=\"oj-flex-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- vertical/horizontal toggle button -->\\n\\t\\t                                <span id=\"bpm-vis-cust-radio-buttonset\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  data-bind=\"ojComponent: {component: \\'ojButtonset\\', focusManagement:\\'none\\', checked: orientationValue}\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  class=\"oj-button-half-chrome\" aria-label=\"Choose an orientation.\">\\n\\t\\t                                    <!-- ko foreach: orientationOptions -->\\n\\t\\t                                    <label data-bind=\"attr: {for: id}\"></label>\\n\\t\\t                                    <input type=\"radio\" name=\"orientation\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"value: value, attr: {id: id},\\n\\t\\t                                            ojComponent: {component: \\'ojButton\\', label: label,\\n\\t\\t                                            icons: {start: icon}, display: \\'icons\\'}\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t                                </span>\\n\\t\\t                                <span role=\"separator\" aria-orientation=\"vertical\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  class=\"oj-toolbar-separator\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- unstacked/stacked toggle button -->\\n\\t\\t                                <span id=\"bpm-vis-cust-radio-buttonset2\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  data-bind=\"ojComponent: {component: \\'ojButtonset\\', focusManagement:\\'none\\', checked: stackValue}\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  class=\"oj-button-half-chrome\" aria-label=\"Choose a stack setting.\">\\n\\t\\t                                    <!-- ko foreach: stackOptions -->\\n\\t\\t                                    <label data-bind=\"attr: {for: id}\"></label>\\n\\t\\t                                    <input type=\"radio\" name=\"stack\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   data-bind=\"value: value, attr: {id: id},\\n\\t\\t                                               ojComponent: {component: \\'ojButton\\', label: label,\\n\\t\\t                                                icons: {start: icon}, display: \\'icons\\'}\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /ko -->\\n\\t\\t                                </span>\\n\\t\\t                            </span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\"bpm-vis-hidden\" id=\"bpm-dsb-warning-dialog\"\\n\\t\\t data-bind=\"attr : { title : bundle.vis.dialog.warning }, ojComponent:{component: \\'ojDialog\\', initialVisibility: \\'hide\\'}\">\\n\\t\\t<div class=\"oj-dialog-body\">\\n\\t\\t\\t<div id=\"bpm-vis-warning-dialog-text\"></div>\\n\\t\\t</div>\\n\\t\\t<div class=\"oj-dialog-footer\">\\n\\t\\t\\t<button data-bind=\"click : closeErrorDialog , ojComponent: {component: \\'ojButton\\', label: bundle.vis.dialog.ok}\"></button>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\"bpm-vis-hidden\" id=\"bpm-dsb-confirm-dialog\"\\n\\t\\t data-bind=\"attr : { title : bundle.vis.dialog.confirm }, ojComponent:{component: \\'ojDialog\\', initialVisibility: \\'hide\\'}\">\\n\\t\\t<div class=\"oj-dialog-body\">\\n\\t\\t\\t<div id=\"bpm-vis-confirm-dialog-text\"></div>\\n\\t\\t</div>\\n\\t\\t<div class=\"oj-dialog-footer\">\\n\\t\\t\\t<button id=\"bpm-vis-cancelButton\"\\n\\t\\t\\t\\t\\tdata-bind=\"click : function(){$(\\'#bpm-dsb-confirm-dialog\\').ojDialog(\\'close\\');} , ojComponent: {component: \\'ojButton\\', label: bundle.vis.dialog.cancel}\"></button>\\n\\t\\t\\t<button id=\"bpm-vis-okButton\"\\n\\t\\t\\t\\t\\tdata-bind=\"click : deleteQuery , ojComponent: {component: \\'ojButton\\', label: bundle.vis.dialog.ok}\"></button>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\"bpm-vis-hidden\" id=\"bpm-vis-delete-app\"\\n\\t\\t data-bind=\"attr : { title : bundle.vis.dialog.confirm }, ojComponent:{component: \\'ojDialog\\', initialVisibility: \\'hide\\', cancelBehavior: \\'none\\'}\">\\n\\t\\t<div class=\"oj-dialog-body\">\\n\\t\\t\\t<div id=\"bpm-vis-delete-app-text\"></div>\\n\\t\\t\\t</br>\\n\\t\\t\\t<div data-bind=\"text: bundle.vis.dialog.delete_app_msg\"></div>\\n\\t\\t</div>\\n\\t\\t<div class=\"oj-dialog-footer\">\\n\\t\\t\\t<button id=\"bpm-vis-deleteButton\"\\n\\t\\t\\t\\t\\tdata-bind=\"click : deleteQuery , ojComponent: {component: \\'ojButton\\', label: bundle.vis.dialog.delete}\"></button>\\n\\t\\t\\t<button id=\"bpm-vis-continueButton\"\\n\\t\\t\\t\\t\\tdata-bind=\"click : newQuery , ojComponent: {component: \\'ojButton\\', label: bundle.vis.dialog.continue}\"></button>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div id=\"bpm-vis-main-splash\" style=\"display: none\" class=\"bpm-vis-splash-style \">\\n\\t\\t<span class=\"bpm-vis-chart-msg\"\\n\\t\\t\\t  data-bind=\"text:bundle.vis.formlbl.start_msg\"></span><br><br>\\n\\t\\t<button id=\"bpm-vis-startButton\" class=\"bpm-vis-startBtn oj-button-confirm\" data-bind=\"click : handleStartClick , ojComponent: {component: \\'ojButton\\', label: bundle.vis.button.start,\\n\\t\\t\\t\\t\\ticons: {end:\\'oj-fwk-icon bpm-vis-start-icon\\'}}\"></button>\\n\\t</div>\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 11/20/2015.\n */\n\ndefine('pcs/charts/visualization/viewModel/visualizationContainer',['ojs/ojcore' ,'knockout', 'pcs/charts/visualization/viewModel/util/visualizationUtil', 'ojs/ojknockout',\n\t'pcs/charts/visualization/viewModel/custom/customDashboard',\n\t'!text!pcs/charts/visualization/view/custom/businessAnalytics.html', 'ojL10n!pcs/resources/nls/dashboardResource'\n], function(oj, ko,util) {\n\t/**\n\t * The view model for the main content view template\n\t */\n\tfunction visualizationContainerModel(params) {\n\t\tvar self = this;\n\t\tthis.parent = params.parent;\n\t\tthis.baseURL = this.parent.baseURL; //server address\n\t\tthis.baseRestUrl = this.parent.baseRestURL; //Rest\n\n\t\tthis.authInfo = this.parent.authInfo; // Login credentials\n\n\t\tthis.chartEndpoint = \"analytics/ootbqueries/\";\n\n\t\tthis.processTrackingPage = this.parent.processTrackingPage;\n\t\tthis.tasksPage = this.parent.tasksPage;\n\n\t\tthis.rootElement= this.parent.rootElement;\n\n\t\t// Hide the dashboard loading indicator\n\t\t$(\"#bpm-vis-loading-indicator\",this.rootElement).hide();\n\n\t\t//Set the resourcebundle\n\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\t}\n\n\treturn visualizationContainerModel;\n});\n\n",
    "\ndefine('text!pcs/charts/visualization/view/visualizationContainer.html',[],function () { return '<div id=\"bpm-vis-container\">\\n\\t<div id=\"bpm-vis-custom\" class=\"bpm-vis-tab-panel\">\\n\\t\\t<div id=\"bpm-vis-custom-container\" data-bind=\"ojModule: { name: \\'pcs/charts/visualization/viewModel/custom/customDashboard\\',\\n        viewName: \\'pcs/charts/visualization/view/custom/businessAnalytics\\', params: {parent: $data}}\">\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 11/20/2015.\n */\n\n\ndefine('pcs/pcs.visualization',['ojs/ojcore', 'knockout', 'jquery','!text!pcs/charts/visualization/templates/pcs-visualization.html', 'pcs/util/pcsUtil', 'pcs/util/loggerUtil',\n\t'pcs/charts/visualization/viewModel/visualizationContainer','!text!pcs/charts/visualization/view/visualizationContainer.html',\n\t'ojs/ojmodule' , 'jqueryui-amd/widget'],\n\tfunction( oj, ko, $, tmpl,pcsUtil) {\n\t\t'use strict';\n\t\t// define your widget under pcs namespace\n\t\t$.widget('pcs.visualization', {\n\t\t\t//Options to be used as defaults\n\t\t\toptions: {\n\t\t\t\t//data sources\n\t\t\t\tbaseUri: '',\n\t\t\t\tbaseRestUri : '/bpm/api/3.0/analytics/',\n\t\t\t\tusername : 'weblogic',\n\t\t\t\tpassword : 'weblogic1',\n\t\t\t\tprocessTrackingPage: 'processTracking.jspx',\n\t\t\t\ttasksPage          : 'worklist.jspx'\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates basic auth header for given username and password\n\t\t\t */\n\t\t\t_authHeader: function () {\n\t\t\t\treturn pcsUtil.getAuthInfo();\n\t\t\t},\n\n\t\t\t//Setup widget (eg. element creation, apply theming\n\t\t\t// , bind events etc.)\n\t\t\t_create: function () {\n\t\t\t\t// _create will automatically run the first time\n\t\t\t\t// this widget is called. Put the initial widget\n\t\t\t\t// setup code here, then you can access the element\n\t\t\t\t// on which the widget was called via this.element.\n\t\t\t\t// The options defined above can be accessed\n\t\t\t\t// via this.options this.element.addStuff();\n\t\t\t\tvar widget = this;\n\n\t\t\t\tthis.options.baseUri= pcsUtil.getServerURL();\n\n\t\t\t\tfunction rootViewModel() {\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tself.baseURL = widget.options.baseUri;\n\t\t\t\t\tself.baseRestURL = self.baseURL + widget.options.baseRestUri;\n\t\t\t\t\tself.processTrackingPage = self.baseURL + widget.options.processTrackingPage;\n\t\t\t\t\tself.tasksPage = self.baseURL + widget.options.tasksPage;\n\t\t\t\t\tself.authInfo = widget._authHeader(); // Login credentials\n\t\t\t\t\tself.rootElement= widget.element;\n\t\t\t\t}\n\n\t\t\t\tvar vm = new rootViewModel();\n\n\t\t\t\tthis.element.html(tmpl);\n\n\t\t\t\t//bind your ViewModel for the content of whole page body.\n\t\t\t\tko.applyBindings(vm, this.element['0']);\n\t\t\t},\n\n\n\n\t\t\t// Respond to any changes the user makes to the option method\n\t\t\t_setOption: function (key, value) {\n\t\t\t\tthis.options[key] = value;\n\n\t\t\t\t// For UI 1.8, _setOption must be manually invoked\n\t\t\t\t// from the base widget\n\t\t\t\t$.Widget.prototype._setOption.apply(this, arguments);\n\t\t\t\t// For UI 1.9 the _super method can be used instead\n\t\t\t\t// this._super( \"_setOption\", key, value );\n\t\t\t}\n\t\t});\n\t});\n\n",
    "\ndefine('text!pcs/charts/dashboard/templates/pcs-dashboard.html',[],function () { return '<div id=\"bpm-charts-mainContainer\">\\n\\t<div  class=\"oj-sm-12 bpm-dsb-center-align\">\\n\\t\\t<div id=\"bpm-dsb-loading-indicator\" class=\"bpm-dsb-center-align bpm-dsb-loading\"/>\\n\\t</div>\\n\\t<div class=\"oj-flex\">\\n\\t\\t<div class=\"oj-xl-12 oj-lg-12 oj-md-12 oj-col\">\\n\\t\\t\\t<div id=\"dashboardContainer\" data-bind=\"ojModule: { name: \\'pcs/charts/dashboard/viewModel/dashboardContainer\\', viewName: \\'pcs/charts/dashboard/view/dashboardContainer\\',\\n\\t\\t\\t\\tparams: {parent: $data}}\"></div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 6/30/2015.\n */\n\n\ndefine('pcs/charts/dashboard/util',[], function () {\n\n\t_columnAlias = function(data) {\n\t\tif (data.columnsInfo) {\n\t\t\tvar ret = {};\n\t\t\tvar i;\n\t\t\tfor (i = 0; i < data.columnsInfo.length; i++) {\n\t\t\t\tret[data.columnsInfo[i].columnName.replace(\"TASK\",\"PROCESS\")] = i;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n\n\t// method to create the parameter list for the query\n\t_paramList= function(chart){\n\t\tvar param =\"\";\n\t\tvar filterPanel = chart.parent.filterPanel;\n\n\t\tif (filterPanel){\n\n\t\t\t// If the user has not selected all process add the process name in parameter list\n\t\t\tif(!filterPanel.selectedSelectAllProcess) {\n\t\t\t\t// add  all the processes added\n\t\t\t\tfor (var i = 0; i < filterPanel.selectedProcesses.length; i++) {\n\t\t\t\t\tparam = param + \"&processNames=\" + encodeURIComponent(filterPanel.selectedProcesses[i]);\n\t\t\t\t}\n\t\t\t\t// if no process is added, then send with empty process name\n\t\t\t\tif(param === \"\"){\n\t\t\t\t\tparam = param + \"&processNames=\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(filterPanel.selectedAssignees && filterPanel.selectedAssignees.length === 1){\n\t\t\t\tparam = param + \"&assigneeType=\" + encodeURIComponent(filterPanel.selectedAssignees[0]);\n\t\t\t}\n\n\t\t\tif (filterPanel.selectedTopN)\n\t\t\t\tparam = param + \"&topN=\" + filterPanel.selectedTopN;\n\n\t\t\tif (filterPanel.selectedDateRange)\n\t\t\t\tparam = param + \"&daysAgo=\" + filterPanel.selectedDateRange;\n\n\t\t\tif (param.length > 0)\n\t\t\t\tparam = \"?\" + param.substring(1);\n\t\t}\n\t\t//loggerUtil.log(param);\n\t\t// to make sure ADF session remain active we do this\n\t\t_adfProxyCall();\n\t\treturn param;\n\t};\n\n\t_adfProxyCall = function(url){\n\t\t// Let the container handle if container is willing to\n\t\tif (typeof doADFProxyCall == 'function') {\n\t\t\tdoADFProxyCall(url);\n\t\t}\n\t\t// else handle ourself\n\t\telse{\n\t\t\tif(url) {\n\t\t\t\twindow.location.assign(url);\n\t\t\t}\n\t\t}\n\t};\n\n\n\t_errorHandler = function (jqXHR, customMsg){\n\t\t$(\"#bpm-dsb-error-dialog\").ojDialog(\"open\");\n\n\t\tvar msg = oj.Translations.getTranslatedString('container.generic_error_msg');\n\n\t\tif(customMsg){\n\t\t\tmsg = customMsg;\n\t\t}\n\n\t\telse if (jqXHR && jqXHR.status === 401){\n\t\t\tmsg= oj.Translations.getTranslatedString('container.access_error_msg');\n\t\t}\n\n\t\t$(\"#bpm-dsb-error-dialog-custom-text\").text(msg);\n\n\t};\n\n\t_queries = {\n\t\t//Workload\n\t\tWORKLOAD_ANALYSIS_BILLBOARD : \"WORKLOAD_ANALYSIS_BILLBOARD\",\n\t\t// Workload top 10 Task\n\t\tOPEN_TASK_ON_TRACK_ANALYSIS_CHART : \"OPEN_TASK_ON_TRACK_ANALYSIS_CHART\",\n\t\tOPEN_TASK_OVER_DUE_ANALYSIS_CHART :\"OPEN_TASK_OVER_DUE_ANALYSIS_CHART\",\n\t\tOPEN_TASK_DUE_SOON_ANALYSIS_CHART : \"OPEN_TASK_DUE_SOON_ANALYSIS_CHART\",\n\t\t// Workload top 10 Assignee\n\t\tOPEN_ASSIGNEES_ON_TRACK_ANALYSIS_CHART : \"OPEN_ASSIGNEES_ON_TRACK_ANALYSIS_CHART\",\n\t\tOPEN_ASSIGNEES_DUE_SOON_ANALYSIS_CHART : \"OPEN_ASSIGNEES_DUE_SOON_ANALYSIS_CHART\",\n\t\tOPEN_ASSIGNEES_OVER_DUE_ANALYSIS_CHART: \"OPEN_ASSIGNEES_OVER_DUE_ANALYSIS_CHART\",\n\t\t// Workload bootleneck\n\t\tDUE_DATE_ANALYSIS_BY_OPEN_PROCESS_TREEMAP : \"DUE_DATE_ANALYSIS_BY_OPEN_PROCESS_TREEMAP\",\n\t\tDUE_DATE_ANALYSIS_BY_ASSIGNEE_TREEMAP : \"DUE_DATE_ANALYSIS_BY_ASSIGNEE_TREEMAP\",\n\t\tDUE_DATE_ANALYSIS_BY_OPEN_TASKS_TREEMAP :\"DUE_DATE_ANALYSIS_BY_OPEN_TASKS_TREEMAP\",\n\n\t\t// Health\n\t\tPROCESS_HEALTH_BILLBOARD :\"PROCESS_HEALTH_BILLBOARD\",\n\t\tPROCESS_HEALTH_TABLE : \"PROCESS_HEALTH_TABLE\"\n\n\t};\n\n\n\treturn {\n\t\tcolumnAlias : _columnAlias,\n\t\tqueries : _queries,\n\t\tparamList : _paramList,\n\t\tdrilldown : _adfProxyCall,\n\t\terrorHandler : _errorHandler\n\t};\n});\n\n",
    "/**\n * Created by nisabhar on 6/12/2015.\n */\n\ndefine('pcs/charts/dashboard/viewModel/dashboards/healthDashboard',['ojs/ojcore' ,'knockout','pcs/charts/dashboard/util', 'ojL10n!pcs/resources/nls/dashboardResource'\n], function(oj, ko,util) {\n\t/**\n\t * The view model for the main content view template\n\t */\n\tfunction healthDashboardContainerModel(params) {\n\t\tvar self = this;\n\t\tvar loggerUtil =  require('pcs/util/loggerUtil');\n\n\t\t//Set the resourcebundle\n\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\n\t\tself.parent = params.parent;\t// hold the instance of dashboardContainer\n\n\t\tself.baseRestUrl = self.parent.baseRestUrl;\n\t\tself.restEndPoint = self.parent.baseRestUrl + self.parent.chartEndpoint;\n\t\tvar authInfo =self.parent.authInfo; // Login credentials\n\n\t\t//count related bindings\n\t\tself.openCount = ko.observable(0);  // No of open task\n\t\tself.progressCount = ko.observable(0);  // No of active task\n\t\tself.recoverableCount = ko.observable(0);  //No.of recoverable task\n\t\tself.suspendedCount = ko.observable(0);  // No.of suspended task\n\n\t\tself.processTrackingPage = self.parent.processTrackingPage;\n\t\tself.totalCountURL= self.processTrackingPage;\n\t\tself.progressCountURL = self.processTrackingPage+\"?status=OPEN&userRole=USER_ROLE_ADMIN\";    // No of active task\n\t\tself.recoverableCountURL = self.processTrackingPage +\"?status=FAULTED_RECOVERABLE&userRole=USER_ROLE_ADMIN\";   //No.of recoverable task\n\t\tself.suspendedCountURL = self.processTrackingPage+ \"?status=SUSPENDED&userRole=USER_ROLE_ADMIN\" ;  // No.of suspended task\n\n\t\t//chart convertors for percentage\n\t\t//var converterFactory = oj.Validation.converterFactory('number');\n\t\t//var converterOptions = {style: 'percent'};\n\n\t\t//chart related bindings\n\t\tself.barSeriesValue = ko.observableArray();  // List of count on x axis\n\t\tself.barGroupsValue = ko.observableArray(); // List of processes on Y axis\n\t\t//self.yConverter = converterFactory.createConverter(converterOptions);\n\n\t\t//  Method to refresh the content\n\t\tself.refresh = function(){\n\t\t\tself.loadData();\n\t\t\t//Refresh Process list too\n\t\t\tself.parent.loadProcessList();\n\t\t};\n\n\t\t// method to create the parameter list for the query\n\t\tself.paramList= function(){\n\t\t\tvar param = util.paramList(self);\n\t\t\treturn param;\n\t\t};\n\n\t\t// Primary function for load/reload process data to display\n\t\tself.loadData = function() {\n\t\t\tvar param =self.paramList();\n\n\t\t\t// Add overlays for loading\n\t\t\t$('#bpm-dsb-health-chart-overlay').addClass('bpm-dsb-load-overlay');\n\n\t\t\t//Load count data\n\t\t\tself.load(util.queries.PROCESS_HEALTH_BILLBOARD+param,self.populateHealthBillboardData);\n\t\t\t//Load chart data\n\t\t\tself.load(util.queries.PROCESS_HEALTH_TABLE+param,self.populateHealthTable);\n\t\t};\n\n\t\t// function for loading  data using AJAX\n\t\tself.load = function(query ,populate){\n\t\t\tvar url = self.restEndPoint + query;\n\t\t\t$.ajax\n\t\t\t({\n\t\t\t\ttype: \"GET\",\n\t\t\t\turl: url,\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\tif (authInfo) {\n\t\t\t\t\t\txhr.setRequestHeader('Authorization', authInfo);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\txhrFields: {\n\t\t\t\t\twithCredentials: true\n\t\t\t\t},\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tsuccess: function (json) {\n\t\t\t\t\tpopulate(json);\n\t\t\t\t},\n\t\t\t\terror: function ( jqXHR) {\n\t\t\t\t\tpopulate();\n\t\t\t\t\tutil.errorHandler(jqXHR);\n\t\t\t\t},\n\t\t\t\tfailure: function () {\n\t\t\t\t\tloggerUtil.log('failed in loading health data -' + query);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// method to populate Billboard data\n\t\tself.populateHealthBillboardData = function(data){\n\t\t\tif(data && data.rows){\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\tvar row = data.rows[0]; // all the data is in the first row\n\n\t\t\t\tself.openCount(row.values[c.TOTAL_OPEN]+0);\n\t\t\t\tself.progressCount(row.values[c.TOTAL_ACTIVE]+0);\n\t\t\t\tself.suspendedCount(row.values[c.TOTAL_SUSPENDED]+0);\n\t\t\t\tself.recoverableCount(row.values[c.TOTAL_FAULTED_RECOVERABLE]+0);\n\t\t\t}\n\t\t};\n\n\t\t// method to populate charts\n\t\t// Data columns - \"PROCESS_LABEL\" , \"PROCESS_INSTANCE_STATUS\",\"TOTALCOUNT\",\"PERCENTAGE\"\n\t\tself.populateHealthTable = function(data){\n\t\t\tvar barGroups = [];     //[\"Process 1\", \"Process 2\" ,\"Process 3\", \"Process 4\" ,\"Process 5\"];\n\t\t\tvar barSeriesNames =  [];  // Active, Recoverable ,Suspended\n\n\t\t\tvar barSeriesItems = [];\n\t\t\tvar barSeries = [];\n\n\t\t\tvar barsColorArray = {\n\t\t\t\t'ACTIVE' :'#bde2a0',\n\t\t\t\t'RECOVERABLE' : '#f0a7a8',\n\t\t\t\t'SUSPENDED' :'#bee5f6',\n\t\t\t\t'ABORT':'#003366'\n\t\t\t};\n\n\n\n\n\t\t\tvar stateMap ={}; //'ACTIVE' :0, 'RECOVERABLE' :1, 'SUSPENDED' :2, 'ABORT' :3 ....\n\t\t\tvar processes = {}; // Create a object list in which process object has its states listed\n\n\t\t\tif(data && data.rows) {\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\tfor(var i=0 ;i< data.rows.length; i++){\n\t\t\t\t\t// Get the values for each column in the response\n\t\t\t\t\tvar procName = data.rows[i].values[c.PROCESS_LABEL];\n\t\t\t\t\tvar state = data.rows[i].values[c.PROCESS_INSTANCE_STATUS];\n\t\t\t\t\tvar count = data.rows[i].values[c.TOTALCOUNT];\n\t\t\t\t\tvar percent = data.rows[i].values[c.PERCENTAGE];\n\t\t\t\t\tvar procId =data.rows[i].values[c.PROCESS_NAME];\n\t\t\t\t\t// create the list of distinct states being returned\n\t\t\t\t\tif(barSeriesNames.indexOf(state) === -1 ){\n\t\t\t\t\t\tstateMap[state] = barSeriesNames.length ;  //Add the state in stateMap and the index will be the current length of states added i.e first will be 0 , second 1 and so on\n\t\t\t\t\t\tbarSeriesNames.push(state);\n\t\t\t\t\t\tbarSeriesItems.push([]);\n\t\t\t\t\t}\n\t\t\t\t\t//create the list of distinct process being returned\n\t\t\t\t\tif(barGroups.map(function(e) { return e.id; }).indexOf(procId) === -1){\n\t\t\t\t\t\tbarGroups.push({\n\t\t\t\t\t\t\tname : procName,\n\t\t\t\t\t\t\tid : procId,\n\t\t\t\t\t\t\tshortDesc : self.bundle.health.chart.process_id+ \" : \" + procId\n\t\t\t\t\t\t});\n\t\t\t\t\t\tprocesses[procId] = {'title' : procName};\n\t\t\t\t\t}\n\t\t\t\t\t// add the current state and the count info the the process object\n\t\t\t\t\tprocesses[procId][state] = {'COUNT' : count, 'PERCENT' :percent};\n\t\t\t\t}\n\n\t\t\t\t// Now we have the complete process list with all state info\n\t\t\t\t// Iterate over all the process object\n\t\t\t\tfor (var proc in processes) {\n\t\t\t\t\tvar process = processes[proc];\n\t\t\t\t\t// Iterate over all the sattes for this particular process\n\t\t\t\t\tfor (var j=0; j<barSeriesNames.length ; j ++ ){\n\t\t\t\t\t\tvar state = barSeriesNames[j];\n\t\t\t\t\t\tvar stateName = oj.Translations.getTranslatedString(state);\n\t\t\t\t\t\tstateName = stateName ? stateName :state;\n\t\t\t\t\t\t// Check if this process has any instance in this particular state , add the values if it has else add 0\n\t\t\t\t\t\tif( process[state]  != undefined){\n\t\t\t\t\t\t\tbarSeriesItems[stateMap[state]].push({\n\t\t\t\t\t\t\t\ty :process[state]['PERCENT'],\n\t\t\t\t\t\t\t\tlabel:process[state]['COUNT'],\n\t\t\t\t\t\t\t\tlabelPosition:'auto',\n\t\t\t\t\t\t\t\tshortDesc: self.bundle.health.chart.state + \" : \" + stateName +\n\t\t\t\t\t\t\t\t\"&lt;br/&gt;\"+ self.bundle.health.chart.process_name + \" : \" + process.title +\n\t\t\t\t\t\t\t\t\"&lt;br/&gt;\"+ self.bundle.health.chart.process_id + \" : \" + proc +\n\t\t\t\t\t\t\t\t\"&lt;br/&gt;\" +\tself.bundle.health.chart.no_instances + \" : \" + process[state]['COUNT'] +\n\t\t\t\t\t\t\t\t\"&lt;br/&gt;\" +\tself.bundle.health.chart.percentage + \" : \" + process[state]['PERCENT'] + \"%\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tbarSeriesItems[stateMap[state]].push({y :0, label:0, labelPosition:'auto'});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create the chart  series using the above data\n\t\t\t\tfor(var i=0 ;i<barSeriesNames.length ; i++){\n\t\t\t\t\tvar state = barSeriesNames[i];\n\t\t\t\t\tstateName = stateName ? stateName :state;\n\t\t\t\t\tvar stateName = oj.Translations.getTranslatedString(state);\n\t\t\t\t\tbarSeries.push({name:  stateName, items: barSeriesItems[stateMap[state]] ,color : barsColorArray[state] , id :state});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove overlays for loading\n\t\t\t$('#bpm-dsb-health-chart-overlay').removeClass('bpm-dsb-load-overlay');\n\n\t\t\t// Populate the chart\n\t\t\tself.barSeriesValue(barSeries);\n\t\t\tself.barGroupsValue(barGroups);\n\t\t};\n\n\t\t// ------ Loading Mechanism -------------------\n\t\tself.parent.selectedTab.subscribe(function(tab) {\n\t\t\tif (tab === 0){\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\t\t// ------- Code for Filtering and offCanvas --------------------------\n\t\tself.parent.filterApplied.subscribe(function() {\n\t\t\tif (self.parent.selectedTab() === 0) {\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\n\t\t//--------------- Drill down ----------------------\n\n\t\tself.totalDrilldown = function (){\n\t\t\tutil.drilldown(self.totalCountURL);\n\t\t};\n\n\t\tself.activeDrilldown = function (){\n\t\t\tutil.drilldown(self.progressCountURL);\n\t\t};\n\n\t\tself.recoverableDrilldown = function (){\n\t\t\tutil.drilldown(self.recoverableCountURL);\n\t\t};\n\n\t\tself.suspendedDrilldown = function (){\n\t\t\tutil.drilldown(self.suspendedCountURL);\n\t\t}\n\n\t\tthis.handleAttached = function(info)\n\t\t{\n\t\t\t// if the param is passed then load the content immediately\n\t\t\tif (params.loadImmediate){\n\t\t\t\tself.loadData();\n\t\t\t}\n\n\n\t\t\t//The DOM is already inserted\n\t\t\t$(\"#bpm-dsb-health-chart\").ojChart({\n\t\t\t\t\"drill\": function(event, ui) {\n\t\t\t\t\tvar processName = '';\n\t\t\t\t\tvar status ='';\n\t\t\t\t\tif(ui['series'])\n\t\t\t\t\t\tstatus = ui['series'];\n\t\t\t\t\tif(ui['group'])\n\t\t\t\t\t\tprocessName = ui['group'];\n\n\t\t\t\t\tloggerUtil.log(processName + \";\" + status);\n\n\t\t\t\t\tif(processName === ''){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (status === ''){\n\t\t\t\t\t\tutil.drilldown(self.processTrackingPage+ '?processName=' +processName);\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 'ACTIVE'){\n\t\t\t\t\t\tutil.drilldown(self.processTrackingPage+ '?processName=' +processName+ '&status=OPEN&userRole=USER_ROLE_ADMIN');\n\t\t\t\t\t}\n\t\t\t\t\telse if(status === 'RECOVERABLE'){\n\t\t\t\t\t\tutil.drilldown(self.processTrackingPage+ '?processName=' +processName + '&status=FAULTED_RECOVERABLE&userRole=USER_ROLE_ADMIN');\n\t\t\t\t\t}\n\t\t\t\t\telse if(status === 'SUSPENDED'){\n\t\t\t\t\t\tutil.drilldown(self.processTrackingPage+ '?processName=' +processName + '&status=SUSPENDED&userRole=USER_ROLE_ADMIN');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\treturn healthDashboardContainerModel;\n});\n\n",
    "\ndefine('text!pcs/charts/dashboard/view/dashboards/healthDashboard.html',[],function () { return '<div class=\"oj-offcanvas-outer-wrapper bpm-dsb-panel\">\\n\\n\\t<div data-bind=\"template: { name: \\'bpm-dsb-icon-bar-template\\', data: $data }\"></div>\\n\\n\\t<h1 data-bind=\"text: bundle.health.title\"></h1>\\n\\n\\t<div  class=\"oj-sm-12 bpm-dsb-center-align\" >\\n\\t\\t<div  class=\"bpm-dsb-center-align\" >\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-dark-grey-bg right-width-zero\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\">\\n\\t\\t\\t\\t\\t<a data-bind=\"click : totalDrilldown\" class=\"bpm-dsb-dark-black-numb\" style=\" text-decoration: none;cursor: pointer;\"><span data-bind=\"text:openCount\" ></span></a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.health.billboard.total_open  , attr : { title : bundle.health.billboard.total_open }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-green-bg right-width-zero\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\"  >\\n\\t\\t\\t\\t\\t<a data-bind=\"click : activeDrilldown\" class=\"bpm-dsb-dark-green-numb\" style=\" text-decoration: none;cursor: pointer;\"><span data-bind=\"text:progressCount\" ></span></a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.health.billboard.in_progress  , attr : { title : bundle.health.billboard.in_progress }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-red-bg right-width-zero\" >\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\">\\n\\t\\t\\t\\t\\t<a  data-bind=\"click : recoverableDrilldown\" class=\"bpm-dsb-dark-red-numb\" style=\" text-decoration: none;cursor: pointer;\"><span data-bind=\"text:recoverableCount\" ></span></a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.health.billboard.recoverable  , attr : { title : bundle.health.billboard.recoverable }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div style=\"background-color: #bee5f6\"  class=\"bpm-dsb-billb-box\" >\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\">\\n\\t\\t\\t\\t\\t<a  data-bind=\"click : suspendedDrilldown\" style=\"color:#101356;text-decoration: none;cursor: pointer;\"><span data-bind=\"text:suspendedCount\" ></span></a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.health.billboard.suspended  , attr : { title : bundle.health.billboard.suspended }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\n\\t<div class=\"oj-flex bpm-dsb-chart-container\" id=\"bpm-dsb-health-chart-container\">\\n\\t\\t<div id=\"bpm-dsb-health-chart\" class=\"oj-sm-12 oj-md-12 oj-lg-12 oj-xl-12 oj-col bpm-dsb-chart-height\" data-bind=\"ojComponent: {\\n            component: \\'ojChart\\',\\n            type: \\'bar\\',\\n            orientation: \\'horizontal\\',\\n            stack: \\'on\\',\\n            series: barSeriesValue,\\n            groups: barGroupsValue,\\n            zoomAndScroll: \\'live\\',\\n            animationOnDisplay: \\'auto\\',\\n            animationOnDataChange: \\'auto\\',\\n            hoverBehavior: \\'dim\\',\\n            drilling:\\'on\\',\\n            selectionMode: \\'single\\',\\n            hideAndShowBehavior: \\'withRescale\\'\\n        }\">\\n\\t\\t</div>\\n\\t\\t<div id=\"bpm-dsb-health-chart-overlay\"/>\\n\\t</div>\\n\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 6/12/2015.\n */\n\ndefine('pcs/charts/dashboard/viewModel/dashboards/openDashboard',['ojs/ojcore' ,'knockout','pcs/charts/dashboard/util', 'jquery', 'ojs/ojtable', 'ojs/ojbutton', 'ojL10n!pcs/resources/nls/dashboardResource'\n], function(oj, ko, util, $) {\n\t/**\n\t * The view model for the Open Process Summary Dashboard\n\t */\n\tfunction openDashboardContainerModel(params) {\n\t\tvar self = this;\n\t\tvar loggerUtil =  require('pcs/util/loggerUtil');\n\n\t\t//Set the resourcebundle\n\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\n\t\tthis.parent = params.parent;\t// dashboardContainer\n\t\tthis.baseRestUrl = this.parent.baseRestUrl;\n\t\tthis.restEndPoint = this.parent.baseRestUrl + this.parent.chartEndpoint;\n\t\tthis.drilldownUrl = this.parent.processTrackingPage + '?processName=';\n\t\tvar authInfo =this.parent.authInfo; // Login credentials\n\n\t\tself.processes = ko.observableArray([]);\n\t\tself.datasource = new oj.ArrayTableDataSource(self.processes,{idAttribute: \"index\"});\n\n\t\tself.totals = ko.observable([0,0,0,0,0,0]);\n\n\t\t// handles rendering of two line column header, since ojTable does not seem to do this natively\n\t\tself.renderHeader = function(context) {\n\t\t\tvar column = context.columnIndex;\n\t\t\tif (column == 3)\n\t\t\t\tvar lines = self.bundle.open.table.due_this_week.split(\"\\n\");\n\t\t\telse if (column == 7)\n\t\t\t\tvar lines = self.bundle.open.table.opened_today.split(\"\\n\");\n\t\t\telse\n\t\t\t\tvar lines = self.bundle.open.table.closed_today.split(\"\\n\");\n\t\t\tcontext.columnHeaderSortableIconRenderer(null, function(headerContentDiv)\n\t\t\t{\n\t\t\t\tfor (var i=0; i<lines.length; i++) {\n\t\t\t\t\tvar headerTextDiv = $(document.createElement('div'));\n\t\t\t\t\theaderTextDiv.text(lines[i]);\n\t\t\t\t\theaderContentDiv.append(headerTextDiv);\n\t\t\t\t}\n\t\t\t\theaderContentDiv.parent().attr(\"style\", \"height:auto; text-align: center;\");\n\t\t\t});\n\t\t};\n\n\t\tself.columns = [ {headerText: self.bundle.open.table.application, field: 'application', style: 'width: 15%'},\n\t\t\t{style: 'width: 15%',headerTemplate: 'bpm_charts_open_proc_header', template:'bpm_charts_open_proc_proc_name'},\n\t\t\t{headerText: self.bundle.open.table.on_track,field: 'ontrack', style: 'width: 10%', className: 'bpm-dsb-open-tbl-ontrack-column bpm-dsb-light-green-bg'},\n\t\t\t{headerRenderer: self.renderHeader, field: 'due', style: 'width: 10%', className: 'bpm-dsb-open-tbl-due-column bpm-dsb-light-orange-bg'},\n\t\t\t{headerText: self.bundle.open.table.overdue, field: 'overdue', style: 'width: 10%', className: 'bpm-dsb-open-tbl-overdue-column bpm-dsb-light-red-bg'},\n\t\t\t{headerText: self.bundle.open.table.recoverable, field: 'recoverable', style: 'width: 10%', className: 'bpm-dsb-open-tbl-column'},\n\t\t\t{headerText: self.bundle.open.table.suspended, field: 'suspended', style: 'width: 10%', className: 'bpm-dsb-open-tbl-column'},\n\t\t\t{headerRenderer: self.renderHeader, field: 'opened', style: 'width: 10%', className: 'bpm-dsb-open-tbl-today-column bpm-dsb-light-grey-bg'},\n\t\t\t{headerRenderer: self.renderHeader, field: 'closed', style: 'width: 10%', className: 'bpm-dsb-open-tbl-today-column bpm-dsb-light-grey-bg'}\n\t\t];\n\n\t\t//  Method to refresh the content\n\t\tself.refresh = function(){\n\t\t\tself.loadData();\n\t\t\t//Refresh Process list too\n\t\t\tself.parent.loadProcessList();\n\t\t};\n\n\t\t// method to create the parameter list for the query\n\t\tself.paramList= function(){\n\t\t\tvar param = util.paramList(self);\n\t\t\treturn param;\n\t\t};\n\n\t\t// load/reload process data to display\n\t\tthis.loadData = function() {\n\t\t\tvar param =self.paramList();\n\t\t\t//reset the current row to show non selected\n\t\t\t$(\"#openProcesses\").ojTable(\"option\", \"currentRow\", null);\n\t\t\t// Add overlays for loading\n\t\t\t$('#bpm-dsb-open-table-overlay').addClass('bpm-dsb-load-overlay');\n\n\t\t\tself.load(\"OPEN_PROCESS_SUMMARY_BILLBOARD\"+param, self.populateOpenBillboard);\n\t\t\tself.load(\"OPEN_PROCESS_SUMMARY_TABLE\"+param, self.populateOpenTable);\n\t\t}\n\n\t\tself.load = function(query, populate){\n\t\t\tvar url = self.restEndPoint + query;\n\t\t\t$.ajax\n\t\t\t({\n\t\t\t\ttype: \"GET\",\n\t\t\t\turl: url,\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\tif (authInfo) {\n\t\t\t\t\t\txhr.setRequestHeader('Authorization', authInfo);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\txhrFields: {\n\t\t\t\t\twithCredentials: true\n\t\t\t\t},\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tsuccess: function (json) {\n\t\t\t\t\tpopulate(json);\n\t\t\t\t},\n\t\t\t\terror: function ( jqXHR) {\n\t\t\t\t\tpopulate();\n\t\t\t\t\tutil.errorHandler(jqXHR);\n\t\t\t\t},\n\t\t\t\tfailure: function () {\n\t\t\t\t\tloggerUtil.log('failed in ' + query);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tself.populateOpenBillboard = function(data){\n\t\t\tif(data && data.rows){\n\t\t\t\tvar totals = [0,0,0,0,0,0];\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\tvar row = data.rows[0];\n\t\t\t\ttotals[0] = row.values[c.TOTAL_OPEN]+0;\n\t\t\t\ttotals[1] = row.values[c.TOTAL_OPEN_NOT_DUE_SOON]+0;\t// ??\n\t\t\t\ttotals[2] = row.values[c.TOTAL_DUE_SOON]+0;\n\t\t\t\ttotals[3] = row.values[c.TOTAL_OVERDUE]+0;\n\t\t\t\ttotals[4] = row.values[c.TOTAL_OPENED_TODAY]+0;\n\t\t\t\ttotals[5] = row.values[c.TOTAL_CLOSED_TODAY]+0;\n\t\t\t\tself.totals(totals);\n\t\t\t}\n\t\t}\n\n\t\tself.populateOpenTable = function(data){\n\t\t\tvar p_array = [];\n\t\t\tif (data && data.rows) {\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\t$.each(data.rows,function(index,row) {\n\t\t\t\t\tvar p = {};\n\t\t\t\t\tp.index = index;\t// for id Attribute needed by ojTable for some reason\n\t\t\t\t\tp.application = row.values[c.COMPOSITE_NAME];\n\t\t\t\t\tp.process = row.values[c.PROCESS_LABEL];\n\t\t\t\t\tp.ontrack = row.values[c.TOTAL_OPEN_NOT_DUE_SOON];\n\t\t\t\t\tp.due = row.values[c.TOTAL_DUE_SOON];\n\t\t\t\t\tp.overdue = row.values[c.TOTAL_OVERDUE];\n\t\t\t\t\tp.recoverable = row.values[c.TOTAL_FAULTED_RECOVERABLE];\n\t\t\t\t\tp.suspended = row.values[c.TOTAL_SUSPENDED];\n\t\t\t\t\tp.opened = row.values[c.TOTAL_OPENED_TODAY];\n\t\t\t\t\tp.closed = row.values[c.TOTAL_CLOSED_TODAY];\n\t\t\t\t\tp.processId = row.values[c.PROCESS_NAME];\n\t\t\t\t\tp_array.push(p);\n\t\t\t\t});\n\t\t\t}\n\t\t\t// remove overlays for loading\n\t\t\t$('#bpm-dsb-open-table-overlay').removeClass('bpm-dsb-load-overlay');\n\n\t\t\tself.processes(p_array);\n\t\t};\n\n\t\t// ------ Loading Mechanism -------------------\n\t\tself.parent.selectedTab.subscribe(function(tab) {\n\t\t\tif (tab === 1){\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\t\t// ------- Code for Filtering and offCanvas --------------------------\n\t\tself.parent.filterApplied.subscribe(function() {\n\t\t\tif (self.parent.selectedTab() === 1) {\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\t\tthis.processDrillDown = function(data,event) {\n\t\t\t//ignore keypress other than enter\n\t\t\tif (event.type === 'keypress' && event.keyCode != 13) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tutil.drilldown(self.drilldownUrl+data.processId);\n\t\t};\n\n\t\tthis.handleAttached = function(info) {\n\t\t\t//self.loadData();\n\t\t}\n\t}\n\n\treturn openDashboardContainerModel;\n});\n\n",
    "\ndefine('text!pcs/charts/dashboard/view/dashboards/openDashboard.html',[],function () { return '<div class=\"oj-offcanvas-outer-wrapper bpm-dsb-panel\">\\n\\n\\t<div data-bind=\"template: { name: \\'bpm-dsb-icon-bar-template\\', data: $data }\"></div>\\n\\n\\t<h1 data-bind=\"text: bundle.open.title\"></h1>\\n\\n\\n\\t<div  class=\"oj-sm-12 bpm-dsb-center-align\">\\n\\t\\t<div class=\"bpm-dsb-center-align\">\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-dark-grey-bg\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\" data-bind=\"text: totals()[0]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.open.billboard.total_open  , attr : { title : bundle.open.billboard.total_open }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-green-bg open-on-track\" >\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number bpm-dsb-dark-green-numb\" data-bind=\"text: totals()[1]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.open.billboard.on_track  , attr : { title : bundle.open.billboard.on_track }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-orange-bg right-width-zero\" >\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number bpm-dsb-dark-orange-numb\" data-bind=\"text: totals()[2]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.open.billboard.due_this_week  , attr : { title : bundle.open.billboard.due_this_week }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-red-bg\" >\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number bpm-dsb-dark-red-numb\" data-bind=\"text: totals()[3]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.open.billboard.overdue  , attr : { title : bundle.open.billboard.overdue }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-grey-bg open-opened-today\" >\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\" data-bind=\"text: totals()[4]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.open.billboard.opened_today  , attr : { title : bundle.open.billboard.opened_today }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-grey-bg\" >\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\"  data-bind=\"text: totals()[5]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.open.billboard.closed_today  , attr : { title : bundle.open.billboard.closed_today }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\"bpm-dsb-chart-container oj-flex\">\\n\\t\\t<table id=\"openProcesses\" summary=\"Open Processes\" aria-label=\"Open Processes Table\"\\n\\t\\t\\t   data-bind=\"ojComponent: {component: \\'ojTable\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t data: datasource,\\n\\t\\t\\t\\t\\t\\t\\t\\t columns: columns,\\n\\t\\t\\t\\t\\t\\t\\t\\t rootAttributes: {\\'style\\': \\'width: 100%; height: 100%; font-size: 16px; \\'}}\">\\n\\t\\t</table>\\n\\t\\t<div id=\"bpm-dsb-open-table-overlay\"></div>\\n\\t</div>\\n\\n\\t<!-- This template is used in the process name Column of the above table -->\\n\\t<script type=\"text/html\" id=\"bpm_charts_open_proc_header\">\\n\\t\\t<th style=\"padding-left: 5px; padding-right: 5px;\">\\n\\t\\t\\t<span data-bind=\"text:$parent.bundle.open.table.process\"></span>\\n\\t\\t</th>\\n\\t</script>\\n\\t<script type=\"text/html\" id=\"bpm_charts_open_proc_proc_name\">\\n\\t\\t<td>\\n\\t\\t\\t<a tabindex=\"0\" data-bind=\"click : $parent.processDrillDown,text: process , attr: { title: processId },\\n\\t\\t\\t\\t\\t\\t\\t\\tevent: {keypress: $parent.processDrillDown }\" style=\"cursor:pointer;\"></a>\\n\\t\\t</td>\\n\\t</script>\\n\\n</div>\\n\\n';});\n\n",
    "/**\n * Created by nisabhar on 6/12/2015.\n */\n\ndefine('pcs/charts/dashboard/viewModel/dashboards/workloadDashboard',['ojs/ojcore' ,'knockout','pcs/charts/dashboard/util','ojs/ojtreemap' ,'ojs/ojlegend', 'ojL10n!pcs/resources/nls/dashboardResource'\n], function(oj, ko,util) {\n\t/**\n\t * The view model for the main content view template\n\t */\n\tfunction workloadDashboardContainerModel(params) {\n\t\tvar self = this;\n\t\tvar loggerUtil =  require('pcs/util/loggerUtil');\n\n\t\t//Set the resourcebundle\n\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\n\t\tthis.parent = params.parent;\t// hold the instance of dashboardContainer\n\n\t\t// Rest related parameters\n\t\tself.baseRestUrl = this.parent.baseRestUrl;\n\t\tself.restEndPoint = this.parent.baseRestUrl + this.parent.chartEndpoint;\n\t\tself.authInfo =this.parent.authInfo; // Login credentials\n\n\t\t//---------------------- data Type----------------------------------------\n\t\tself.dataType = ko.observable(\"top10_by_task\");\n\n\t\tself.dataTypeRadios = [\n\t\t\t{id: 'top10_by_task', label: self.bundle.workload.type.top10_by_task},\n\t\t\t{id: 'top10_by_assignee', label: self.bundle.workload.type.top10_by_assignee},\n\t\t\t{id: 'bottleneck_by_process', label: self.bundle.workload.type.bottleneck_by_process},\n\t\t\t{id: 'bottleneck_by_task', label: self.bundle.workload.type.bottleneck_by_task},\n\t\t\t{id: 'bottleneck_by_assignee', label: self.bundle.workload.type.bottleneck_by_assignee}\n\t\t];\n\n\t\tself.handleDataTypeChange = function(event, ui) {\n\t\t\t//set the tab info in parent which is used by filter panel\n\t\t\tself.parent.workloadSubTab(self.dataType());\n\n\t\t\t//Load chart data\n\t\t\tself.loadChartData();\n\t\t};\n\n\n\t\t//---------Count related bindings-------------------------\n\t\tself.openCount = ko.observable(0);  // No of open task\n\t\tself.onTrackCount = ko.observable(0);  // No of active task\n\t\tself.dueCount = ko.observable(0);  //No.of recoverable task\n\t\tself.overdueCount = ko.observable(0);  // No.of suspended task\n\n\n\t\t//--------Top 10 Chart data bindings--------------------------------------\n\t\tself.barSeriesValueOnTrack = ko.observableArray();\n\t\tself.barGroupsValueOnTrack = ko.observableArray();\n\n\t\tself.barSeriesValueDueWeek = ko.observableArray();\n\t\tself.barGroupsValueDueWeek = ko.observableArray();\n\n\t\tself.barSeriesValueOverdue = ko.observableArray();\n\t\tself.barGroupsValueOverdue = ko.observableArray();\n\n\t\tvar chartDatatype = {\n\t\t\tON_TRACK :1,\n\t\t\tDUE_SOON :2,\n\t\t\tOVER_DUE :3\n\t\t};\n\n\n\t\t//--------Bottleneck Treemap data bindings--------------------------------------\n\t\tvar handler = new oj.ColorAttributeGroupHandler();\n\t\t//handler.addMatchRule('0','#990000');\n\t\t//handler.addMatchRule('1', '#6E8992');\n\t\t//handler.addMatchRule('2', '#7B9AA4');\n\t\t//handler.addMatchRule('3', '#89ABB6');\n\t\t//handler.addMatchRule('4', '#97BCC8');\n\t\t//handler.addMatchRule('5','#A5CDDB');\n\t\t//handler.addMatchRule('6','#B2DEED');\n\t\t//handler.addMatchRule('7','#C0EFFF');\n\t\t//handler.addMatchRule('8','#D0FFFF');\n\t\thandler.addMatchRule('on_track','#bde2a0');\n\t\thandler.addMatchRule('due', '#FFF2CC');\n\t\thandler.addMatchRule('overdue', '#f0a7a8');\n\n\n\t\t// Empty , ON_TRACK , DUE_SOON , OVER_DUE\n\t\tvar top10ColorPalette =[\n\t\t\t[\"\",\"\",\"\"],\n\t\t\t[\"#38761d\",\"#FFF2CC\",\"#f0a7a8\"],\n\t\t\t[\"#bde2a0\",\"#bf9000\",\"#f0a7a8\"],\n\t\t\t[\"#bde2a0\",\"#FFF2CC\",\"#990000\"]\n\t\t];\n\n\t\tvar treeMapDatatype = {\n\t\t\tPROCESS :1,\n\t\t\tTASK :2,\n\t\t\tASSIGNEE :3\n\t\t};\n\n\t\t//var legendSections = [{items : [\n\t\t//\t{text : oj.Translations.getTranslatedString('workload.legend.lt_0'),\n\t\t//\t\tcolor : handler.getValue('0')},\n\t\t//\t{text :  oj.Translations.getTranslatedString('workload.legend.0_to_1'),\n\t\t//\t\tcolor : handler.getValue('1')},\n\t\t//\t{text : oj.Translations.getTranslatedString('workload.legend.1_to_2'),\n\t\t//\t\tcolor : handler.getValue('2')},\n\t\t//\t{text : oj.Translations.getTranslatedString('workload.legend.2_to_3'),\n\t\t//\t\tcolor : handler.getValue('3')},\n\t\t//\t{text : oj.Translations.getTranslatedString('workload.legend.3_to_4'),\n\t\t//\t\tcolor : handler.getValue('4')},\n\t\t//\t{text : oj.Translations.getTranslatedString('workload.legend.4_to_5'),\n\t\t//\t\tcolor : handler.getValue('5')},\n\t\t//\t{text : oj.Translations.getTranslatedString('workload.legend.5_to_6'),\n\t\t//\t\tcolor : handler.getValue('6')},\n\t\t//\t{text : oj.Translations.getTranslatedString('workload.legend.6_to_7'),\n\t\t//\t\tcolor : handler.getValue('7')},\n\t\t//\t{text :oj.Translations.getTranslatedString('workload.legend.gt_7'),\n\t\t//\t\tcolor : handler.getValue('8')}\n\t\t//\n\t\t//]}];\n\n\t\tself.nodeValues = ko.observableArray([]);\n\t\t//self.legendSections =ko.observableArray(legendSections);\n\n\n\t\t// --------------- Methods -----------\n\t\tself.refresh = function(){\n\t\t\tself.loadData();\n\t\t\t//Refresh Process list too\n\t\t\tself.parent.loadProcessList();\n\t\t};\n\n\t\t// method to create the parameter list for the query\n\t\tself.paramList= function(){\n\t\t\treturn util.paramList(self);\n\t\t};\n\n\t\t//------------------ Load Methods -------------------\n\n\t\t// Main method which loads all the data for this page\n\t\tself.loadData = function() {\n\t\t\t//Load count data\n\t\t\tself.load(util.queries.WORKLOAD_ANALYSIS_BILLBOARD +self.paramList(),self.populateWorkloadBillboardData );\n\n\t\t\t//Load chart data\n\t\t\tself.loadChartData();\n\t\t};\n\n\t\tself.loadChartData = function(){\n\t\t\tif(self.dataType() == 'bottleneck_by_process' || self.dataType() == 'bottleneck_by_task' || self.dataType() == 'bottleneck_by_assignee' ){\n\t\t\t\t$(\"#bpm-dsb-wkld-treemap-container\").show();\n\t\t\t\t$(\"#bpm-dsb-wkld-chart-container\").hide();\n\t\t\t\tself.loadBottleneckData();\n\t\t\t}\n\t\t\telse{\n\t\t\t\t$(\"#bpm-dsb-wkld-treemap-container\").hide();\n\t\t\t\t$(\"#bpm-dsb-wkld-chart-container\").show();\n\t\t\t\tself.loadTop10Data();\n\t\t\t}\n\t\t};\n\n\t\t// Primary function for loading top10 data to display\n\t\tself.loadTop10Data = function() {\n\t\t\tvar param =self.paramList();\n\n\t\t\t// Add overlays for loading\n\t\t\t$('#bpm-dsb-wrkld-chart-ontrack-overlay').addClass('bpm-dsb-load-overlay');\n\t\t\t$('#bpm-dsb-wrkld-chart-due-overlay').addClass('bpm-dsb-load-overlay');\n\t\t\t$('#bpm-dsb-wrkld-chart-overdue-overlay').addClass('bpm-dsb-load-overlay');\n\n\t\t\t// Queries for data by Assignee\n\t\t\tif(self.dataType() === 'top10_by_assignee'){\n\t\t\t\tself.load(util.queries.OPEN_ASSIGNEES_ON_TRACK_ANALYSIS_CHART +param ,self.populateTop10ChartData, chartDatatype.ON_TRACK);\n\t\t\t\tself.load(util.queries.OPEN_ASSIGNEES_OVER_DUE_ANALYSIS_CHART +param ,self.populateTop10ChartData, chartDatatype.OVER_DUE);\n\t\t\t\tself.load(util.queries.OPEN_ASSIGNEES_DUE_SOON_ANALYSIS_CHART +param ,self.populateTop10ChartData, chartDatatype.DUE_SOON);\n\t\t\t}\n\t\t\t// Queries for data by TAsks\n\t\t\telse if(self.dataType() === 'top10_by_task'){\n\t\t\t\tself.load(util.queries.OPEN_TASK_ON_TRACK_ANALYSIS_CHART +param ,self.populateTop10ChartData, chartDatatype.ON_TRACK);\n\t\t\t\tself.load(util.queries.OPEN_TASK_OVER_DUE_ANALYSIS_CHART +param ,self.populateTop10ChartData, chartDatatype.OVER_DUE);\n\t\t\t\tself.load(util.queries.OPEN_TASK_DUE_SOON_ANALYSIS_CHART +param ,self.populateTop10ChartData, chartDatatype.DUE_SOON);\n\t\t\t}\n\t\t};\n\n\t\t// Primary function for loading bottleneck data to display\n\t\tself.loadBottleneckData = function() {\n\t\t\tvar param =self.paramList();\n\n\t\t\t// Add overlays for loading\n\t\t\t$('#bpm-dsb-wkld-bottleneck-treemap-overlay').addClass('bpm-dsb-load-overlay');\n\n\t\t\tif(self.dataType() === 'bottleneck_by_process') {\n\t\t\t\tself.load(util.queries.DUE_DATE_ANALYSIS_BY_OPEN_PROCESS_TREEMAP + param,self.populateBottleneckData ,treeMapDatatype.PROCESS );\n\t\t\t}\n\t\t\telse if(self.dataType() === 'bottleneck_by_task') {\n\t\t\t\tself.load(util.queries.DUE_DATE_ANALYSIS_BY_OPEN_TASKS_TREEMAP + param, self.populateBottleneckData, treeMapDatatype.TASK);\n\t\t\t}\n\t\t\telse if(self.dataType() === 'bottleneck_by_assignee') {\n\t\t\t\tself.load(util.queries.DUE_DATE_ANALYSIS_BY_ASSIGNEE_TREEMAP + param, self.populateBottleneckData, treeMapDatatype.ASSIGNEE);\n\t\t\t}\n\n\t\t\t// populate the legend section\n\t\t\t//self.legendSections(legendSections);\n\t\t};\n\n\n\t\t// Method to do the Rest call, takes a callback function and its parameter which is called when Rest call is  a success\n\t\tself.load= function(query, populate,parameter){\n\t\t\tvar url = self.restEndPoint + query;\n\t\t\t$.ajax\n\t\t\t({\n\t\t\t\ttype: \"GET\",\n\t\t\t\turl: url,\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\tif (self.authInfo) {\n\t\t\t\t\t\txhr.setRequestHeader('Authorization', self.authInfo);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\txhrFields: {\n\t\t\t\t\twithCredentials: true\n\t\t\t\t},\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tsuccess: function (json) {\n\t\t\t\t\tpopulate(json,parameter);\n\t\t\t\t},\n\t\t\t\terror: function ( jqXHR) {\n\t\t\t\t\tpopulate(null,parameter);\n\t\t\t\t\tutil.errorHandler(jqXHR);\n\t\t\t\t},\n\t\t\t\tfailure: function () {\n\t\t\t\t\tloggerUtil.log('failed in load -' + query);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\n\t\t//------------------ Pouplate Methods -------------------\n\t\tself.populateWorkloadBillboardData = function(data){\n\t\t\tif(data && data.rows){\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\tvar row = data.rows[0]; // all the data is in the first row\n\n\t\t\t\tself.openCount(row.values[c.TOTAL_OPEN]+0);\n\t\t\t\tself.onTrackCount(row.values[c.TOTAL_OPEN_AND_NOT_DUE_SOON]+0);\n\t\t\t\tself.dueCount(row.values[c.TOTAL_DUE_SOON]+0);\n\t\t\t\tself.overdueCount(row.values[c.TOTAL_OVERDUE]+0);\n\t\t\t}\n\n\t\t};\n\n\t\t// Data columns - \"TASK_LABEL\" , \"TOTAL_ON_TRACK\",\"TOTAL_DUE_SOON\",\"TOTAL_OVERDUE\"\n\t\tself.populateTop10ChartData = function(data,type){\n\t\t\tvar barGroups = [];     //[\"Process 1\",\"Process 2\",\"Process 3\",\"Process 4\",\"Process 5\"];\n\t\t\tvar typeSize = 3;  // On track/ Overdue / Due Soon\n\t\t\tvar barSeriesItems = [];  //{y :1, label :1}\n\t\t\tvar barSeries = [];  // [ {items: [{y :1, label :1}, {y :4, label :4},{y :2, label :2},{y :7, label :7},{y :2, label :2}]}];\n\t\t\tvar barSeriesNames =  [ self.bundle.workload.billboard.on_track,self.bundle.workload.billboard.due_soon,self.bundle.workload.billboard.overdue];\n\t\t\tvar color = top10ColorPalette[type];\n\n\t\t\tif(data && data.rows){\n\n\t\t\t\t// populae the 3 states items\n\t\t\t\tfor(var i=0 ;i<typeSize ; i++){\n\t\t\t\t\tbarSeriesItems.push([]);\n\t\t\t\t}\n\t\t\t\t// Get the count for each process instance in each state\n\t\t\t\t// Outer loop iterates of each row of data\n\t\t\t\t// Iner loop iterates for each state for a particluar row\n\t\t\t\tfor(var i=0 ;i< data.rows.length ; i++){\n\t\t\t\t\tbarGroups.push(data.rows[i].values[0]);\n\t\t\t\t\tfor(var j=0 ;j<typeSize ; j++) {\n\t\t\t\t\t\tvar val = data.rows[i].values[j+1];\n\t\t\t\t\t\tbarSeriesItems[j].push({y: val, label: \"\" + val,\n\t\t\t\t\t\t\tshortDesc: \"&lt;b&gt;\" + val + \" \" + barSeriesNames[j]  , labelPosition:'auto'});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Create the X-axis by iterating over different state\n\t\t\t\tfor(var i=0 ;i<typeSize ; i++){\n\n\t\t\t\t\t// make the major state visible and other 2 satte hidden by default . USer can show them\n\t\t\t\t\t// By selecting it from the legend\n\t\t\t\t\t// For ON_Track show 1sst , For Due Soon Show 2nd and for overdue show 3rd\n\t\t\t\t\tvar visibility = \"hidden\";\n\t\t\t\t\tif(i+1 == type){\n\t\t\t\t\t\tvisibility = \"visible\";\n\t\t\t\t\t}\n\t\t\t\t\tbarSeries.push({name: barSeriesNames[i], items: barSeriesItems[i], color :color[i],  visibility: visibility});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(type === chartDatatype.ON_TRACK ){\n\t\t\t\t// remove overlays for loading\n\t\t\t\t$('#bpm-dsb-wrkld-chart-ontrack-overlay').removeClass('bpm-dsb-load-overlay');\n\n\t\t\t\t//Workaround for JET bug , Recreate the knockout binding\n\t\t\t\tvar chart = document.getElementById(\"bpm-dsb-wrkld-chart-ontrack\");\n\t\t\t\tko.cleanNode(chart);\n\t\t\t\tko.applyBindings(self,chart);\n\n\t\t\t\tself.barSeriesValueOnTrack(barSeries);\n\t\t\t\tself.barGroupsValueOnTrack(barGroups);\n\t\t\t}\n\t\t\telse if(type === chartDatatype.DUE_SOON ){\n\t\t\t\t// remove overlays for loading\n\t\t\t\t$('#bpm-dsb-wrkld-chart-due-overlay').removeClass('bpm-dsb-load-overlay');\n\n\t\t\t\t//Workaround for JET bug , Recreate the knockout binding\n\t\t\t\tvar chart = document.getElementById(\"bpm-dsb-wrkld-chart-due\");\n\t\t\t\tko.cleanNode(chart);\n\t\t\t\tko.applyBindings(self,chart);\n\n\t\t\t\tself.barSeriesValueDueWeek(barSeries);\n\t\t\t\tself.barGroupsValueDueWeek(barGroups);\n\t\t\t}\n\t\t\telse if(type === chartDatatype.OVER_DUE ){\n\t\t\t\t// remove overlays for loading\n\t\t\t\t$('#bpm-dsb-wrkld-chart-overdue-overlay').removeClass('bpm-dsb-load-overlay');\n\n\t\t\t\t//Workaround for JET bug , Recreate the knockout binding\n\t\t\t\tvar chart = document.getElementById(\"bpm-dsb-wrkld-chart-overdue\");\n\t\t\t\tko.cleanNode(chart);\n\t\t\t\tko.applyBindings(self,chart);\n\n\t\t\t\tself.barSeriesValueOverdue(barSeries);\n\t\t\t\tself.barGroupsValueOverdue(barGroups);\n\t\t\t}\n\t\t};\n\n\t\t//By process --- {\"POCESS_LABEL\",\"TITLE\",\"ASSIGNEE_DISP_NAME\",\"AVG_DAYS_UNTIL_DUE_DATE\",\"TOTALCOUNT\",\"BAM_GROUPING_1\",\"BAM_GROUPING_2\",\"BAM_GROUPING_3\",\n\t\t//By Assignee ----\"ASSIGNEE_DISP_NAME\",\"TITLE\",\"AVG_DAYS_UNTIL_DUE_DATE\",\"TOTALCOUNT\",\"BAM_GROUPING_1\",\"BAM_GROUPING_2\",\n\t\t//By Taskk --- \"TITLE\",\"ASSIGNEE_DISP_NAME\",\"AVG_DAYS_UNTIL_DUE_DATE\",\"TOTALCOUNT\",\"BAM_GROUPING_1\",\"BAM_GROUPING_2\",\n\t\tself.populateBottleneckData = function(data,type){\n\t\t\tif(data && data.rows && data.rows.length >0 ){\n\t\t\t\tvar c = util.columnAlias(data); // column name- index alias\n\t\t\t\tvar processTree = createNode(\"Process\",0, 1 ,0,1);\n\t\t\t\tfor(var i=0 ;i< data.rows.length ; i++){\n\t\t\t\t\tvar level = 0;  // to hold what level the current node is\n\n\t\t\t\t\tvar g1= data.rows[i].values[c.BAM_GROUPING_1];\n\t\t\t\t\tvar g2= data.rows[i].values[c.BAM_GROUPING_2];\n\t\t\t\t\tvar g3= data.rows[i].values[c.BAM_GROUPING_3];\n\t\t\t\t\tif (type === treeMapDatatype.PROCESS){\n\t\t\t\t\t\tvar lev =  g1 + g2 + g3; // get the current level , Process will be 2 , task will be 1 , assigness will be 0\n\t\t\t\t\t\tlevel = 2-lev;  //  Reversing the order\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar lev =  g1 + g2; // get the current level task will be 1 , assigness will be 0  OR  assigness will be 1 , task will be 0\n\t\t\t\t\t\tlevel = 1-lev; //  Reversing the order\n\t\t\t\t\t}\n\t\t\t\t\tvar depth = level;  // To hold at what depth we are at currently\n\t\t\t\t\tappendChildNodes(processTree, data.rows[i] ,level,depth, c.AVG_DAYS_UNTIL_DUE_DATE, c.TOTALCOUNT,type);\n\t\t\t\t}\n\t\t\t\tself.nodeValues([processTree]);\n\t\t\t}else{\n\t\t\t\tself.nodeValues([]);\n\t\t\t}\n\t\t\t// remove overlays for loading\n\t\t\t$('#bpm-dsb-wkld-bottleneck-treemap-overlay').removeClass('bpm-dsb-load-overlay');\n\t\t};\n\n\t\t// ---- helper methods for Bottle neck Treemaps----------------------\n\n\t\t// Method to create a node of the tree map\n\t\t// Calculate lebel by checking the type and current level\n\t\tfunction createNode(title, days, count,level,type) {\n\t\t\tvar quartile = '8';\n\t\t\tif(days){\n\t\t\t\tdays = +days.toFixed(2);\n\t\t\t}\n\t\t\tvar dateString = days ? days : 'N.A';\n\n\t\t\tvar label = \"\";\n\t\t\tif(type === treeMapDatatype.PROCESS){\n\t\t\t\tlabel = level === 0 ? self.bundle.workload.treemap.process : level ===1 ?  self.bundle.workload.treemap.task :  self.bundle.workload.treemap.assignee;\n\t\t\t}else if(type === treeMapDatatype.TASK){\n\t\t\t\tlabel = level === 0 ?  self.bundle.workload.treemap.task : self.bundle.workload.treemap.assignee;\n\t\t\t}else{\n\t\t\t\tlabel = level === 1 ?   self.bundle.workload.treemap.task : self.bundle.workload.treemap.assignee;\n\t\t\t}\n\n\t\t\t//if (days < 0) // 1st quartile\n\t\t\t//\tquartile = '0';\n\t\t\t//else if (days >= 0 && days <1)\n\t\t\t//\tquartile = '1';\n\t\t\t//else if (days >= 1 && days <2)\n\t\t\t//\tquartile = '2';\n\t\t\t//else if (days >= 2 && days <3)\n\t\t\t//\tquartile = '3';\n\t\t\t//else if (days >= 3 && days <4)\n\t\t\t//\tquartile = '4';\n\t\t\t//else if (days >= 4 && days <5)\n\t\t\t//\tquartile = '5';\n\t\t\t//else if (days >= 5 && days <6)\n\t\t\t//\tquartile = '6';\n\t\t\t//else if (days >= 6 && days <7)\n\t\t\t//\tquartile = '7';\n\n\t\t\tif (days < 0) // 1st quartile\n\t\t\t\tquartile = 'overdue';\n\t\t\telse if (days > 0 && days <7)\n\t\t\t\tquartile = 'due';\n\t\t\telse\n\t\t\t\tquartile = 'on_track';\n\n\n\t\t\treturn {label: title,\n\t\t\t\tid: title,\n\t\t\t\tvalue: count,\n\t\t\t\tcolor: getColor(quartile),\n\t\t\t\tnodes : [],\n\t\t\t\tshortDesc: label + \" : \" + title +\n\t\t\t\t\"&lt;br/&gt;\"+ self.bundle.workload.treemap.sizeLabel + \" : \" + count +\n\t\t\t\t\"&lt;br/&gt;\" +  self.bundle.workload.treemap.colorLabel + \" : \" + dateString\n\t\t\t};\n\t\t}\n\n\t\tfunction getColor(quartile) {\n\t\t\treturn handler.getValue(quartile);\n\t\t}\n\n\t\t// recursive function to insert the node at correct postion of the tree\n\t\t// Didn't have much time to write this algo , See if it can be improved performance wise\n\t\tfunction appendChildNodes(parentNode, child,level,depth ,dateIndex , countIndex , type) {\n\t\t\tif (depth === 0){\n\t\t\t\t// we are at the leaf node , create a node and push it in the parent node list\n\t\t\t\tvar node = createNode(child.values[level],child.values[dateIndex], child.values[countIndex],  level ,type);\n\t\t\t\tparentNode.nodes.push(node);\n\t\t\t}else{\n\t\t\t\t// we are not at leaf yet , find the correct new parent from the parentNode child list\n\t\t\t\t// and pass this node to the new parent to handle\n\t\t\t\tfor (var i=0 ;i<parentNode.nodes.length; i++){\n\t\t\t\t\tif (parentNode.nodes[i].id === child.values[level-depth]){\n\t\t\t\t\t\tappendChildNodes(parentNode.nodes[i], child ,level ,depth-1,dateIndex,countIndex, type);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// ------ Loading Mechanism -------------------\n\t\tself.parent.selectedTab.subscribe(function(tab) {\n\t\t\tif (tab === 2){\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\t\t// ------- Code for Filtering and offCanvas --------------------------\n\t\tself.parent.filterApplied.subscribe(function() {\n\t\t\tif (self.parent.selectedTab() === 2) {\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\n\t\tthis.handleAttached = function(info) {\n\t\t\t//self.loadData();\n\t\t}\n\n\t}\n\n\treturn workloadDashboardContainerModel;\n});\n\n",
    "\ndefine('text!pcs/charts/dashboard/view/dashboards/workloadDashboard.html',[],function () { return '<div class=\"oj-offcanvas-outer-wrapper bpm-dsb-panel\">\\n\\n\\t<div data-bind=\"template: { name: \\'bpm-dsb-icon-bar-template\\', data: $data }\"></div>\\n\\n\\t<h1 data-bind=\"text: bundle.workload.title\"></h1>\\n\\n\\t<div  class=\"oj-sm-12 bpm-dsb-center-align\" >\\n\\t\\t<div  class=\"bpm-dsb-center-align\" >\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-dark-grey-bg right-width-zero\">\\n\\t\\t\\t\\t<div data-bind=\"text:openCount\" class=\"bpm-dsb-billboard-number\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.workload.billboard.total_open , attr : { title : bundle.workload.billboard.total_open }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-green-bg right-width-zero\">\\n\\t\\t\\t\\t<div data-bind=\"text:onTrackCount\" class=\"bpm-dsb-billboard-number bpm-dsb-dark-green-numb\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.workload.billboard.on_track , attr : { title : bundle.workload.billboard.on_track }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-orange-bg right-width-zero\">\\n\\t\\t\\t\\t<div data-bind=\"text:dueCount\" class=\"bpm-dsb-billboard-number bpm-dsb-dark-orange-numb\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.workload.billboard.due_this_week , attr : { title : bundle.workload.billboard.due_this_week }\"></div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-red-bg\">\\n\\t\\t\\t\\t<div data-bind=\"text:overdueCount\" class=\"bpm-dsb-billboard-number bpm-dsb-dark-red-numb\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.workload.billboard.overdue , attr : { title : bundle.workload.billboard.overdue }\"></div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n\\n\\t<div id=\\'buttons-container\\' style=\"text-align: center;\" class=\"stats-margin\">\\n\\t\\t<div id=\"chartType\"  class=\"workload-chartType oj-button-half-chrome oj-button-primary\" data-bind=\"ojComponent: {component: \\'ojButtonset\\', checked: dataType,\\n\\t\\t\\t\\t\\t\\t\\toptionChange: handleDataTypeChange}\"\\n\\t\\t\\t aria-label=\"Choose Chart Type\">\\n\\t\\t\\t<!-- ko foreach: dataTypeRadios -->\\n\\t\\t\\t<label data-bind=\"attr: {for: id , title: label}\"></label>\\n\\t\\t\\t<input type=\"radio\" name=\"chart\" data-bind=\"value: id, attr: {id: id},\\n\\t\\t\\t\\t\\t\\t\\tojComponent: { component: \\'ojButton\\', label: label }\"/>\\n\\t\\t\\t<span class=\"btn-separator\"></span>\\n\\t\\t\\t<!-- /ko -->\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\"oj-flex \" id=\\'bpm-dsb-wkld-chart-container\\'>\\n\\t\\t<div class=\"oj-flex-item oj-sm-12 oj-md-6 oj-lg-4 oj-xl-4 oj-col \">\\n\\t\\t\\t<!--<h3 style=\"text-align: center\"><span data-bind=\"text: bundle.workload.billboard.on_track\"></span></h3>-->\\n\\t\\t\\t<div class=\"bpm-dsb-chart-container\">\\n\\t\\t\\t\\t<div id=\"bpm-dsb-wrkld-chart-ontrack\" data-bind=\"ojComponent: {\\n\\t\\t\\t\\t\\t\\tcomponent: \\'ojChart\\',\\n\\t\\t\\t\\t\\t\\ttype: \\'bar\\',\\n\\t\\t\\t\\t\\t\\torientation: \\'horizontal\\',\\n\\t\\t\\t\\t\\t\\tstack: \\'on\\',\\n\\t\\t\\t\\t\\t\\tseries: barSeriesValueOnTrack,\\n\\t\\t\\t\\t\\t\\tgroups: barGroupsValueOnTrack,\\n\\t\\t\\t\\t\\t\\tzoomAndScroll: \\'live\\',\\n\\t\\t\\t\\t\\t\\toverview: {rendered: \\'on\\'},\\n\\t\\t\\t\\t\\t\\tdataCursor:\\'on\\',\\n\\t\\t\\t\\t\\t\\tlegend: {rendered: \\'on\\'},\\n\\t\\t\\t\\t\\t\\tanimationOnDisplay: \\'auto\\',\\n\\t\\t\\t\\t\\t\\tanimationOnDataChange: \\'auto\\',\\n\\t\\t\\t\\t\\t\\thoverBehavior: \\'dim\\',\\n\\t\\t\\t\\t\\t\\thideAndShowBehavior: \\'withRescale\\',\\n\\t\\t\\t\\t\\t\\tyAxis: {minStep :1},\\n\\t\\t\\t\\t\\t\\ttranslations : { labelNoData :  bundle.workload.chart.no_open_task},\\n\\t\\t\\t\\t\\t\\ttitle : {text :  bundle.workload.billboard.on_track , halign : \\'center\\' }\\n\\t\\t\\t\\t\\t}\"\\n\\t\\t\\t\\t\\t class=\"bpm-dsb-chart-height\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div id=\"bpm-dsb-wrkld-chart-ontrack-overlay\"/>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\"oj-flex-item oj-sm-12 oj-md-6 oj-lg-4 oj-xl-4 oj-col verticalLine\">\\n\\t\\t\\t<!--<h3 style=\"text-align: center\"><span data-bind=\"text: bundle.workload.billboard.due_this_week\"></span></h3>-->\\n\\t\\t\\t<div class=\"bpm-dsb-chart-container\">\\n\\t\\t\\t\\t<div id=\"bpm-dsb-wrkld-chart-due\" data-bind=\"ojComponent: {\\n\\t\\t\\t\\t\\t\\tcomponent: \\'ojChart\\',\\n\\t\\t\\t\\t\\t\\ttype: \\'bar\\',\\n\\t\\t\\t\\t\\t\\torientation: \\'horizontal\\',\\n\\t\\t\\t\\t\\t\\tstack: \\'on\\',\\n\\t\\t\\t\\t\\t\\tseries: barSeriesValueDueWeek,\\n\\t\\t\\t\\t\\t\\tgroups: barGroupsValueDueWeek,\\n\\t\\t\\t\\t\\t\\tlegend: {rendered: \\'on\\'},\\n\\t\\t\\t\\t\\t\\tzoomAndScroll: \\'live\\',\\n\\t\\t\\t\\t\\t\\toverview: {rendered: \\'on\\'},\\n\\t\\t\\t\\t\\t\\tdataCursor:\\'on\\',\\n\\t\\t\\t\\t\\t\\tanimationOnDisplay: \\'auto\\',\\n\\t\\t\\t\\t\\t\\tanimationOnDataChange: \\'auto\\',\\n\\t\\t\\t\\t\\t\\thoverBehavior: \\'dim\\',\\n\\t\\t\\t\\t\\t\\thideAndShowBehavior: \\'withRescale\\',\\n\\t\\t\\t\\t\\t\\ttranslations : { labelNoData :  bundle.workload.chart.due_this_week},\\n\\t\\t\\t\\t\\t\\ttitle : {text :  bundle.workload.billboard.due_this_week , halign : \\'center\\' },\\n\\t\\t\\t\\t\\t\\tyAxis: {minStep :1}\\n\\t\\t\\t\\t\\t}\"\\n\\t\\t\\t\\t\\t class=\"bpm-dsb-chart-height\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div id=\"bpm-dsb-wrkld-chart-due-overlay\"/>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\"oj-flex-item oj-sm-12 oj-md-6 oj-lg-4 oj-xl-4 oj-col verticalLine\">\\n\\t\\t\\t<!--<h3 style=\"text-align: center\"><span data-bind=\"text: bundle.workload.billboard.overdue\"></span></h3>-->\\n\\t\\t\\t<div class=\"bpm-dsb-chart-container\">\\n\\t\\t\\t\\t<div id=\"bpm-dsb-wrkld-chart-overdue\" data-bind=\"ojComponent: {\\n\\t\\t\\t\\t\\t\\tcomponent: \\'ojChart\\',\\n\\t\\t\\t\\t\\t\\ttype: \\'bar\\',\\n\\t\\t\\t\\t\\t\\torientation: \\'horizontal\\',\\n\\t\\t\\t\\t\\t\\tstack: \\'on\\',\\n\\t\\t\\t\\t\\t\\tseries: barSeriesValueOverdue,\\n\\t\\t\\t\\t\\t\\tgroups: barGroupsValueOverdue,\\n\\t\\t\\t\\t\\t\\tzoomAndScroll: \\'live\\',\\n\\t\\t\\t\\t\\t\\toverview: {rendered: \\'on\\'},\\n\\t\\t\\t\\t\\t\\tdataCursor:\\'on\\',\\n\\t\\t\\t\\t\\t\\tlegend: {rendered: \\'on\\'},\\n\\t\\t\\t\\t\\t\\tanimationOnDisplay: \\'auto\\',\\n\\t\\t\\t\\t\\t\\tanimationOnDataChange: \\'auto\\',\\n\\t\\t\\t\\t\\t\\thoverBehavior: \\'dim\\',\\n\\t\\t\\t\\t\\t\\thideAndShowBehavior: \\'withRescale\\',\\n\\t\\t\\t\\t\\t\\tyAxis: {minStep :1},\\n\\t\\t\\t\\t\\t\\ttranslations : { labelNoData : bundle.workload.chart.overdue},\\n\\t\\t\\t\\t\\t\\ttitle : {text :  bundle.workload.billboard.overdue , halign : \\'center\\' }\\n\\t\\t\\t\\t\\t}\"\\n\\t\\t\\t\\t\\t class=\"bpm-dsb-chart-height\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div id=\"bpm-dsb-wrkld-chart-overdue-overlay\"/>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\"oj-flex \" id=\\'bpm-dsb-wkld-treemap-container\\' style=\"display:none\">\\n\\n\\t\\t<div class=\"bpm-dsb-chart-container\">\\n\\t\\t\\t<div id=\\'bpm-dsb-wkld-bottleneck-treemap\\' data-bind=\"ojComponent: {\\n\\t\\t\\t\\tcomponent: \\'ojTreemap\\',\\n\\t\\t\\t\\tanimationOnDisplay: \\'auto\\',\\n\\t\\t\\t\\tanimationOnDataChange: \\'auto\\',\\n\\t\\t\\t\\tcolorLabel: bundle.workload.treemap.colorLabel,\\n\\t\\t\\t\\tsizeLabel: bundle.workload.treemap.sizeLabel,\\n\\t\\t\\t\\tnodes: nodeValues\\n\\t\\t\\t}\"\\n\\t\\t\\t\\t class=\"bpm-dsb-chart-height\" style=\"border:none;\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<div id=\"bpm-dsb-wkld-bottleneck-treemap-overlay\"/>\\n\\t\\t</div>\\n\\n\\t\\t<!--<div id=\\'legend-container\\' class=\"bpm-dsb-center-align\" style=\"width: 100%\">-->\\n\\t\\t<!--<div data-bind=\"ojComponent: {-->\\n\\t\\t<!--component: \\'ojLegend\\',-->\\n\\t\\t<!--orientation: \\'horizontal\\',-->\\n\\t\\t<!--textStyle: \\'font-size:14px;\\',-->\\n\\t\\t<!--sections: legendSections-->\\n\\t\\t<!--}\"-->\\n\\t\\t<!--style=\"min-width:500px;\" class=\"bpm-dsb-center-align\" >-->\\n\\t\\t<!--</div>-->\\n\\t\\t<!--</div>-->\\n\\t</div>\\n\\n\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 6/12/2015.\n */\n\ndefine('pcs/charts/dashboard/viewModel/dashboards/cycleTimeDashboard',['ojs/ojcore' ,'knockout', 'pcs/charts/dashboard/util', 'ojs/ojchart', 'ojL10n!pcs/resources/nls/dashboardResource'\n], function(oj, ko, util) {\n\t/**\n\t * The view model for the main content view template\n\t */\n\tfunction cycleTimeDashboardContainerModel(params) {\n\t\tvar self = this;\n\t\tvar loggerUtil =  require('pcs/util/loggerUtil');\n\n\t\t//Set the resourcebundle\n\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\n\t\tthis.parent = params.parent;\t// dashboardContainer\n\t\tthis.baseRestUrl = this.parent.baseRestUrl;\n\t\tself.restEndPoint = this.parent.baseRestUrl + this.parent.chartEndpoint;\n\t\tvar authInfo =this.parent.authInfo; // Login credentials\n\n\t\t// --- knockout bindings ------\n\t\tself.cycleSeries = ko.observableArray();\n\t\tself.cycleGroups = ko.observableArray();\n\t\tself.workloadSeries = ko.observableArray();\n\t\tself.workloadGroups = ko.observableArray();\n\n\t\tself.total = ko.observable(0);\n\t\tself.opened = ko.observable(0);\n\t\tself.closed = ko.observable(0);\n\n\t\tvar converterFactory = oj.Validation.converterFactory('number');\n\n\t\t// to remove decimal  in the workload chart values\n\t\tvar workloadDecimalConverter = converterFactory.createConverter({minimumFractionDigits: 0, maximumFractionDigits: 0});\n\t\tself.workloadValueConverter  = ko.observable(workloadDecimalConverter);\n\n\t\t// to remove decimal  in the cycle time chart values\n\t\tvar cycleDecimalConverter = converterFactory.createConverter({minimumFractionDigits: 0, maximumFractionDigits: 2});\n\t\tself.cycleValueConverter  = ko.observable(cycleDecimalConverter);\n\n\n\t\tself.viewBy = new ko.observable('BY_PROCESS');\n\t\tself.viewByLabel1 = ko.computed(function() {return self.viewBy() === 'BY_PROCESS' ?\n\t\t\tself.bundle.cycleTime.chart.process_cycle_time :\n\t\t\tself.bundle.cycleTime.chart.task_cycle_time;\n\t\t});\n\t\tself.viewByLabel2 = ko.computed(function() {return self.viewBy() === 'BY_PROCESS' ?\n\t\t\tself.bundle.cycleTime.chart.process_workload :\n\t\t\tself.bundle.cycleTime.chart.task_workload;\n\t\t});\n\n\t\tself.viewButtons = [\n\t\t\t{id: 'BY_PROCESS', label: self.bundle.cycleTime.button.by_process},\n\t\t\t{id: 'BY_TASK', label: self.bundle.cycleTime.button.by_task}\n\t\t];\n\n\t\t//  Method to refresh the content\n\t\tself.refresh = function(){\n\t\t\tself.loadData();\n\t\t\t//Refresh Process list too\n\t\t\tself.parent.loadProcessList();\n\t\t};\n\n\t\t// method to create the parameter list for the query\n\t\tself.paramList= function(){\n\t\t\tvar param = util.paramList(self);\n\t\t\treturn param;\n\t\t};\n\n\t\t// load/reload process data to display\n\t\tthis.loadData = function() {\n\t\t\tvar param =self.paramList();\n\n\t\t\t// Add overlays for loading\n\t\t\t$('#bpm-dsb-cycle-chart-cycle-overlay').addClass('bpm-dsb-load-overlay');\n\t\t\t$('#bpm-dsb-cycle-chart-wkld-overlay').addClass('bpm-dsb-load-overlay');\n\n\t\t\tself.load(\"CYCLE_TIME_\"+self.viewBy()+\"_BILLBOARD\"+param, self.populateCycleTimeBillboard);\n\t\t\tself.load(\"CYCLE_TIME_\"+self.viewBy()+\"_CHART\"+param, self.populateCycleTimeChart);\n\t\t\tself.load(\"WORKLOAD_\"+self.viewBy()+\"_CHART\"+param, self.populateWorkloadChart);\n\t\t}\n\n\t\tself.load = function(query, populate){\n\t\t\tvar url = self.restEndPoint + query;\n\t\t\t$.ajax\n\t\t\t({\n\t\t\t\ttype: \"GET\",\n\t\t\t\turl: url,\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\tif (authInfo) {\n\t\t\t\t\t\txhr.setRequestHeader('Authorization', authInfo);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\txhrFields: {\n\t\t\t\t\twithCredentials: true\n\t\t\t\t},\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tsuccess: function (json) {\n\t\t\t\t\tpopulate(json);\n\t\t\t\t},\n\t\t\t\terror: function ( jqXHR) {\n\t\t\t\t\tpopulate();\n\t\t\t\t\tutil.errorHandler(jqXHR);\n\t\t\t\t},\n\t\t\t\tfailure: function () {\n\t\t\t\t\tloggerUtil.log('failed in ' + query);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tself.populateCycleTimeBillboard = function(data) {\n\t\t\tif (data && data.rows) {\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\tvar row = data.rows[0];\n\t\t\t\tself.total(row.values[c.TOTAL_OPEN]+0);\n\t\t\t\tself.opened(row.values[c.TOTAL_OPENED_TODAY]+0);\n\t\t\t\tself.closed(row.values[c.TOTAL_CLOSED_TODAY]+0);\n\t\t\t}\n\t\t}\n\n\t\tself.populateCycleTimeChart = function(data) {\n\t\t\tvar dateRange = [];\n\t\t\tvar series = [];\n\n\t\t\tif (data && data.rows && data.rows.length >0) {\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\tvar processes = {};\t// or tasks\n\t\t\t\tdateRange = self.setDateRange(data.rows, c);\n\t\t\t\tvar startDate = dateRange[0];\n\t\t\t\t$.each(data.rows, function (index, row) {\n\t\t\t\t\tvar offset = self.dayOffset(row, startDate, c);\n\t\t\t\t\tvar procLabel = row.values[c.PROCESS_LABEL];\n\t\t\t\t\tif (!(procLabel in processes)) {\n\t\t\t\t\t\tprocesses[procLabel] = [];\t// sparse array for chart data\n\n\t\t\t\t\t\tfor (var i=0 ;i <dateRange.length ;i++ ){\n\t\t\t\t\t\t\tprocesses[procLabel][i] = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tprocesses[procLabel][offset] = row.values[c.AVG_CYCLE_TIME];\n\t\t\t\t});\n\n\t\t\t\tfor (var proc in processes) {\n\t\t\t\t\tseries.push({name: proc, items: processes[proc]});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// remove overlays for loading\n\t\t\t$('#bpm-dsb-cycle-chart-cycle-overlay').removeClass('bpm-dsb-load-overlay');\n\n\t\t\tself.cycleSeries(series);\n\t\t\tself.cycleGroups(dateRange);\n\n\t\t};\n\n\t\tself.populateWorkloadChart = function(data) {\n\t\t\tvar dateRange = [];\n\t\t\tvar series = [];\n\n\t\t\tif (data && data.rows  && data.rows.length >0) {\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\tvar processes = {};\t// or tasks\n\t\t\t\tdateRange = self.setDateRange(data.rows,c);\n\t\t\t\tvar startDate = dateRange[0];\n\t\t\t\t$.each(data.rows,function(index,row) {\n\t\t\t\t\tvar offset = self.dayOffset(row,startDate,c);\n\t\t\t\t\tvar procLabel = row.values[c.PROCESS_LABEL];\n\t\t\t\t\tif (!(procLabel in processes))\n\t\t\t\t\t\tprocesses[procLabel] = [];\t// sparse array for chart data\n\t\t\t\t\tprocesses[procLabel][offset] = row.values[c.TOTALWORKLOAD];\n\t\t\t\t});\n\n\t\t\t\tfor (var proc in processes) {\n\t\t\t\t\tseries.push({name: proc, items: processes[proc]});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// remove overlays for loading\n\t\t\t$('#bpm-dsb-cycle-chart-wkld-overlay').removeClass('bpm-dsb-load-overlay');\n\n\t\t\tself.workloadSeries(series);\n\t\t\tself.workloadGroups(dateRange);\n\t\t};\n\n\t\t// utility function to calculate day offset for chart positioning\n\t\tself.dayOffset = function(row,startDate,c) {\n\t\t\tvar d = new Date(row.values[c.YEAR_PROCESS_DATE],row.values[c.MONTH_PROCESS_DATE]-1,row.values[c.DAYOFMONTH_PROCESS_DATE]);\n\t\t\treturn (d.getTime() - startDate.getTime()) / (24*60*60*1000);\n\t\t};\n\n\t\t// utility function to set up data range for charts\n\t\tself.setDateRange = function(rowData,c) {\n\t\t\tvar v = rowData[0].values;\n\t\t\tvar startingDate = new Date(v[c.YEAR_PROCESS_DATE],v[c.MONTH_PROCESS_DATE]-1,v[c.DAYOFMONTH_PROCESS_DATE]);\n\t\t\tv = rowData[rowData.length-1].values;\n\t\t\tvar endingDate = new Date(v[c.YEAR_PROCESS_DATE],v[c.MONTH_PROCESS_DATE]-1,v[c.DAYOFMONTH_PROCESS_DATE]);\n\t\t\tvar nDays = (endingDate.getTime() - startingDate.getTime() + 1) / (24*60*60*1000);\n\t\t\tvar d = new Date(startingDate);\n\t\t\td.setHours(0,0,0,0);\n\t\t\tvar dateRange = [];\n\t\t\tfor (var i=0; i<nDays; i++) {\n\t\t\t\tdateRange.push(new Date(d));\n\t\t\t\td.setDate(d.getDate()+1);\n\t\t\t}\n\t\t\treturn dateRange;\n\t\t}\n\n\n\n\t\tself.viewBy.subscribe(function() {self.loadData();});\n\n\n\t\t// ------ Loading Mechanism -------------------\n\t\tself.parent.selectedTab.subscribe(function(tab) {\n\t\t\tif (tab === 3){\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\t\t// ------- Code for Filtering and offCanvas --------------------------\n\t\tself.parent.filterApplied.subscribe(function() {\n\t\t\tif (self.parent.selectedTab() === 3) {\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\t\tthis.handleAttached = function(info) {\n\t\t\t//self.loadData();\n\t\t}\n\t}\n\n\treturn cycleTimeDashboardContainerModel;\n});\n\n",
    "\ndefine('text!pcs/charts/dashboard/view/dashboards/cycleTimeDashboard.html',[],function () { return '<div class=\"oj-offcanvas-outer-wrapper bpm-dsb-panel\">\\n\\n\\t<div data-bind=\"template: { name: \\'bpm-dsb-icon-bar-template\\', data: $data }\"></div>\\n\\n\\t<h1 data-bind=\"text: bundle.cycleTime.title\"></h1>\\n\\n\\t<div id=\"viewBy-container\" class=\"trend-viewBy-container\">\\n\\t\\t<div id=\"viewBy\" class=\"oj-button-half-chrome oj-button-primary trend-viewBy\"\\n\\t\\t\\t data-bind=\"ojComponent: {component: \\'ojButtonset\\', checked: viewBy}\"\\n\\t\\t\\t aria-label=\"Select a view\">\\n\\t\\t\\t<!-- ko foreach: viewButtons -->\\n\\t\\t\\t<label data-bind=\"attr: {for: id , title: label}\"></label>\\n\\t\\t\\t<input type=\"radio\" name=\"viewBy\"\\n\\t\\t\\t\\t   data-bind=\"value: id, attr: {id: id},\\n\\t\\t\\t\\t\\t\\t\\t  ojComponent: {component: \\'ojButton\\', label: label}\"/>\\n\\t\\t\\t<span class=\"btn-separator\"></span>\\n\\t\\t\\t<!-- /ko -->\\n\\t\\t</div>\\n\\t</div>\\n\\t<div  class=\"oj-sm-12 bpm-dsb-center-align stats-margin\">\\n\\t\\t<div   class=\"bpm-dsb-center-align\" >\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-dark-grey-bg right-width-zero\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\" data-bind=\"text: total\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.cycleTime.billboard.total_open , attr : { title : bundle.cycleTime.billboard.total_open }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-grey-bg right-width-zero\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\" data-bind=\"text: opened\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.cycleTime.billboard.opened_today , attr : { title : bundle.cycleTime.billboard.opened_today }\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-grey-bg\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\" data-bind=\"text: closed\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\"\\n\\t\\t\\t\\t\\t data-bind=\"text: bundle.cycleTime.billboard.closed_today , attr : { title : bundle.cycleTime.billboard.closed_today }\"></div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\"oj-flex\">\\n\\t\\t<div id=\"cycleTimeChart\" class=\"oj-flex-item oj-col oj-sm-12 oj-md-6\">\\n\\t\\t\\t<!--<h3 data-bind=\"text: viewByLabel1\"></h3>-->\\n\\t\\t\\t<div class=\"bpm-dsb-chart-container\">\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tdata-bind=\"ojComponent: {\\n\\t\\t\\t\\t\\tcomponent: \\'ojChart\\',\\n\\t\\t\\t\\t\\ttype: \\'line\\',\\n\\t\\t\\t\\t\\tseries: cycleSeries,\\n\\t\\t\\t\\t\\tgroups: cycleGroups,\\n\\t\\t\\t\\t\\tanimationOnDisplay: \\'auto\\',\\n\\t\\t\\t\\t\\thoverBehavior: \\'dim\\',\\n\\t\\t\\t\\t\\ttimeAxisType: \\'enabled\\',\\n\\t\\t\\t\\t\\tzoomAndScroll: \\'live\\',\\n\\t\\t\\t\\t\\toverview: {rendered: \\'on\\'},\\n\\t\\t\\t\\t\\thideAndShowBehavior: \\'withRescale\\',\\n\\t\\t\\t\\t\\tyAxis: {title: bundle.cycleTime.chart.days},\\n\\t\\t\\t\\t\\tstyleDefaults: {markerSize: 18},\\n\\t\\t\\t\\t\\txAxis: {step :86400000},\\n\\t\\t\\t\\t\\ttranslations : { labelNoData : bundle.cycleTime.chart.no_data_cycle},\\n\\t\\t\\t\\t\\ttitle : {text :  viewByLabel1() , halign : \\'plotAreaCenter\\' },\\n\\t\\t\\t\\t\\tvalueFormats: [{type: \\'series\\', tooltipLabel:  bundle.cycleTime.chart.process},\\n\\t\\t\\t\\t\\t \\t\\t\\t\\t{type: \\'value\\', tooltipLabel:  bundle.cycleTime.chart.time_days, scaling : \\'none\\'  ,converter : ko.toJS(cycleValueConverter)}]\\n\\t\\t\\t\\t}\" style=\"width: 100%; height: 500px\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div id=\"bpm-dsb-cycle-chart-cycle-overlay\"/>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div id=\"workloadChart\" class=\"oj-flex-item oj-col oj-sm-12 oj-md-6 verticalLine\">\\n\\t\\t\\t<!--<h3 data-bind=\"text: viewByLabel2\"></h3>-->\\n\\t\\t\\t<div class=\"bpm-dsb-chart-container\">\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tdata-bind=\"ojComponent: {\\n\\t\\t\\t\\t\\tcomponent: \\'ojChart\\',\\n\\t\\t\\t\\t\\ttype: \\'line\\',\\n\\t\\t\\t\\t\\tseries: workloadSeries,\\n\\t\\t\\t\\t\\tgroups: workloadGroups,\\n\\t\\t\\t\\t\\tanimationOnDisplay: \\'auto\\',\\n\\t\\t\\t\\t\\thoverBehavior: \\'dim\\',\\n\\t\\t\\t\\t\\ttimeAxisType: \\'enabled\\',\\n\\t\\t\\t\\t\\tzoomAndScroll: \\'live\\',\\n\\t\\t\\t\\t\\toverview: {rendered: \\'on\\'},\\n\\t\\t\\t\\t\\thideAndShowBehavior: \\'withRescale\\',\\n\\t\\t\\t\\t\\ttranslations : { labelNoData : bundle.cycleTime.chart.no_data_wkld},\\n\\t\\t\\t\\t\\ttitle : {text :  viewByLabel2() , halign : \\'plotAreaCenter\\' },\\n\\t\\t\\t\\t\\tyAxis: {minStep :1 , title: bundle.cycleTime.chart.count},\\n\\t\\t\\t\\t\\txAxis: {step :86400000},\\n\\t\\t\\t\\t\\tvalueFormats: [{type: \\'series\\', tooltipLabel:  bundle.cycleTime.chart.process},\\n\\t\\t\\t\\t\\t \\t\\t\\t\\t{type: \\'value\\', tooltipLabel: bundle.cycleTime.chart.count, scaling : \\'none\\'  ,converter : ko.toJS(workloadValueConverter)}]\\n\\t\\t\\t\\t}\" style=\"width: 100%; height: 500px\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div id=\"bpm-dsb-cycle-chart-wkld-overlay\"/>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 6/12/2015.\n */\n\ndefine('pcs/charts/dashboard/viewModel/dashboards/closedDashboard',['ojs/ojcore' ,'knockout','pcs/charts/dashboard/util', 'jquery', 'ojs/ojtable', 'ojs/ojbutton', 'ojL10n!pcs/resources/nls/dashboardResource'\n], function(oj, ko, util, $) {\n\t/**\n\t * The view model for the main content view template\n\t */\n\tfunction closedDashboardContainerModel(params) {\n\t\tvar self = this;\n\t\tvar loggerUtil =  require('pcs/util/loggerUtil');\n\n\t\t//Set the resourcebundle\n\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\n\t\tthis.parent = params.parent;\t// dashboardContainer\n\t\tthis.baseRestUrl = this.parent.baseRestUrl;\n\t\tthis.restEndPoint = this.parent.baseRestUrl + this.parent.chartEndpoint;\n\t\tvar authInfo =this.parent.authInfo; // Login credentials\n\n\t\t// --- knockout bindings ------\n\t\tself.processes = ko.observableArray([]);\n\t\tself.datasource = new oj.ArrayTableDataSource(self.processes,{idAttribute: \"index\"});\n\t\tself.period = ko.observable('today');\n\n\t\tself.periodButtons = [\n\t\t\t{id: 'today', label: self.bundle.closed.button.today},\n\t\t\t{id: 'week', label: self.bundle.closed.button.this_week},\n\t\t\t{id: 'month', label: self.bundle.closed.button.this_month}\n\t\t];\n\n\t\tself.periodLabels = {\n\t\t\ttoday: [self.bundle.closed.period.today,\n\t\t\t\tself.bundle.closed.period.yesterday],\n\t\t\tweek: [self.bundle.closed.period.this_week,\n\t\t\t\tself.bundle.closed.period.last_week],\n\t\t\tmonth: [self.bundle.closed.period.this_month,\n\t\t\t\tself.bundle.closed.period.last_month]\n\t\t};\n\n\t\tself.periodQueries = {\n\t\t\ttoday: 'TODAY',\n\t\t\tweek: 'THIS_WEEK',\n\t\t\tmonth: 'THIS_MONTH'\n\t\t};\n\n\t\tself.totals = ko.observable([0,0,0,0]);\n\n\t\tself.handlePeriodChange = function() {\n\t\t\tself.loadData();\n\t\t\t// temporary hack due to OJTABLE: CHANGING COLUMNS DOES NOT CHANGE COLUMN HEADERS\n\t\t\tvar table = document.getElementById(\"closedProcesses\");\n\t\t\tko.cleanNode(table);\n\t\t\tko.applyBindings(self,table);\n\t\t};\n\n\t\tself.renderHeader = function(context) {\n\t\t\tvar column = context.columnIndex;\n\t\t\tif (column > 4) {\n\t\t\t\tvar labels = [self.bundle.closed.table.completed,\n\t\t\t\t\tself.bundle.closed.table.aborted,\n\t\t\t\t\tself.bundle.closed.table.errored,\n\t\t\t\t\tself.bundle.closed.table.avg_cycle,\n\t\t\t\t\tself.bundle.closed.table.avg_cycle,\n\t\t\t\t\tself.bundle.closed.table.max_cycle\n\t\t\t\t];\n\t\t\t\tvar lines = [labels[column-2], self.periodLabels[self.period()][(column == 6) ? 1 : 0]];\n\t\t\t\tcontext.columnHeaderSortableIconRenderer(null, function(headerContentDiv)\n\t\t\t\t{\n\t\t\t\t\tfor (var i=0; i<lines.length; i++) {\n\t\t\t\t\t\tvar headerTextDiv = $(document.createElement('div'));\n\t\t\t\t\t\theaderTextDiv.text(lines[i]);\n\t\t\t\t\t\theaderContentDiv.append(headerTextDiv);\n\t\t\t\t\t}\n\t\t\t\t\theaderContentDiv.parent().attr(\"style\", \"height:auto; text-align: center;\");\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\n\t\tself.columns = [{headerText: self.bundle.closed.table.application, field: 'application', style: 'width: 24%'},\n\t\t\t{headerText: self.bundle.closed.table.process, field: 'process', style: 'width: 25%'},\n\t\t\t{headerText: self.bundle.closed.table.completed, field: 'completed', style: 'width: 8.5%', className: 'bpm-dsb-closed-tbl-succ-column bpm-dsb-light-green-bg'},\n\t\t\t{headerText: self.bundle.closed.table.aborted, field: 'aborted', style: 'width: 8.5%', className: 'bpm-dsb-closed-tbl-fail-column bpm-dsb-light-red-bg'},\n\t\t\t{headerText:  self.bundle.closed.table.errored, field: 'errored', style: 'width: 8.5%', className: 'bpm-dsb-closed-tbl-fail-column bpm-dsb-light-red-bg'},\n\t\t\t{field: 'avgThis', style: 'width: 8.5%', className: 'bpm-dsb-closed-tbl-column', template: 'bpm_charts_closed_proc_avg_cycle_tmpl'},\n\t\t\t{field: 'avgLast', style: 'width: 8.5%', className: 'bpm-dsb-closed-tbl-column'},\n\t\t\t{field: 'max', style: 'width: 8.5%', className: 'bpm-dsb-closed-tbl-max-column'}\n\t\t];\n\n\t\t//  Method to refresh the content\n\t\tself.refresh = function(){\n\t\t\tself.loadData();\n\t\t\t//Refresh Process list too\n\t\t\tself.parent.loadProcessList();\n\t\t};\n\n\t\t// method to create the parameter list for the query\n\t\tself.paramList= function(){\n\t\t\tvar param = util.paramList(self);\n\t\t\treturn param;\n\t\t};\n\n\t\t// load/reload process data to display\n\t\tthis.loadData = function() {\n\t\t\tvar param =self.paramList();\n\n\t\t\t// Add overlays for loading\n\t\t\t$('#bpm-dsb-closed-table-overlay').addClass('bpm-dsb-load-overlay');\n\n\t\t\tvar q = \"CLOSED_PROCESS_ANALYSIS_\" + self.periodQueries[self.period()];\n\t\t\tself.load(q + \"_BILLBOARD\" + param, self.populateClosedBillboard);\n\t\t\tself.load(q + \"_TABLE\" + param, self.populateClosedTable);\n\t\t};\n\n\t\tself.load = function(query, populate){\n\t\t\tvar url = self.restEndPoint + query;\n\t\t\t$.ajax\n\t\t\t({\n\t\t\t\ttype: \"GET\",\n\t\t\t\turl: url,\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\tif (authInfo) {\n\t\t\t\t\t\txhr.setRequestHeader('Authorization', authInfo);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\txhrFields: {\n\t\t\t\t\twithCredentials: true\n\t\t\t\t},\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tsuccess: function (json) {\n\t\t\t\t\tpopulate(json);\n\t\t\t\t},\n\t\t\t\terror: function ( jqXHR) {\n\t\t\t\t\tpopulate();\n\t\t\t\t\tutil.errorHandler(jqXHR);\n\t\t\t\t},\n\t\t\t\tfailure: function () {\n\t\t\t\t\tloggerUtil.log('failed in ' + query);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tself.populateClosedBillboard = function(data){\n\t\t\tif(data && data.rows){\n\t\t\t\tvar totals = [0,0,0,0];\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\tvar row = data.rows[0];\n\t\t\t\ttotals[0] = row.values[c.TOTAL_CLOSED]+0;\n\t\t\t\ttotals[1] = row.values[c.TOTAL_COMPLETED]+0;\n\t\t\t\ttotals[2] = row.values[c.TOTAL_ABORTED]+0;\n\t\t\t\ttotals[3] = row.values[c.TOTAL_FAULTED]+0;\n\t\t\t\tself.totals(totals);\n\t\t\t}\n\t\t};\n\n\t\tself.populateClosedTable = function(data){\n\t\t\tvar p_array = [];\n\n\t\t\tif (data && data.rows) {\n\t\t\t\tvar c = util.columnAlias(data);\n\t\t\t\t$.each(data.rows,function(index,row) {\n\t\t\t\t\tvar p = {};\n\t\t\t\t\tp.index = index;\t// for idAttribute needed by ojTable for some reason\n\t\t\t\t\tp.application = row.values[c.COMPOSITE_NAME];\n\t\t\t\t\tp.process = row.values[c.PROCESS_LABEL];\n\t\t\t\t\tp.completed = row.values[c.TOTAL_COMPLETED]+0;\n\t\t\t\t\tp.aborted = row.values[c.TOTAL_ABORTED]+0;\n\t\t\t\t\tp.errored = row.values[c.TOTAL_FAULTED]+0;\n\t\t\t\t\tp.avgThis = (row.values[c.CURR_AVG_CYCLE_TIME_IN_DAYS]+0).toFixed(1);\n\t\t\t\t\tp.avgLast = (row.values[c.PREV_AVG_CYCLE_TIME_IN_DAYS]+0).toFixed(1);\n\t\t\t\t\tp.isCycletimeIncreasing = row.values[c.IS_CYCLE_TIME_INCREASING]+0;\n\t\t\t\t\tp.max = (row.values[c.MAX_CYCLE_TIME_IN_DAYS]+0).toFixed(1);\n\t\t\t\t\tp_array.push(p);\n\t\t\t\t});\n\t\t\t}\n\t\t\t// remove overlays for loading\n\t\t\t$('#bpm-dsb-closed-table-overlay').removeClass('bpm-dsb-load-overlay');\n\n\t\t\tself.processes(p_array);\n\t\t};\n\n\t\t// ------ Loading Mechanism -------------------\n\t\tself.parent.selectedTab.subscribe(function(tab) {\n\t\t\tif (tab === 4){\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\t\t// ------- Code for Filtering and offCanvas --------------------------\n\t\tself.parent.filterApplied.subscribe(function() {\n\t\t\tif (self.parent.selectedTab() === 4) {\n\t\t\t\tself.loadData();\n\t\t\t}\n\t\t});\n\n\t\tthis.handleAttached = function(info) {\n\t\t\t//self.loadData();\n\t\t}\n\n\t}\n\n\treturn closedDashboardContainerModel;\n});\n\n",
    "\ndefine('text!pcs/charts/dashboard/view/dashboards/closedDashboard.html',[],function () { return '<div class=\"oj-offcanvas-outer-wrapper bpm-dsb-panel\">\\n\\n\\t<div data-bind=\"template: { name: \\'bpm-dsb-icon-bar-template\\', data: $data }\"></div>\\n\\n\\t<h1 data-bind=\"text: bundle.closed.title\"></h1>\\n\\n\\t<div id=\"period-container\" class=\"closed-period-container\">\\n\\t\\t<div id=\"period\" class=\"closed-period oj-button-half-chrome oj-button-primary\"\\n\\t\\t\\t data-bind=\"ojComponent: {component: \\'ojButtonset\\', checked: period,\\n\\t\\t\\t\\t\\t\\t\\t\\t  optionChange: handlePeriodChange}\"\\n\\t\\t\\t aria-label=\"Select a reporting period\">\\n\\t\\t\\t<!-- ko foreach: periodButtons -->\\n\\t\\t\\t<label data-bind=\"attr: {for: id, title: label}\"></label>\\n\\t\\t\\t<input type=\"radio\" name=\"period\"\\n\\t\\t\\t\\t   data-bind=\"value: id, attr: {id: id},\\n\\t\\t\\t\\t\\t\\t\\t  ojComponent: {component: \\'ojButton\\', label: label}\"/>\\n\\t\\t\\t<span class=\"btn-separator\"></span>\\n\\t\\t\\t<!-- /ko -->\\n\\t\\t</div>\\n\\t</div>\\n\\t<div  class=\"oj-sm-12 bpm-dsb-center-align stats-margin\">\\n\\t\\t<div class=\"bpm-dsb-center-align\" >\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-dark-grey-bg right-width-zero\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number\" data-bind=\"text: totals()[0]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\">\\n\\t\\t\\t\\t\\t<span data-bind=\"text:bundle.closed.billboard.total_closed , attr : { title : bundle.closed.billboard.total_closed }\"></span>\\n\\t\\t\\t\\t\\t<!--<br/>-->\\n\\t\\t\\t\\t\\t<!--<span data-bind=\"text: periodLabels[period()][0]\"></span>-->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-green-bg right-width-zero\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number bpm-dsb-dark-green-numb\" data-bind=\"text: totals()[1]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\">\\n\\t\\t\\t\\t\\t<span data-bind=\"text:bundle.closed.billboard.completed , attr : { title : bundle.closed.billboard.completed }\"></span>\\n\\t\\t\\t\\t\\t<!--<br/>-->\\n\\t\\t\\t\\t\\t<!--<span data-bind=\"text: periodLabels[period()][0]\"></span>-->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-red-bg right-width-zero\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number bpm-dsb-dark-red-numb\" data-bind=\"text: totals()[2]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\">\\n\\t\\t\\t\\t\\t<span data-bind=\"text:bundle.closed.billboard.aborted , attr : { title : bundle.closed.billboard.aborted }\"></span>\\n\\t\\t\\t\\t\\t<!--<br/>-->\\n\\t\\t\\t\\t\\t<!--<span data-bind=\"text: periodLabels[period()][0]\"></span>-->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\"bpm-dsb-billb-box bpm-dsb-light-red-bg\">\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-number bpm-dsb-dark-red-numb\" data-bind=\"text: totals()[3]\"></div>\\n\\t\\t\\t\\t<div class=\"bpm-dsb-billboard-title\">\\n\\t\\t\\t\\t\\t<span data-bind=\"text:bundle.closed.billboard.errored , attr : { title : bundle.closed.billboard.errored }\"></span>\\n\\t\\t\\t\\t\\t<!--<br/>-->\\n\\t\\t\\t\\t\\t<!--<span data-bind=\"text: periodLabels[period()][0]\"></span>-->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\"bpm-dsb-chart-container oj-flex\">\\n\\t\\t<table id=\"closedProcesses\" summary=\"Closed Processes\" aria-label=\"Closed Processes Table\"\\n\\t\\t\\t   data-bind=\"ojComponent: {component: \\'ojTable\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t data: datasource,\\n\\t\\t\\t\\t\\t\\t\\t\\t columns: columns,\\n\\t\\t\\t\\t\\t\\t\\t\\t columnsDefault: {headerRenderer: renderHeader},\\n\\t\\t\\t\\t\\t\\t\\t\\t rootAttributes: {\\'style\\': \\'width: 100%; height: 100%; font-size: 16px\\'}}\">\\n\\t\\t</table>\\n\\t\\t<div id=\"bpm-dsb-closed-table-overlay\"/>\\n\\t</div>\\n\\n\\t<!-- This template is used in the Avg cycle Column of the above table -->\\n\\t<script type=\"text/html\" id=\"bpm_charts_closed_proc_avg_cycle_tmpl\">\\n\\t\\t<td>\\n\\t\\t\\t<span data-bind=\"text: avgThis\"></span>\\n\\t\\t\\t<!-- ko if: isCycletimeIncreasing === 1 -->\\n\\t\\t\\t<span class=\"bpm-dsb-closed-tbl-cycle-inc\" data-bind=\"attr :{title : $parent.bundle.closed.table.increased}\"></span>\\n\\t\\t\\t<!-- /ko -->\\n\\t\\t\\t<!-- ko if: isCycletimeIncreasing === -1 -->\\n\\t\\t\\t<span class=\"bpm-dsb-closed-tbl-cycle-dec\" data-bind=\"attr :{title : $parent.bundle.closed.table.decreased}\"></span>\\n\\t\\t\\t<!-- /ko -->\\n\\t\\t</td>\\n\\t</script>\\n\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 6/25/2015.\n */\n\ndefine('pcs/charts/dashboard/viewModel/dashboards/filters/processFilter',['ojs/ojcore', 'knockout', 'pcs/charts/dashboard/util',   'ojs/ojinputnumber','ojs/ojoffcanvas', 'ojs/ojbutton', 'ojs/ojinputtext', 'ojs/ojcheckboxset', 'ojL10n!pcs/resources/nls/dashboardResource'\n], function (oj, ko, util) {\n\t/**\n\t * The view model for the main content view template\n\t */\n\tfunction processFilterModel(params) {\n\t\tvar self = this;\n\n\t\t//Set the resourcebundle\n\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\n\t\tself.parent = params.parent;\t// hold the instance of Container\n\n\t\t// ---- bindings for  UI -------\n\t\tself.searchText = ko.observable();\n\n\t\tself.processList =\tko.observableArray();  // List of processes to show in UI\n\t\tself.actualProcessList = [];  // temp list to hold the all processes names returned by the Rest. used for remove duplicates\n\n\t\tself.processes = ko.observableArray();  // list of currently selected prcocesses\n\n\t\t// Custom Binding for 'ALL' check box , Its checked when all processes are selected, and unchecked if not\n\t\tself.selectAllProcess = ko.computed({\n\t\t\tread: function () {\n\t\t\t\tvar isAllSelected = self.processes().length === self.actualProcessList.length;\n\t\t\t\treturn isAllSelected;\n\t\t\t},\n\t\t\twrite: function (value) {\n\t\t\t\tself.processes.removeAll();\n\t\t\t\tif(value === true){\n\t\t\t\t\tfor(var i=0 ;i <self.processList().length ;i ++){\n\t\t\t\t\t\tvar proc = self.processList()[i];\n\t\t\t\t\t\tself.processes.push(proc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tself.showSelectAll = ko.computed(function() {\n\n\t\t\tif (self.processList().length != self.actualProcessList.length){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\t// --- knocut bindings for the filter panel\n\t\tself.assignees = ko.observable([\"Roles and Groups\",\"Users\"]);\n\t\tself.dateRange = ko.observable(30);\n\t\tself.topN = ko.observable(10);\n\n\t\t// The saved values which will be used for creating parameter list\n\t\tself.selectedAssignees = [\"Roles and Groups\",\"Users\"]; // By default all the assignee is selected\n\t\tself.selectedDateRange = 30;\t\t\t// binding for date range\n\t\tself.selectedTopN = 10;\t\t// binding for tpp N\n\t\tself.selectedProcesses = [];\n\t\tself.selectedSelectAllProcess = true;\n\n\n\t\t// to refresh the process list\n\t\tself.parent.processListChangeSwitch.subscribe(function() {\n\t\t\tself.populateProcessList(self.parent.processData);\n\t\t});\n\n\t\t//-- Method to populate Process List\n\t\tself.populateProcessList = function(data){\n\t\t\tvar isAllSelected = self.selectAllProcess();\n\n\t\t\t// clean the old list\n\t\t\tself.processList.removeAll();\n\t\t\tself.actualProcessList = [];\n\n\t\t\t// If user has not altered the selected process , recreate it too\n\t\t\t// else retain the selectedProcessList as the chart data will be according the selected process list\n\t\t\tif  (isAllSelected){\n\t\t\t\tself.processes.removeAll();\n\t\t\t}\n\n\t\t\tif(data && data.rows &&  data.rows.length >0){\n\t\t\t\tfor(var i=0 ;i <data.rows.length ;i ++){\n\t\t\t\t\tself.actualProcessList.push(data.rows[i].values[0]);\n\t\t\t\t\tself.processList.push(data.rows[i].values[0]);\n\t\t\t\t\tif  (isAllSelected){\n\t\t\t\t\t\tself.processes.push(data.rows[i].values[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// copy the local saved process  in saved process object\n\t\t\tself.selectedProcesses = self.processes.slice();\n\n\t\t\t// Refresh the JEt bindings\n\t\t\t$(\".bpm-dsb-processSetId\").ojCheckboxset(\"refresh\");\n\t\t\t$(\".bpm-dsb-process-list-loading\").hide();\n\t\t};\n\n\t\t// -- method to search for a process locally\n\t\tself.search = function(){\n\t\t\tvar key = self.searchText();\n\t\t\tif(key != undefined && key != null){\n\t\t\t\tkey = key.trim().toLowerCase();\n\t\t\t\tself.processList.removeAll();\n\t\t\t\tself.processes.removeAll();\n\n\t\t\t\tfor(var i=0 ;i <self.actualProcessList.length ;i ++){\n\t\t\t\t\tif(self.actualProcessList[i].toLowerCase().indexOf(key) !== -1){\n\t\t\t\t\t\tself.processList.push(self.actualProcessList[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Refresh the JEt bindings\n\t\t\t\t$(\".bpm-dsb-processSetId\").ojCheckboxset(\"refresh\");\n\t\t\t}\n\t\t};\n\n\t\t//-- populate the list once Module binding has been applied\n\t\tthis.handleBindingsApplied = function(info) {\n\t\t\tself.populateProcessList(self.parent.processData);\n\t\t};\n\n\n\t\tself.apply = function(){\n\t\t\t// save the values -\n\t\t\tself.selectedAssignees = self.assignees(); // By default all the assignee is selected\n\t\t\tself.selectedDateRange = self.dateRange();\t\t\t// binding for date range\n\t\t\tself.selectedTopN = self.topN();\n\t\t\tself.selectedProcesses = self.processes.slice();\n\t\t\tself.selectedSelectAllProcess = self.selectAllProcess();\n\n\t\t\tself.parent.filterPanel = self ;\n\t\t\tself.parent.apply();\n\t\t};\n\n\t\tself.reset= function(){\n\t\t\tself.assignees(self.selectedAssignees);\n\t\t\tself.dateRange(self.selectedDateRange);\n\t\t\tself.topN(self.selectedTopN);\n\t\t\tself.processes.removeAll();\n\t\t\tfor(var i=0 ;i <self.selectedProcesses.length ;i++){\n\t\t\t\tself.processes.push(self.selectedProcesses[i]);\n\t\t\t}\n\t\t};\n\n\t\tself.handleAttached = function(info) {\n\t\t\t//add a close listener so when a offcanvas is autoDismissed we can synchronize the page state.\n\t\t\t$(\"#endDrawer\").on(\"ojclose\",\n\t\t\t\tfunction () {\n\t\t\t\t\t// reset the values\n\t\t\t\t\tself.reset();\n\t\t\t\t});\n\t\t\t// by default populate the filter panel object in parent\n\t\t\tself.parent.filterPanel = self ;\n\t\t};\n\n\n\n\t}\n\n\treturn processFilterModel;\n});\n\n",
    "\ndefine('text!pcs/charts/dashboard/view/dashboards/filters/processFilter.html',[],function () { return '<div class=\"demo-offcanvas-close\">\\n\\t<button class=\"oj-button-sm \"\\n\\t\\t\\taria-label=\"close\" role=\"button\"\\n\\t\\t\\tdata-bind=\"click: $parent.closeInner, ojComponent: {component:\\'ojButton\\',\\n                                     label: bundle.processFilter.close,\\n                                     display: \\'icons\\',\\n                                     icons: {start: \\'oj-fwk-icon-cross oj-fwk-icon\\'}}\">\\n\\t</button>\\n</div>\\n\\n<br/>\\n\\n<div class=\"bpm-dsb-parameter-box-width\" >\\n\\n\\t<div data-bind=\"if : $parent.selectedTab() === 3\">\\n\\t\\t<label for=\"dateRangeInput\" ><span data-bind=\"text: bundle.processFilter.date_range\"></span>\\t</label>\\n\\t\\t<input id=\"dateRangeInput\"\\n\\t\\t\\t   data-bind=\"ojComponent: {component: \\'ojInputNumber\\',min:0,value:dateRange} , attr :{placeholder : bundle.processFilter.days}\"/>\\n\\t\\t<br/>\\n\\t\\t<br/>\\n\\t\\t<hr/>\\n\\t\\t<br/>\\n\\t</div>\\n\\n\\t<div>\\n\\t\\t<label for=\"input\" id=\"processlabelid\"><span data-bind=\"text: bundle.processFilter.select_process\"></span>\\t</label>\\n\\t\\t<input id=\"input\" placeholder=\"\" data-bind=\"ojComponent: {component: \\'ojInputText\\',value : searchText}, attr :{placeholder : bundle.processFilter.search_process}\">\\n\\t\\t<button  data-bind=\"click: search,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   ojComponent: {component:\\'ojButton\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   label:  bundle.processFilter.search,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdisplay: \\'icons\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   icons: {start: \\'oj-fwk-icon-magnifier oj-fwk-icon\\'}}\">\\n\\t\\t</button>\\n\\n\\n\\t\\t<div  style=\"margin-top: 10px\" data-bind=\"if: showSelectAll\">\\n\\t\\t\\t<input type=\"checkbox\" id=\"checkboxAll\" data-bind=\"checked: selectAllProcess \" />\\n\\t\\t\\t<label for=\"checkboxAll\" style=\"margin-left: 8px;\" ><span data-bind=\"text: bundle.processFilter.all\"></span> </label>\\n\\t\\t</div>\\n\\t\\t<div class=\"bpm-dsb-process-list-loading bpm-dsb-parameter-box-width bpm-dsb-center-align\">\\n\\t\\t\\t<div class=\"bpm-dsb-loading bpm-dsb-center-align\"></div>\\n\\t\\t</div>\\n\\t\\t<div id=\"processSetId\" class=\"bpm-dsb-processSetId bpm-dsb-parameter-box-width\" aria-labelledby=\"processlabelid\" data-bind=\"ojComponent: {component: \\'ojCheckboxset\\', value: processes}\">\\n\\t\\t\\t<!-- ko foreach:processList -->\\n\\t\\t\\t<span class=\"oj-choice-row\">\\n\\t\\t\\t\\t\\t<input data-bind=\"attr: { value: $data , id: $data }\" type=\"checkbox\">\\n\\t\\t\\t\\t\\t<label data-bind=\"attr: { for: $data }\"><span data-bind=\"text :$data\"></span> </label>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t<!-- /ko  -->\\n\\t\\t</div>\\n\\n\\n\\t\\t<br/>\\n\\t\\t<br/>\\n\\t\\t<hr/>\\n\\t\\t<br/>\\n\\t</div>\\n\\n\\t<div data-bind=\"if :$parent.selectedTab() === 2 && $parent.workloadSubTab() !== \\'top10_by_task\\'\">\\n\\t\\t<label id=\"assigneelabelid\"><span data-bind=\"text: bundle.processFilter.show_assignee\"></span></label>\\n\\t\\t<div id=\"assigneeSetId\" aria-labelledby=\"assigneelabelid\"\\n\\t\\t\\t data-bind=\"ojComponent: {\\n\\t\\t\\t  component: \\'ojCheckboxset\\',\\n\\t\\t\\t  value: assignees}\" >\\n\\t\\t  <span class=\"oj-choice-row\">\\n\\t\\t\\t<input id=\"roles&Groups\" type=\"checkbox\" value=\"Roles and Groups\">\\n\\t\\t\\t<label for=\"roles&Groups\"><span data-bind=\"text: bundle.processFilter.roles_groups\"></span></label>\\n\\t\\t  </span>\\n\\t\\t\\t<span class=\"oj-choice-row\">\\n\\t\\t\\t<input id=\"user\" type=\"checkbox\" value=\"Users\">\\n\\t\\t\\t<label for=\"user\"><span data-bind=\"text: bundle.processFilter.users\"></span></label>\\n\\t\\t  </span>\\n\\t\\t</div>\\n\\t\\t<br/>\\n\\t\\t<br />\\n\\t\\t<hr/>\\n\\t\\t<br/>\\n\\t</div>\\n\\n\\t<div data-bind=\"if : $parent.selectedTab() === 3\">\\n\\t\\t<label for=\"topNRangeInput\" ><span data-bind=\"text: bundle.processFilter.show_top_N\"></span></label>\\n\\t\\t<input id=\"topNRangeInput\"\\n\\t\\t\\t   data-bind=\"ojComponent: {component: \\'ojInputNumber\\',min:0,value:topN}, attr :{placeholder : bundle.processFilter.top_N}\"/>\\n\\t\\t<br/>\\n\\t\\t<br/>\\n\\t\\t<hr/>\\n\\t\\t<br/>\\n\\t</div>\\n\\n\\t<div class=\"bpm-dsb-param-apply\">\\n\\t\\t<button  data-bind=\"click: apply, attr: {title: bundle.processFilter.apply},\\n\\t\\t\\t\\t\\t\\t\\tojComponent: {component:\\'ojButton\\',\\n\\t\\t\\t\\t\\t\\t\\t  label: bundle.processFilter.apply,\\n\\t\\t\\t\\t\\t\\t\\t}\">\\n\\t\\t</button>\\n\\t</div>\\n\\n</div>\\n\\n';});\n\n",
    "/**\n * Created by nisabhar on 6/12/2015.\n */\n\ndefine('pcs/charts/dashboard/viewModel/dashboardContainer',['ojs/ojcore' ,'knockout', 'pcs/charts/dashboard/util', 'ojs/ojknockout' ,'ojs/ojtabs', 'ojs/ojoffcanvas', 'ojs/ojbutton' ,\n\t'ojs/ojinputtext', 'ojs/ojcheckboxset' ,'ojs/ojchart', 'ojs/ojlegend', 'ojs/ojdialog', 'ojL10n!pcs/resources/nls/dashboardResource',\n\t'pcs/charts/dashboard/viewModel/dashboards/healthDashboard', '!text!pcs/charts/dashboard/view/dashboards/healthDashboard.html',\n\t'pcs/charts/dashboard/viewModel/dashboards/openDashboard', '!text!pcs/charts/dashboard/view/dashboards/openDashboard.html',\n\t'pcs/charts/dashboard/viewModel/dashboards/workloadDashboard', '!text!pcs/charts/dashboard/view/dashboards/workloadDashboard.html',\n\t'pcs/charts/dashboard/viewModel/dashboards/cycleTimeDashboard', '!text!pcs/charts/dashboard/view/dashboards/cycleTimeDashboard.html',\n\t'pcs/charts/dashboard/viewModel/dashboards/closedDashboard', '!text!pcs/charts/dashboard/view/dashboards/closedDashboard.html',\n\t'pcs/charts/dashboard/viewModel/dashboards/filters/processFilter', '!text!pcs/charts/dashboard/view/dashboards/filters/processFilter.html'\n], function(oj, ko,util) {\n\t/**\n\t * The view model for the main content view template\n\t */\n\tfunction dashboardContainerModel(params) {\n\t\tvar self = this;\n\t\tvar loggerUtil =  require('pcs/util/loggerUtil');\n\n\t\tthis.parent = params.parent;\n\t\tthis.baseURL = this.parent.baseURL; //server address\n\t\tthis.baseRestUrl = this.parent.baseRestURL; //Rest  '/bpm/api/1.0/'\n\n\t\t//Set the resourcebundle\n\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\n\t\tthis.authInfo = this.parent.authInfo; // Login credentials\n\n\t\tthis.chartEndpoint = \"analytics/ootbqueries/\";\n\n\t\tthis.processTrackingPage = this.parent.processTrackingPage;\n\t\tthis.tasksPage = this.parent.tasksPage;\n\n\t\tthis.selectedTab = ko.observable(0);  // Binding for left side currently selected tabs\n\t\tthis.workloadSubTab = ko.observable('top10_by_task') ; // Sub tab selected on workload page\n\n\t\t//----For Process List data ------\n\t\tself.processRestEndPoint = this.baseRestUrl + this.chartEndpoint + \"PROCESS_LABEL_LIST\";\n\t\tself.processListChangeSwitch = ko.observable(false);   // A switch we will just do on off so that subscribers know data has been changed\n\t\tself.processData = [];\n\n\t\t// REST CALL to populate Process List\n\t\tself.loadProcessList = function(){\n\t\t\t//  loggerUtil.log(self.processRestEndPoint);\n\t\t\tvar url = self.processRestEndPoint ;\n\t\t\tvar response = $.ajax\n\t\t\t({\n\t\t\t\ttype: \"GET\",\n\t\t\t\turl: url,\n\t\t\t\tbeforeSend: function (xhr) {\n\t\t\t\t\tif (self.authInfo) {\n\t\t\t\t\t\txhr.setRequestHeader('Authorization', self.authInfo);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\txhrFields: {\n\t\t\t\t\twithCredentials: true\n\t\t\t\t},\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tsuccess: function (json) {\n\t\t\t\t\tself.populateProcessList(json);\n\t\t\t\t},\n\t\t\t\terror: function ( jqXHR) {\n\t\t\t\t\tutil.errorHandler(jqXHR);\n\t\t\t\t},\n\t\t\t\tfailure: function () {\n\t\t\t\t\tloggerUtil.log('error in loadProcessList');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t//-- Method to populate Process List----\n\t\tself.populateProcessList = function(data) {\n\t\t\tself.processData = data;\n\t\t\tself.processListChangeSwitch( !self.processListChangeSwitch());\n\t\t};\n\n\t\tself.loadProcessList();\n\n\t\t//----For off canvas data ------\n\t\tself.filterApplied = ko.observable(false);\n\n\t\t// An object that maps launcher ids to offcanvas objects\n\t\tself.offcanvasMap =\n\t\t\t{\n\t\t\t\t\"displayMode\": \"overlay\",\n\t\t\t\t\"selector\": \"#endDrawer\"\n\t\t\t};\n\n\t\t// toggle show/hide offcanvas\n\t\tself.toggleDrawer = function(model, event)\n\t\t{\n\t\t\tvar launcherId = event.currentTarget.id;\n\t\t\tvar drawer = self.offcanvasMap;\n\t\t\tdrawer.launcherId = launcherId;\n\t\t\treturn oj.OffcanvasUtils.open(drawer);\n\t\t}\n\n\t\t// hide offcanvas from the viewport\n\t\tself.closeInner = function() {\n\t\t\treturn oj.OffcanvasUtils.close( self.offcanvasMap);\n\t\t};\n\n\t\tself.apply = function(){\n\t\t\tself.filterApplied( !self.filterApplied());\n\t\t\tself.closeInner();\n\t\t};\n\n\n\t\tself.closeErrorDialog= function(){\n\t\t\t$(\"#bpm-dsb-error-dialog\").ojDialog(\"close\");\n\t\t};\n\n\t\t// Hide the dashboard loading indicator\n\t\t$(\"#bpm-dsb-loading-indicator\").hide();\n\n\t}\n\n\treturn dashboardContainerModel;\n});\n\n",
    "\ndefine('text!pcs/charts/dashboard/view/dashboardContainer.html',[],function () { return '<div id=\"bpm-dsb-tabs-container\">\\n\\t<!-- offcanvas outer most wrapper -->\\n\\t<div class=\"oj-offcanvas-outer-wrapper\">\\n\\t\\t<div id=\"bpm-dsb-vtabs\" class=\"oj-tabs-text-icon\"\\n\\t\\t\\t data-bind=\"ojComponent:{component: \\'ojTabs\\' , edge : \\'start\\', selected: selectedTab}\">\\n\\t\\t\\t<ul>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-top bpm-dsb-health-icon demo-icon-font bpm-dsb-nav-icon\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"attr: {title: bundle.container.health}\"\\n\\t\\t\\t\\t\\t\\t\\t role=\"img\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-sm-only-hide bpm-dsb-nav-text\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"text: bundle.container.health, attr: {title: bundle.container.health}\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-start bpm-dsb-open-icon demo-icon-font bpm-dsb-nav-icon\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"attr: {title: bundle.container.open}\"\\n\\t\\t\\t\\t\\t\\t\\t role=\"img\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-sm-only-hide bpm-dsb-nav-text\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"text: bundle.container.open, attr: {title: bundle.container.open}\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-start bpm-dsb-wkld-icon demo-icon-font bpm-dsb-nav-icon\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"attr: {title: bundle.container.workload}\"\\n\\t\\t\\t\\t\\t\\t\\t role=\"img\">\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-sm-only-hide bpm-dsb-nav-text\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"text: bundle.container.workload, attr: {title: bundle.container.workload}\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-start bpm-dsb-cycle-icon demo-icon-font bpm-dsb-nav-icon\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"attr: {title: bundle.container.cycleTime}\"\\n\\t\\t\\t\\t\\t\\t\\t role=\"img\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-sm-only-hide bpm-dsb-nav-text\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"text: bundle.container.cycleTime, attr: {title: bundle.container.cycleTime}\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-start bpm-dsb-closed-icon demo-icon-font  bpm-dsb-nav-icon\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"attr: {title: bundle.container.closed}\"\\n\\t\\t\\t\\t\\t\\t\\t role=\"img\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\"oj-sm-only-hide bpm-dsb-nav-text\"\\n\\t\\t\\t\\t\\t\\t\\t data-bind=\"text: bundle.container.closed, attr: {title: bundle.container.closed}\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\n\\t\\t\\t<div id=\"bpm-dsb-health\" class=\"bpm-dsb-tab-panel\">\\n\\t\\t\\t\\t<div id=\"bpm-dsb-health-container\" data-bind=\"ojModule: { name: \\'pcs/charts/dashboard/viewModel/dashboards/healthDashboard\\', viewName: \\'pcs/charts/dashboard/view/dashboards/healthDashboard\\',\\n\\t\\t\\t\\t\\tparams: {parent: $data, loadImmediate: true}}\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div id=\"bpm-dsb-open\" class=\"bpm-dsb-tab-panel\">\\n\\t\\t\\t\\t<div id=\"bpm-dsb-open-container\" data-bind=\"ojModule: { name: \\'pcs/charts/dashboard/viewModel/dashboards/openDashboard\\', viewName: \\'pcs/charts/dashboard/view/dashboards/openDashboard\\',\\n\\t\\t\\t\\t\\tparams: {parent: $data}}\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div id=\"bpm-dsb-work\" class=\"bpm-dsb-tab-panel\">\\n\\t\\t\\t\\t<div id=\"bpm-dsb-work-container\"\\n\\t\\t\\t\\t\\t data-bind=\"ojModule: { name: \\'pcs/charts/dashboard/viewModel/dashboards/workloadDashboard\\', viewName: \\'pcs/charts/dashboard/view/dashboards/workloadDashboard\\',\\n\\t\\t\\t\\t\\tparams: {parent: $data}}\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div id=\"bpm-dsb-cycle\" class=\"bpm-dsb-tab-panel\">\\n\\t\\t\\t\\t<div id=\"bpm-dsb-cycle-container\"\\n\\t\\t\\t\\t\\t data-bind=\"ojModule: { name: \\'pcs/charts/dashboard/viewModel/dashboards/cycleTimeDashboard\\', viewName: \\'pcs/charts/dashboard/view/dashboards/cycleTimeDashboard\\',\\n\\t\\t\\t\\t\\tparams: {parent: $data}}\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div id=\"bpm-dsb-closed\" class=\"bpm-dsb-tab-panel\">\\n\\t\\t\\t\\t<div id=\"bpm-dsb-closed-container\" data-bind=\"ojModule: { name: \\'pcs/charts/dashboard/viewModel/dashboards/closedDashboard\\', viewName: \\'pcs/charts/dashboard/view/dashboards/closedDashboard\\',\\n\\t\\t\\t\\t\\tparams: {parent: $data}}\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- end offcanvas -->\\n\\t\\t<div id=\"endDrawer\" class=\"oj-offcanvas-end oj-panel\"\\t>\\n\\t\\t\\t<div id=\"bpm-dsb-proc-filter\" data-bind=\"ojModule: { name: \\'pcs/charts/dashboard/viewModel/dashboards/filters/processFilter\\', viewName: \\'pcs/charts/dashboard/view/dashboards/filters/processFilter\\',\\n\\t \\t\\t\\t\\t\\t\\t\\t\\tparams: {parent: $data}}\"></div>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<script type=\"text/html\" id=\"bpm-dsb-icon-bar-template\">\\n\\t\\t<div class=\"demo-main-content\" style=\"float: right\" >\\n\\t\\t\\t<button data-bind=\"click: parent.toggleDrawer, attr: {title: $parent.bundle.container.parameters},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   ojComponent: {component:\\'ojButton\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   label: bundle.container.parameters,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   icons: {start: \\'bpm-dsb-filter-icon oj-fwk-icon\\'}}\">\\n\\t\\t\\t</button>\\n\\t\\t\\t<button  data-bind=\"click: refresh, attr: {title: $parent.bundle.container.refresh},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   ojComponent: {component:\\'ojButton\\',\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   label: bundle.container.refresh,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   icons: {start: \\'bpm-dsb-refresh-icon oj-fwk-icon\\'}}\">\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t</script>\\n\\t<div style=\"display:none\" id=\"bpm-dsb-error-dialog\"\\n\\t\\t data-bind=\"attr : { title : bundle.container.error }, ojComponent:{component: \\'ojDialog\\', initialVisibility: \\'hide\\'}\">\\n\\t\\t<div class=\"oj-dialog-body\">\\n\\t\\t\\t<div id=\"bpm-dsb-error-dialog-custom-text\"/>\\n\\t\\t</div>\\n\\t\\t<div class=\"oj-dialog-footer\">\\n\\t\\t\\t<button id=\"okButton\"  data-bind=\"click : closeErrorDialog , ojComponent: {component: \\'ojButton\\', label: bundle.container.ok}\"> </button>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n';});\n\n",
    "/**\n * Created by nisabhar on 9/19/17.\n */\n\n\ndefine('pcs/pcs.dashboard',['ojs/ojcore', 'knockout', 'jquery','!text!pcs/charts/dashboard/templates/pcs-dashboard.html', 'pcs/util/pcsUtil', 'pcs/util/loggerUtil',\n\t\t'pcs/charts/dashboard/viewModel/dashboardContainer', '!text!pcs/charts/dashboard/view/dashboardContainer.html',\n\t\t'ojs/ojmodule', 'jqueryui-amd/widget'],\n\tfunction( oj, ko, $, tmpl,pcsUtil) {\n\t\t'use strict';\n\t\t// define your widget under pcs namespace\n\t\t$.widget('pcs.dashboard', {\n\t\t\t//Options to be used as defaults\n\t\t\toptions: {\n\t\t\t\t//data sources\n\t\t\t\tbaseUri: '',\n\t\t\t\tbaseRestUri : '/bpm/api/3.0/',\n\t\t\t\tusername : 'weblogic',\n\t\t\t\tpassword : 'weblogic1',\n\t\t\t\tprocessTrackingPage: 'processTracking.jspx',\n\t\t\t\ttasksPage          : 'worklist.jspx'\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates basic auth header for given username and password\n\t\t\t */\n\t\t\t_authHeader: function () {\n\t\t\t\treturn pcsUtil.getAuthInfo();\n\t\t\t},\n\n\t\t\t//Setup widget (eg. element creation, apply theming\n\t\t\t// , bind events etc.)\n\t\t\t_create: function () {\n\t\t\t\t// _create will automatically run the first time\n\t\t\t\t// this widget is called. Put the initial widget\n\t\t\t\t// setup code here, then you can access the element\n\t\t\t\t// on which the widget was called via this.element.\n\t\t\t\t// The options defined above can be accessed\n\t\t\t\t// via this.options this.element.addStuff();\n\t\t\t\tvar widget = this;\n\n\n\t\t\t\tthis.options.baseUri= pcsUtil.getServerURL();\n\n\n\t\t\t\tfunction rootViewModel() {\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tself.baseURL = widget.options.baseUri;\n\t\t\t\t\tself.baseRestURL = self.baseURL + widget.options.baseRestUri;\n\t\t\t\t\tself.processTrackingPage = self.baseURL + widget.options.processTrackingPage;\n\t\t\t\t\tself.tasksPage = self.baseURL + widget.options.tasksPage;\n\t\t\t\t\tself.authInfo = widget._authHeader(); // Login credentials\n\t\t\t\t}\n\n\t\t\t\tvar vm = new rootViewModel();\n\n\t\t\t\tthis.element.html(tmpl);\n\n\t\t\t\t//$('#globalBody').show();\n\n\t\t\t\t//bind your ViewModel for the content of whole page body.\n\t\t\t\tko.applyBindings(vm, this.element['0']);\n\t\t\t},\n\n\n\n\t\t\t// Respond to any changes the user makes to the option method\n\t\t\t_setOption: function (key, value) {\n\t\t\t\tthis.options[key] = value;\n\n\t\t\t\t// For UI 1.8, _setOption must be manually invoked\n\t\t\t\t// from the base widget\n\t\t\t\t$.Widget.prototype._setOption.apply(this, arguments);\n\t\t\t\t// For UI 1.9 the _super method can be used instead\n\t\t\t\t// this._super( \"_setOption\", key, value );\n\t\t\t}\n\t\t});\n\t});\n\n",
    "/**\n * Created by srayker on 01/12/2016.\n */\n\ndefine('pcs/pcs.unifiedCharts',['ojs/ojcore', 'knockout', 'jquery','!text!pcs/charts/unifiedCharts/templates/pcs-unified-container.html',\n\t\t'pcs/util/pcsUtil', 'pcs/util/loggerUtil','ojs/ojknockout', 'ojs/ojtabs' , 'ojL10n!pcs/resources/nls/dashboardResource' ,\n\t\t'pcs/pcs.visualization', 'pcs/pcs.dashboard', 'jqueryui-amd/widget'],\n\tfunction( oj, ko, $, tmpl,pcsUtil) {\n\t\t'use strict';\n\t\t// define your widget under pcs namespace\n\t\t$.widget('pcs.unifiedCharts', {\n            //Options to be used as defaults\n            options: {\n\t\t\t\tprocessTrackingPage: 'processTracking.jspx',\n\t\t\t\ttasksPage          : 'worklist.jspx'\n            },\n\n\t\t\t/**\n\t\t\t * Creates basic auth header for given username and password\n\t\t\t */\n\t\t\t_authHeader: function () {\n\t\t\t\treturn pcsUtil.getAuthInfo();\n\t\t\t},\n\n            //Setup widget (eg. element creation, apply theming\n            // , bind events etc.)\n            _create: function () {\n                // _create will automatically run the first time\n                // this widget is called. Put the initial widget\n                // setup code here, then you can access the element\n                // on which the widget was called via this.element.\n                // The options defined above can be accessed\n                // via this.options this.element.addStuff();\n                var widget = this;\n\n\t\t\t\tfunction Model() {\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tself.bundle = require('ojL10n!pcs/resources/nls/dashboardResource');\n\t\t\t\t}\n\n\t\t\t\tvar vm = new Model();\n\n                this.element.html(tmpl);\n                //bind your ViewModel for the content of whole page body.\n                ko.applyBindings(vm, this.element['0']);\n\n                $('#bpm-charts-dash').dashboard({\n                \tauthInfo : widget._authHeader(),\n\t\t\t\t\tprocessTrackingPage: widget.options.processTrackingPage,\n\t\t\t\t\ttasksPage          : widget.options.tasksPage\n                });\n                $('#bpm-charts-vis').visualization({\n                \tauthInfo : widget._authHeader(),\n\t\t\t\t\tprocessTrackingPage: widget.options.processTrackingPage,\n\t\t\t\t\ttasksPage          : widget.options.tasksPage\n                });\n            },\n\n\n\n            // Respond to any changes the user makes to the option method\n            _setOption: function (key, value) {\n                this.options[key] = value;\n\n                // For UI 1.8, _setOption must be manually invoked\n                // from the base widget\n                $.Widget.prototype._setOption.apply(this, arguments);\n                // For UI 1.9 the _super method can be used instead\n                // this._super( \"_setOption\", key, value );\n            }\n        });\n    });\n\n"
  ]
}